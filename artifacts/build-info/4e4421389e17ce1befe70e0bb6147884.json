{
	"id": "4e4421389e17ce1befe70e0bb6147884",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"initial-offering.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract LuxuryAssetOffering is ReentrancyGuard {\n    using SafeMath for uint256;\n    \n    struct AssetOwner {\n        address ownerAddress;\n        uint256 shares;\n        bool exists;\n    }\n    \n    struct Asset {\n        address originalOwner;     // Creator of the asset offering\n        string name;\n        uint256 totalShares;\n        uint256 sharesRemaining;\n        // uint256 minPricePerShare;\n        uint256 minimumTotalPrice; // Minimum total price for the asset\n        bool biddingClosed;\n        uint256 biddingEndTime;\n        address[] ownerAddresses;  // List of all owner addresses\n        mapping(address => AssetOwner) owners; // Mapping to find owner details\n    }\n    \n    struct Bid {\n        address bidder;\n        uint256 shareAmount;\n        uint256 pricePerShare;\n        bool allocated;\n    }\n    \n    mapping(uint256 => Asset) public assets;\n    mapping(uint256 => Bid[]) public assetBids;\n    uint256 public assetCount;\n    \n    // Events with indexed parameters\n    event AssetCreated(uint256 indexed assetId, address indexed originalOwner, string name, uint256 totalShares, uint256 minimumTotalPrice);\n    event BidPlaced(uint256 indexed assetId, address indexed bidder, uint256 shares, uint256 price);\n    event SharesAllocated(uint256 indexed assetId, address indexed bidder, uint256 shares, uint256 price);\n    event RefundIssued(address indexed bidder, uint256 amount);\n    event BiddingEnded(uint256 indexed assetId, bool successful, uint256 timestamp);\n    event OwnerAdded(uint256 indexed assetId, address indexed owner, uint256 shares);\n    event AssetCountUpdated(uint256 newCount);\n    \n    // Create new asset offering\n    function createAssetOffering(\n        string memory _name,\n        uint256 _totalShares,\n        uint256 _minPricePerShare,\n        uint256 _minimumTotalPrice,\n        uint256 _biddingDuration\n    ) external {\n        require(_totalShares > 0, \"Invalid share count\");\n        require(_minPricePerShare > 0, \"Invalid minimum price per share\");\n        require(_minimumTotalPrice > 0, \"Invalid minimum total price\");\n        require(bytes(_name).length > 0, \"Name cannot be empty\");\n        \n        assetCount++;\n        \n        Asset storage newAsset = assets[assetCount];\n        newAsset.originalOwner = msg.sender;\n        newAsset.name = _name;\n        newAsset.totalShares = _totalShares;\n        newAsset.sharesRemaining = _totalShares;\n        // newAsset.minPricePerShare = _minPricePerShare;\n        newAsset.minimumTotalPrice = _minimumTotalPrice;\n        newAsset.biddingClosed = false;\n        newAsset.biddingEndTime = block.timestamp + _biddingDuration;\n        \n        // Add original owner as the sole owner with all shares initially\n        newAsset.ownerAddresses.push(msg.sender);\n        newAsset.owners[msg.sender] = AssetOwner({\n            ownerAddress: msg.sender,\n            shares: _totalShares,\n            exists: true\n        });\n        \n        emit AssetCreated(assetCount, msg.sender, _name, _totalShares, _minimumTotalPrice);\n        emit OwnerAdded(assetCount, msg.sender, _totalShares);\n        emit AssetCountUpdated(assetCount);\n    }\n    \n    // Get latest asset count\n    function getLatestAssetCount() external view returns (uint256) {\n        return assetCount;\n    }\n    \n    // Get asset basic details\n    function getAssetBasicDetails(uint256 _assetId) external view returns (\n        address originalOwner,\n        string memory name,\n        uint256 totalShares,\n        uint256 sharesRemaining,\n        // uint256 minPricePerShare,\n        uint256 minimumTotalPrice,\n        bool biddingClosed,\n        uint256 biddingEndTime\n    ) {\n        require(_assetId > 0 && _assetId <= assetCount, \"Invalid asset ID\");\n        Asset storage asset = assets[_assetId];\n        \n        return (\n            asset.originalOwner,\n            asset.name,\n            asset.totalShares,\n            asset.sharesRemaining,\n            // asset.minPricePerShare,\n            asset.minimumTotalPrice,\n            asset.biddingClosed,\n            asset.biddingEndTime\n        );\n    }\n    \n    // Get all owners of an asset\n    function getAssetOwners(uint256 _assetId) external view returns (\n        address[] memory ownerAddresses,\n        uint256[] memory ownerShares\n    ) {\n        require(_assetId > 0 && _assetId <= assetCount, \"Invalid asset ID\");\n        Asset storage asset = assets[_assetId];\n        \n        uint256 ownerCount = asset.ownerAddresses.length;\n        ownerAddresses = new address[](ownerCount);\n        ownerShares = new uint256[](ownerCount);\n        \n        for (uint256 i = 0; i < ownerCount; i++) {\n            address ownerAddress = asset.ownerAddresses[i];\n            ownerAddresses[i] = ownerAddress;\n            ownerShares[i] = asset.owners[ownerAddress].shares;\n        }\n        \n        return (ownerAddresses, ownerShares);\n    }\n    \n    // Place bid for shares\n    function placeBid(uint256 _assetId, uint256 _shareAmount) external payable nonReentrant {\n        Asset storage asset = assets[_assetId];\n        require(!asset.biddingClosed, \"Bidding closed\");\n        require(block.timestamp < asset.biddingEndTime, \"Bidding period ended\");\n        require(_shareAmount > 0, \"Invalid share amount\");\n        // require(msg.value >= _shareAmount.mul(asset.minPricePerShare), \"Bid below minimum price per share\");\n        \n        // Store bid details\n        assetBids[_assetId].push(Bid({\n            bidder: msg.sender,\n            shareAmount: _shareAmount,\n            pricePerShare: msg.value.div(_shareAmount),\n            allocated: false\n        }));\n        \n        emit BidPlaced(_assetId, msg.sender, _shareAmount, msg.value.div(_shareAmount));\n    }\n    \n    // Get all bids for an asset\n    function getAssetBids(uint256 _assetId) external view returns (\n        address[] memory bidders,\n        uint256[] memory shareAmounts,\n        uint256[] memory pricesPerShare,\n        bool[] memory allocated\n    ) {\n        require(_assetId > 0 && _assetId <= assetCount, \"Invalid asset ID\");\n        \n        Bid[] storage bids = assetBids[_assetId];\n        uint256 bidCount = bids.length;\n        \n        bidders = new address[](bidCount);\n        shareAmounts = new uint256[](bidCount);\n        pricesPerShare = new uint256[](bidCount);\n        allocated = new bool[](bidCount);\n        \n        for (uint256 i = 0; i < bidCount; i++) {\n            bidders[i] = bids[i].bidder;\n            shareAmounts[i] = bids[i].shareAmount;\n            pricesPerShare[i] = bids[i].pricePerShare;\n            allocated[i] = bids[i].allocated;\n        }\n        \n        return (bidders, shareAmounts, pricesPerShare, allocated);\n    }\n    \n    // End bidding early\n    function endBidding(uint256 _assetId) external nonReentrant {\n        Asset storage asset = assets[_assetId];\n        require(msg.sender == asset.originalOwner, \"Unauthorized\");\n        require(!asset.biddingClosed, \"Bidding already closed\");\n        \n        // Mark bidding as closed\n        asset.biddingClosed = true;\n        \n        // Process bids if any exist\n        if(assetBids[_assetId].length > 0) {\n            _processBids(_assetId);\n        } else {\n            emit BiddingEnded(_assetId, false, block.timestamp);\n        }\n    }\n    \n    // Execute bidding allocation\n    function executeBidding(uint256 _assetId) external nonReentrant {\n        Asset storage asset = assets[_assetId];\n        require(msg.sender == asset.originalOwner, \"Unauthorized\");\n        require(!asset.biddingClosed, \"Bidding already closed\");\n        require(block.timestamp >= asset.biddingEndTime, \"Bidding period ongoing\");\n        \n        // Mark bidding as closed\n        asset.biddingClosed = true;\n        \n        // Process bids if any exist\n        if(assetBids[_assetId].length > 0) {\n            _processBids(_assetId);\n        } else {\n            emit BiddingEnded(_assetId, false, block.timestamp);\n        }\n    }\n    \n    // Internal function to process bids\n    function _processBids(uint256 _assetId) internal {\n        Asset storage asset = assets[_assetId];\n        \n        // Sort bids in descending order of price\n        _sortBids(_assetId);\n        \n        Bid[] storage bids = assetBids[_assetId];\n        \n        // First check: calculate total potential value to see if it meets minimum price\n        uint256 totalBidValue = 0;\n        uint256 sharesToAllocate = asset.sharesRemaining;\n        \n        for(uint256 i = 0; i < bids.length && sharesToAllocate > 0; i++) {\n            Bid storage bid = bids[i];\n            if(bid.allocated) continue;\n            \n            uint256 allocatableShares = (bid.shareAmount <= sharesToAllocate) \n                ? bid.shareAmount \n                : sharesToAllocate;\n                \n            totalBidValue = totalBidValue.add(allocatableShares.mul(bid.pricePerShare));\n            sharesToAllocate = sharesToAllocate.sub(allocatableShares);\n        }\n        \n        // Check if total bid value meets the minimum total price\n        bool successful = totalBidValue >= asset.minimumTotalPrice;\n        \n        if (successful) {\n            // Reset share allocation variables for actual allocation\n            asset.sharesRemaining = asset.totalShares;\n            \n            // Remove all shares from previous owners\n            for (uint256 i = 0; i < asset.ownerAddresses.length; i++) {\n                address ownerAddress = asset.ownerAddresses[i];\n                asset.owners[ownerAddress].shares = 0;\n            }\n            \n            // Reset owner list\n            delete asset.ownerAddresses;\n            \n            // Process the actual allocation\n            for(uint256 i = 0; i < bids.length; i++) {\n                if(asset.sharesRemaining == 0) break;\n                \n                Bid storage bid = bids[i];\n                if(bid.allocated) continue;\n                \n                uint256 allocatableShares = (bid.shareAmount <= asset.sharesRemaining) \n                    ? bid.shareAmount \n                    : asset.sharesRemaining;\n                \n                // Calculate required payment and refund excess\n                uint256 requiredPayment = allocatableShares.mul(bid.pricePerShare);\n                uint256 refundAmount = bid.shareAmount.mul(bid.pricePerShare).sub(requiredPayment);\n                \n                if(allocatableShares > 0) {\n                    // Transfer payment to original owner\n                    payable(asset.originalOwner).transfer(requiredPayment);\n                    \n                    // Update shares remaining\n                    asset.sharesRemaining = asset.sharesRemaining.sub(allocatableShares);\n                    bid.allocated = true;\n                    \n                    // Add or update owner\n                    if (!asset.owners[bid.bidder].exists) {\n                        asset.ownerAddresses.push(bid.bidder);\n                        asset.owners[bid.bidder] = AssetOwner({\n                            ownerAddress: bid.bidder,\n                            shares: allocatableShares,\n                            exists: true\n                        });\n                    } else {\n                        asset.owners[bid.bidder].shares = asset.owners[bid.bidder].shares.add(allocatableShares);\n                    }\n                    \n                    emit SharesAllocated(_assetId, bid.bidder, allocatableShares, bid.pricePerShare);\n                    emit OwnerAdded(_assetId, bid.bidder, allocatableShares);\n                }\n                \n                // Refund unallocated portion\n                if(refundAmount > 0) {\n                    payable(bid.bidder).transfer(refundAmount);\n                    emit RefundIssued(bid.bidder, refundAmount);\n                }\n            }\n        } else {\n            // Bidding failed, refund all bids\n            _refundAllBids(_assetId);\n        }\n        \n        emit BiddingEnded(_assetId, successful, block.timestamp);\n    }\n    \n    // Internal function to sort bids\n    function _sortBids(uint256 _assetId) internal {\n        Bid[] storage bids = assetBids[_assetId];\n        for(uint256 i = 0; i < bids.length; i++) {\n            for(uint256 j = i+1; j < bids.length; j++) {\n                if(bids[i].pricePerShare < bids[j].pricePerShare) {\n                    Bid memory temp = bids[i];\n                    bids[i] = bids[j];\n                    bids[j] = temp;\n                }\n            }\n        }\n    }\n    \n    // Internal function to refund all bids (when bidding fails)\n    function _refundAllBids(uint256 _assetId) internal {\n        Bid[] storage bids = assetBids[_assetId];\n        for(uint256 i = 0; i < bids.length; i++) {\n            if(!bids[i].allocated) {\n                uint256 refundAmount = bids[i].shareAmount.mul(bids[i].pricePerShare);\n                payable(bids[i].bidder).transfer(refundAmount);\n                emit RefundIssued(bids[i].bidder, refundAmount);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 100
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6692  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220284a68a02bf2545e85a7a5f1e7a7bdc4083bd772f22e9d275ed3f8d0149fc38764736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220284a68a02bf2545e85a7a5f1e7a7bdc4083bd772f22e9d275ed3f8d0149fc38764736f6c634300081d0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 BLOBBASEFEE PUSH9 0xA02BF2545E85A7A5F1 SWAPN 0xA7 0xBD 0xC4 ADDMOD EXTCODESIZE 0xD7 PUSH19 0xF22E9D275ED3F8D0149FC38764736F6C634300 ADDMOD SAR STOP CALLER ",
							"sourceMap": "482:6210:1:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6210:1;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220284a68a02bf2545e85a7a5f1e7a7bdc4083bd772f22e9d275ed3f8d0149fc38764736f6c634300081d0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 BLOBBASEFEE PUSH9 0xA02BF2545E85A7A5F1 SWAPN 0xA7 0xBD 0xC4 ADDMOD EXTCODESIZE 0xD7 PUSH19 0xF22E9D275ED3F8D0149FC38764736F6C634300 ADDMOD SAR STOP CALLER ",
							"sourceMap": "482:6210:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 482,
									"end": 6692,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220284a68a02bf2545e85a7a5f1e7a7bdc4083bd772f22e9d275ed3f8d0149fc38764736f6c634300081d0033",
									".code": [
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 482,
											"end": 6692,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"initial-offering.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"initial-offering.sol": {
				"LuxuryAssetOffering": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newCount",
									"type": "uint256"
								}
							],
							"name": "AssetCountUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "assetId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "originalOwner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalShares",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "minimumTotalPrice",
									"type": "uint256"
								}
							],
							"name": "AssetCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "assetId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "bidder",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "BidPlaced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "assetId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "successful",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "BiddingEnded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "assetId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								}
							],
							"name": "OwnerAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "bidder",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RefundIssued",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "assetId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "bidder",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shares",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "SharesAllocated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "assetBids",
							"outputs": [
								{
									"internalType": "address",
									"name": "bidder",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "shareAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "pricePerShare",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "allocated",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "assetCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "assets",
							"outputs": [
								{
									"internalType": "address",
									"name": "originalOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalShares",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "sharesRemaining",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minimumTotalPrice",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "biddingClosed",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "biddingEndTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "_name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "_totalShares",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_minPricePerShare",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_minimumTotalPrice",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_biddingDuration",
									"type": "uint256"
								}
							],
							"name": "createAssetOffering",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_assetId",
									"type": "uint256"
								}
							],
							"name": "endBidding",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_assetId",
									"type": "uint256"
								}
							],
							"name": "executeBidding",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_assetId",
									"type": "uint256"
								}
							],
							"name": "getAssetBasicDetails",
							"outputs": [
								{
									"internalType": "address",
									"name": "originalOwner",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalShares",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "sharesRemaining",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minimumTotalPrice",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "biddingClosed",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "biddingEndTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_assetId",
									"type": "uint256"
								}
							],
							"name": "getAssetBids",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "bidders",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "shareAmounts",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "pricesPerShare",
									"type": "uint256[]"
								},
								{
									"internalType": "bool[]",
									"name": "allocated",
									"type": "bool[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_assetId",
									"type": "uint256"
								}
							],
							"name": "getAssetOwners",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "ownerAddresses",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ownerShares",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getLatestAssetCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_assetId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_shareAmount",
									"type": "uint256"
								}
							],
							"name": "placeBid",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"initial-offering.sol\":179:13173  contract LuxuryAssetOffering is ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  sstore\n    /* \"initial-offering.sol\":179:13173  contract LuxuryAssetOffering is ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"initial-offering.sol\":179:13173  contract LuxuryAssetOffering is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x686735c5\n      gt\n      tag_13\n      jumpi\n      dup1\n      0x686735c5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa3d5f1e5\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb18cc358\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb468e0b0\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xcf35bdd0\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xeafe7a74\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_13:\n      dup1\n      0x0392cc45\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x093755ad\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x47582610\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x503e0578\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x57c90de5\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"initial-offering.sol\":5931:6859  function getAssetBids(uint256 _assetId) external view returns (... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_14:\n      pop\n      tag_15\n      tag_16\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"initial-offering.sol\":6894:7440  function endBidding(uint256 _assetId) external nonReentrant {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_23:\n      tag_24\n      jump\t// in\n    tag_22:\n      stop\n        /* \"initial-offering.sol\":3363:3460  function getLatestAssetCount() external view returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n        /* \"initial-offering.sol\":3443:3453  assetCount */\n      sload(0x03)\n        /* \"initial-offering.sol\":3363:3460  function getLatestAssetCount() external view returns (uint256) {... */\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":2475:2500   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2463:2465   */\n      0x20\n        /* \"#utility.yul\":2448:2466   */\n      add\n        /* \"initial-offering.sol\":3363:3460  function getLatestAssetCount() external view returns (uint256) {... */\n      tag_19\n        /* \"#utility.yul\":2329:2506   */\n      jump\n        /* \"initial-offering.sol\":1848:3323  function createAssetOffering(... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_22\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n        /* \"initial-offering.sol\":5092:5888  function placeBid(uint256 _assetId, uint256 _shareAmount) external payable nonReentrant {... */\n    tag_6:\n      tag_22\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n        /* \"initial-offering.sol\":4309:5054  function getAssetOwners(uint256 _assetId) external view returns (... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_41:\n      tag_42\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_19\n      swap3\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n        /* \"initial-offering.sol\":1057:1099  mapping(uint256 => Bid[]) public assetBids */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      tag_47\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5143:5175   */\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":5125:5176   */\n      dup6\n      mstore\n        /* \"#utility.yul\":5207:5209   */\n      0x20\n        /* \"#utility.yul\":5192:5210   */\n      dup6\n      add\n        /* \"#utility.yul\":5185:5219   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":5235:5253   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":5228:5262   */\n      mstore\n        /* \"#utility.yul\":5305:5319   */\n      iszero\n        /* \"#utility.yul\":5298:5320   */\n      iszero\n        /* \"#utility.yul\":5293:5295   */\n      0x60\n        /* \"#utility.yul\":5278:5296   */\n      dup3\n      add\n        /* \"#utility.yul\":5271:5321   */\n      mstore\n        /* \"#utility.yul\":5112:5115   */\n      0x80\n        /* \"#utility.yul\":5097:5116   */\n      add\n        /* \"initial-offering.sol\":1057:1099  mapping(uint256 => Bid[]) public assetBids */\n      tag_19\n        /* \"#utility.yul\":4900:5327   */\n      jump\n        /* \"initial-offering.sol\":3501:4265  function getAssetBasicDetails(uint256 _assetId) external view returns (... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_19\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_56\n      jump\t// in\n        /* \"initial-offering.sol\":7484:8118  function executeBidding(uint256 _assetId) external nonReentrant {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_22\n      tag_59\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n        /* \"initial-offering.sol\":1012:1051  mapping(uint256 => Asset) public assets */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_61\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_61:\n      pop\n      tag_52\n      tag_63\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_63:\n      tag_64\n      jump\t// in\n        /* \"initial-offering.sol\":1105:1130  uint256 public assetCount */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_26\n      sload(0x03)\n      dup2\n      jump\n        /* \"initial-offering.sol\":5931:6859  function getAssetBids(uint256 _assetId) external view returns (... */\n    tag_18:\n        /* \"initial-offering.sol\":6003:6027  address[] memory bidders */\n      0x60\n        /* \"initial-offering.sol\":6037:6066  uint256[] memory shareAmounts */\n      dup1\n        /* \"initial-offering.sol\":6076:6107  uint256[] memory pricesPerShare */\n      0x60\n        /* \"initial-offering.sol\":6117:6140  bool[] memory allocated */\n      dup1\n        /* \"initial-offering.sol\":6176:6177  0 */\n      0x00\n        /* \"initial-offering.sol\":6165:6173  _assetId */\n      dup6\n        /* \"initial-offering.sol\":6165:6177  _assetId > 0 */\n      gt\n        /* \"initial-offering.sol\":6165:6203  _assetId > 0 && _assetId <= assetCount */\n      dup1\n      iszero\n      tag_71\n      jumpi\n      pop\n        /* \"initial-offering.sol\":6193:6203  assetCount */\n      sload(0x03)\n        /* \"initial-offering.sol\":6181:6189  _assetId */\n      dup6\n        /* \"initial-offering.sol\":6181:6203  _assetId <= assetCount */\n      gt\n      iszero\n        /* \"initial-offering.sol\":6165:6203  _assetId > 0 && _assetId <= assetCount */\n    tag_71:\n        /* \"initial-offering.sol\":6157:6224  require(_assetId > 0 && _assetId <= assetCount, \"Invalid asset ID\") */\n      tag_72\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_72:\n        /* \"initial-offering.sol\":6243:6261  Bid[] storage bids */\n      0x00\n        /* \"initial-offering.sol\":6264:6283  assetBids[_assetId] */\n      dup6\n      dup2\n      mstore\n        /* \"initial-offering.sol\":6264:6273  assetBids */\n      0x02\n        /* \"initial-offering.sol\":6264:6283  assetBids[_assetId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"initial-offering.sol\":6312:6323  bids.length */\n      dup1\n      sload\n      dup1\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"initial-offering.sol\":6352:6375  new address[](bidCount) */\n      dup2\n      gt\n      iszero\n      tag_76\n      jumpi\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_78\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_78:\n      pop\n        /* \"initial-offering.sol\":6342:6375  bidders = new address[](bidCount) */\n      swap6\n      pop\n        /* \"initial-offering.sol\":6414:6422  bidCount */\n      dup1\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"initial-offering.sol\":6400:6423  new uint256[](bidCount) */\n      dup2\n      gt\n      iszero\n      tag_80\n      jumpi\n      tag_80\n      tag_77\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_81\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_81:\n      pop\n        /* \"initial-offering.sol\":6385:6423  shareAmounts = new uint256[](bidCount) */\n      swap5\n      pop\n        /* \"initial-offering.sol\":6464:6472  bidCount */\n      dup1\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"initial-offering.sol\":6450:6473  new uint256[](bidCount) */\n      dup2\n      gt\n      iszero\n      tag_83\n      jumpi\n      tag_83\n      tag_77\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_84:\n      pop\n        /* \"initial-offering.sol\":6433:6473  pricesPerShare = new uint256[](bidCount) */\n      swap4\n      pop\n        /* \"initial-offering.sol\":6506:6514  bidCount */\n      dup1\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"initial-offering.sol\":6495:6515  new bool[](bidCount) */\n      dup2\n      gt\n      iszero\n      tag_86\n      jumpi\n      tag_86\n      tag_77\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"initial-offering.sol\":6483:6515  allocated = new bool[](bidCount) */\n      swap3\n      pop\n        /* \"initial-offering.sol\":6539:6548  uint256 i */\n      0x00\n        /* \"initial-offering.sol\":6534:6777  for (uint256 i = 0; i < bidCount; i++) {... */\n    tag_88:\n        /* \"initial-offering.sol\":6558:6566  bidCount */\n      dup2\n        /* \"initial-offering.sol\":6554:6555  i */\n      dup2\n        /* \"initial-offering.sol\":6554:6566  i < bidCount */\n      lt\n        /* \"initial-offering.sol\":6534:6777  for (uint256 i = 0; i < bidCount; i++) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"initial-offering.sol\":6600:6604  bids */\n      dup3\n        /* \"initial-offering.sol\":6605:6606  i */\n      dup2\n        /* \"initial-offering.sol\":6600:6607  bids[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_92\n      jumpi\n      tag_92\n      tag_93\n      jump\t// in\n    tag_92:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x04\n      swap1\n      swap2\n      mul\n      add\n        /* \"initial-offering.sol\":6600:6614  bids[i].bidder */\n      sload\n        /* \"initial-offering.sol\":6587:6597  bidders[i] */\n      dup8\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"initial-offering.sol\":6600:6614  bids[i].bidder */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"initial-offering.sol\":6587:6594  bidders */\n      dup9\n      swap1\n        /* \"initial-offering.sol\":6595:6596  i */\n      dup4\n      swap1\n        /* \"initial-offering.sol\":6587:6597  bidders[i] */\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_96\n      tag_93\n      jump\t// in\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"initial-offering.sol\":6587:6614  bidders[i] = bids[i].bidder */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"initial-offering.sol\":6646:6650  bids */\n      dup3\n        /* \"initial-offering.sol\":6651:6652  i */\n      dup2\n        /* \"initial-offering.sol\":6646:6653  bids[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_98\n      tag_93\n      jump\t// in\n    tag_98:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"initial-offering.sol\":6646:6665  bids[i].shareAmount */\n      0x01\n      add\n      sload\n        /* \"initial-offering.sol\":6628:6640  shareAmounts */\n      dup7\n        /* \"initial-offering.sol\":6641:6642  i */\n      dup3\n        /* \"initial-offering.sol\":6628:6643  shareAmounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_101\n      jumpi\n      tag_101\n      tag_93\n      jump\t// in\n    tag_101:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"initial-offering.sol\":6628:6665  shareAmounts[i] = bids[i].shareAmount */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"initial-offering.sol\":6699:6703  bids */\n      dup3\n        /* \"initial-offering.sol\":6704:6705  i */\n      dup2\n        /* \"initial-offering.sol\":6699:6706  bids[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_103\n      jumpi\n      tag_103\n      tag_93\n      jump\t// in\n    tag_103:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"initial-offering.sol\":6699:6720  bids[i].pricePerShare */\n      0x02\n      add\n      sload\n        /* \"initial-offering.sol\":6679:6693  pricesPerShare */\n      dup6\n        /* \"initial-offering.sol\":6694:6695  i */\n      dup3\n        /* \"initial-offering.sol\":6679:6696  pricesPerShare[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_106\n      jumpi\n      tag_106\n      tag_93\n      jump\t// in\n    tag_106:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"initial-offering.sol\":6679:6720  pricesPerShare[i] = bids[i].pricePerShare */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"initial-offering.sol\":6749:6753  bids */\n      dup3\n        /* \"initial-offering.sol\":6754:6755  i */\n      dup2\n        /* \"initial-offering.sol\":6749:6756  bids[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_108\n      jumpi\n      tag_108\n      tag_93\n      jump\t// in\n    tag_108:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"initial-offering.sol\":6749:6766  bids[i].allocated */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"initial-offering.sol\":6734:6743  allocated */\n      dup5\n        /* \"initial-offering.sol\":6744:6745  i */\n      dup3\n        /* \"initial-offering.sol\":6734:6746  allocated[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_111\n      jumpi\n      tag_111\n      tag_93\n      jump\t// in\n    tag_111:\n        /* \"initial-offering.sol\":6734:6766  allocated[i] = bids[i].allocated */\n      swap2\n      iszero\n      iszero\n        /* \"initial-offering.sol\":6734:6746  allocated[i] */\n      0x20\n      swap3\n      dup4\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      add\n        /* \"initial-offering.sol\":6734:6766  allocated[i] = bids[i].allocated */\n      mstore\n        /* \"initial-offering.sol\":6568:6571  i++ */\n      0x01\n      add\n        /* \"initial-offering.sol\":6534:6777  for (uint256 i = 0; i < bidCount; i++) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"initial-offering.sol\":6795:6852  return (bidders, shareAmounts, pricesPerShare, allocated) */\n      pop\n      pop\n        /* \"initial-offering.sol\":5931:6859  function getAssetBids(uint256 _assetId) external view returns (... */\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"initial-offering.sol\":6894:7440  function endBidding(uint256 _assetId) external nonReentrant {... */\n    tag_24:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_113\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_114\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_113:\n        /* \"initial-offering.sol\":6964:6983  Asset storage asset */\n      0x00\n        /* \"initial-offering.sol\":6986:7002  assets[_assetId] */\n      dup2\n      dup2\n      mstore\n        /* \"initial-offering.sol\":6986:6992  assets */\n      0x01\n        /* \"initial-offering.sol\":6986:7002  assets[_assetId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"initial-offering.sol\":7034:7053  asset.originalOwner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"initial-offering.sol\":7020:7030  msg.sender */\n      caller\n        /* \"initial-offering.sol\":7020:7053  msg.sender == asset.originalOwner */\n      eq\n        /* \"initial-offering.sol\":7012:7070  require(msg.sender == asset.originalOwner, \"Unauthorized\") */\n      tag_116\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_118\n      jump\t// in\n    tag_116:\n        /* \"initial-offering.sol\":7089:7108  asset.biddingClosed */\n      0x05\n      dup2\n      add\n      sload\n      0xff\n      and\n        /* \"initial-offering.sol\":7088:7108  !asset.biddingClosed */\n      iszero\n        /* \"initial-offering.sol\":7080:7135  require(!asset.biddingClosed, \"Bidding already closed\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_121\n      jump\t// in\n    tag_119:\n        /* \"initial-offering.sol\":7188:7207  asset.biddingClosed */\n      0x05\n      dup2\n      add\n        /* \"initial-offering.sol\":7188:7214  asset.biddingClosed = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"initial-offering.sol\":7210:7214  true */\n      0x01\n        /* \"initial-offering.sol\":7188:7214  asset.biddingClosed = true */\n      or\n      swap1\n      sstore\n        /* \"initial-offering.sol\":7188:7207  asset.biddingClosed */\n      0x00\n        /* \"initial-offering.sol\":7273:7292  assetBids[_assetId] */\n      dup3\n      dup2\n      mstore\n        /* \"initial-offering.sol\":7273:7282  assetBids */\n      0x02\n        /* \"initial-offering.sol\":7273:7292  assetBids[_assetId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"initial-offering.sol\":7273:7299  assetBids[_assetId].length */\n      sload\n        /* \"initial-offering.sol\":7273:7303  assetBids[_assetId].length > 0 */\n      iszero\n        /* \"initial-offering.sol\":7270:7434  if(assetBids[_assetId].length > 0) {... */\n      tag_122\n      jumpi\n        /* \"initial-offering.sol\":7319:7341  _processBids(_assetId) */\n      tag_123\n        /* \"initial-offering.sol\":7332:7340  _assetId */\n      dup3\n        /* \"initial-offering.sol\":7319:7331  _processBids */\n      tag_124\n        /* \"initial-offering.sol\":7319:7341  _processBids(_assetId) */\n      jump\t// in\n    tag_123:\n        /* \"initial-offering.sol\":7270:7434  if(assetBids[_assetId].length > 0) {... */\n      jump(tag_125)\n    tag_122:\n        /* \"initial-offering.sol\":7377:7423  BiddingEnded(_assetId, false, block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"initial-offering.sol\":7400:7405  false */\n      0x00\n        /* \"#utility.yul\":7766:7807   */\n      dup2\n      mstore\n        /* \"initial-offering.sol\":7407:7422  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":7838:7840   */\n      0x20\n        /* \"#utility.yul\":7823:7841   */\n      dup3\n      add\n        /* \"#utility.yul\":7816:7850   */\n      mstore\n        /* \"initial-offering.sol\":7390:7398  _assetId */\n      dup4\n      swap2\n        /* \"initial-offering.sol\":7377:7423  BiddingEnded(_assetId, false, block.timestamp) */\n      0x4d7a5e450395fb8fb6b67c4751f80f057cd5a74550929306eff2cac7f0ecc188\n      swap2\n        /* \"#utility.yul\":7739:7757   */\n      add\n        /* \"initial-offering.sol\":7377:7423  BiddingEnded(_assetId, false, block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"initial-offering.sol\":7270:7434  if(assetBids[_assetId].length > 0) {... */\n    tag_125:\n        /* \"initial-offering.sol\":6954:7440  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_128\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_128:\n        /* \"initial-offering.sol\":6894:7440  function endBidding(uint256 _assetId) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"initial-offering.sol\":1848:3323  function createAssetOffering(... */\n    tag_34:\n        /* \"initial-offering.sol\":2089:2090  0 */\n      0x00\n        /* \"initial-offering.sol\":2074:2086  _totalShares */\n      dup5\n        /* \"initial-offering.sol\":2074:2090  _totalShares > 0 */\n      gt\n        /* \"initial-offering.sol\":2066:2114  require(_totalShares > 0, \"Invalid share count\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8063:8065   */\n      0x20\n        /* \"initial-offering.sol\":2066:2114  require(_totalShares > 0, \"Invalid share count\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8045:8066   */\n      mstore\n        /* \"#utility.yul\":8102:8104   */\n      0x13\n        /* \"#utility.yul\":8082:8100   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8075:8105   */\n      mstore\n      shl(0x6a, 0x125b9d985b1a59081cda185c994818dbdd5b9d)\n        /* \"#utility.yul\":8121:8139   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8114:8163   */\n      mstore\n        /* \"#utility.yul\":8180:8198   */\n      0x64\n      add\n        /* \"initial-offering.sol\":2066:2114  require(_totalShares > 0, \"Invalid share count\") */\n      tag_73\n        /* \"#utility.yul\":7861:8204   */\n      jump\n        /* \"initial-offering.sol\":2066:2114  require(_totalShares > 0, \"Invalid share count\") */\n    tag_132:\n        /* \"initial-offering.sol\":2152:2153  0 */\n      0x00\n        /* \"initial-offering.sol\":2132:2149  _minPricePerShare */\n      dup4\n        /* \"initial-offering.sol\":2132:2153  _minPricePerShare > 0 */\n      gt\n        /* \"initial-offering.sol\":2124:2189  require(_minPricePerShare > 0, \"Invalid minimum price per share\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8411:8413   */\n      0x20\n        /* \"initial-offering.sol\":2124:2189  require(_minPricePerShare > 0, \"Invalid minimum price per share\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8393:8414   */\n      mstore\n        /* \"#utility.yul\":8450:8452   */\n      0x1f\n        /* \"#utility.yul\":8430:8448   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8423:8453   */\n      mstore\n        /* \"#utility.yul\":8489:8522   */\n      0x496e76616c6964206d696e696d756d2070726963652070657220736861726500\n        /* \"#utility.yul\":8469:8487   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8462:8523   */\n      mstore\n        /* \"#utility.yul\":8540:8558   */\n      0x64\n      add\n        /* \"initial-offering.sol\":2124:2189  require(_minPricePerShare > 0, \"Invalid minimum price per share\") */\n      tag_73\n        /* \"#utility.yul\":8209:8564   */\n      jump\n        /* \"initial-offering.sol\":2124:2189  require(_minPricePerShare > 0, \"Invalid minimum price per share\") */\n    tag_135:\n        /* \"initial-offering.sol\":2228:2229  0 */\n      0x00\n        /* \"initial-offering.sol\":2207:2225  _minimumTotalPrice */\n      dup3\n        /* \"initial-offering.sol\":2207:2229  _minimumTotalPrice > 0 */\n      gt\n        /* \"initial-offering.sol\":2199:2261  require(_minimumTotalPrice > 0, \"Invalid minimum total price\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8771:8773   */\n      0x20\n        /* \"initial-offering.sol\":2199:2261  require(_minimumTotalPrice > 0, \"Invalid minimum total price\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8753:8774   */\n      mstore\n        /* \"#utility.yul\":8810:8812   */\n      0x1b\n        /* \"#utility.yul\":8790:8808   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8783:8813   */\n      mstore\n        /* \"#utility.yul\":8849:8878   */\n      0x496e76616c6964206d696e696d756d20746f74616c2070726963650000000000\n        /* \"#utility.yul\":8829:8847   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8822:8879   */\n      mstore\n        /* \"#utility.yul\":8896:8914   */\n      0x64\n      add\n        /* \"initial-offering.sol\":2199:2261  require(_minimumTotalPrice > 0, \"Invalid minimum total price\") */\n      tag_73\n        /* \"#utility.yul\":8569:8920   */\n      jump\n        /* \"initial-offering.sol\":2199:2261  require(_minimumTotalPrice > 0, \"Invalid minimum total price\") */\n    tag_138:\n        /* \"initial-offering.sol\":2301:2302  0 */\n      0x00\n        /* \"initial-offering.sol\":2285:2290  _name */\n      dup6\n        /* \"initial-offering.sol\":2279:2298  bytes(_name).length */\n      mload\n        /* \"initial-offering.sol\":2279:2302  bytes(_name).length > 0 */\n      gt\n        /* \"initial-offering.sol\":2271:2327  require(bytes(_name).length > 0, \"Name cannot be empty\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9127:9129   */\n      0x20\n        /* \"initial-offering.sol\":2271:2327  require(bytes(_name).length > 0, \"Name cannot be empty\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9109:9130   */\n      mstore\n        /* \"#utility.yul\":9166:9168   */\n      0x14\n        /* \"#utility.yul\":9146:9164   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9139:9169   */\n      mstore\n      shl(0x60, 0x4e616d652063616e6e6f7420626520656d707479)\n        /* \"#utility.yul\":9185:9203   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9178:9228   */\n      mstore\n        /* \"#utility.yul\":9245:9263   */\n      0x64\n      add\n        /* \"initial-offering.sol\":2271:2327  require(bytes(_name).length > 0, \"Name cannot be empty\") */\n      tag_73\n        /* \"#utility.yul\":8925:9269   */\n      jump\n        /* \"initial-offering.sol\":2271:2327  require(bytes(_name).length > 0, \"Name cannot be empty\") */\n    tag_141:\n        /* \"initial-offering.sol\":2346:2356  assetCount */\n      0x03\n        /* \"initial-offering.sol\":2346:2358  assetCount++ */\n      dup1\n      sload\n      swap1\n        /* \"initial-offering.sol\":2346:2356  assetCount */\n      0x00\n        /* \"initial-offering.sol\":2346:2358  assetCount++ */\n      tag_144\n      dup4\n      tag_145\n      jump\t// in\n    tag_144:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"initial-offering.sol\":2409:2419  assetCount */\n      sload(0x03)\n        /* \"initial-offering.sol\":2377:2399  Asset storage newAsset */\n      0x00\n        /* \"initial-offering.sol\":2402:2420  assets[assetCount] */\n      swap1\n      dup2\n      mstore\n        /* \"initial-offering.sol\":2402:2408  assets */\n      0x01\n        /* \"initial-offering.sol\":2402:2420  assets[assetCount] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"initial-offering.sol\":2430:2465  newAsset.originalOwner = msg.sender */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"initial-offering.sol\":2455:2465  msg.sender */\n      caller\n        /* \"initial-offering.sol\":2430:2465  newAsset.originalOwner = msg.sender */\n      or\n      dup2\n      sstore\n        /* \"initial-offering.sol\":2402:2420  assets[assetCount] */\n      swap1\n        /* \"initial-offering.sol\":2475:2488  newAsset.name */\n      dup2\n      add\n        /* \"initial-offering.sol\":2475:2496  newAsset.name = _name */\n      tag_146\n        /* \"initial-offering.sol\":2491:2496  _name */\n      dup8\n        /* \"initial-offering.sol\":2475:2488  newAsset.name */\n      dup3\n        /* \"initial-offering.sol\":2475:2496  newAsset.name = _name */\n      tag_147\n      jump\t// in\n    tag_146:\n      pop\n        /* \"initial-offering.sol\":2506:2526  newAsset.totalShares */\n      0x02\n      dup2\n      add\n        /* \"initial-offering.sol\":2506:2541  newAsset.totalShares = _totalShares */\n      dup6\n      swap1\n      sstore\n        /* \"initial-offering.sol\":2551:2575  newAsset.sharesRemaining */\n      0x03\n      dup2\n      add\n        /* \"initial-offering.sol\":2551:2590  newAsset.sharesRemaining = _totalShares */\n      dup6\n      swap1\n      sstore\n        /* \"initial-offering.sol\":2658:2684  newAsset.minimumTotalPrice */\n      0x04\n      dup2\n      add\n        /* \"initial-offering.sol\":2658:2705  newAsset.minimumTotalPrice = _minimumTotalPrice */\n      dup4\n      swap1\n      sstore\n        /* \"initial-offering.sol\":2715:2737  newAsset.biddingClosed */\n      0x05\n      dup2\n      add\n        /* \"initial-offering.sol\":2715:2745  newAsset.biddingClosed = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"initial-offering.sol\":2781:2815  block.timestamp + _biddingDuration */\n      tag_148\n        /* \"initial-offering.sol\":2799:2815  _biddingDuration */\n      dup3\n        /* \"initial-offering.sol\":2781:2796  block.timestamp */\n      timestamp\n        /* \"initial-offering.sol\":2781:2815  block.timestamp + _biddingDuration */\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"initial-offering.sol\":2755:2778  newAsset.biddingEndTime */\n      0x06\n      dup3\n      add\n        /* \"initial-offering.sol\":2755:2815  newAsset.biddingEndTime = block.timestamp + _biddingDuration */\n      sstore\n        /* \"initial-offering.sol\":2908:2931  newAsset.ownerAddresses */\n      0x07\n      dup2\n      add\n        /* \"initial-offering.sol\":2908:2948  newAsset.ownerAddresses.push(msg.sender) */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      dup4\n      sstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x20\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap3\n      add\n      dup1\n      sload\n        /* \"initial-offering.sol\":2937:2947  msg.sender */\n      caller\n      not(sub(shl(0xa0, 0x01), 0x01))\n        /* \"initial-offering.sol\":2908:2948  newAsset.ownerAddresses.push(msg.sender) */\n      swap2\n      dup3\n      and\n      dup2\n      or\n      swap1\n      swap3\n      sstore\n        /* \"initial-offering.sol\":2988:3108  AssetOwner({... */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      dup4\n      dup2\n      mstore\n      dup1\n      dup7\n      add\n      dup13\n      dup2\n      mstore\n      dup2\n      dup4\n      add\n      dup7\n      dup2\n      mstore\n        /* \"initial-offering.sol\":2958:2985  newAsset.owners[msg.sender] */\n      dup6\n      dup10\n      mstore\n        /* \"initial-offering.sol\":2958:2973  newAsset.owners */\n      0x08\n      dup11\n      add\n        /* \"initial-offering.sol\":2958:2985  newAsset.owners[msg.sender] */\n      swap1\n      swap8\n      mstore\n      swap7\n      dup3\n      swap1\n      keccak256\n        /* \"initial-offering.sol\":2958:3108  newAsset.owners[msg.sender] = AssetOwner({... */\n      swap1\n      mload\n      dup2\n      sload\n      swap1\n      swap4\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      dup3\n      sstore\n      swap5\n      mload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n      swap2\n      mload\n      0x02\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"initial-offering.sol\":3145:3155  assetCount */\n      sload(0x03)\n        /* \"initial-offering.sol\":3132:3209  AssetCreated(assetCount, msg.sender, _name, _totalShares, _minimumTotalPrice) */\n      swap2\n      mload\n        /* \"initial-offering.sol\":2937:2947  msg.sender */\n      swap1\n      swap2\n        /* \"initial-offering.sol\":3145:3155  assetCount */\n      swap1\n        /* \"initial-offering.sol\":3132:3209  AssetCreated(assetCount, msg.sender, _name, _totalShares, _minimumTotalPrice) */\n      0x01b72beabfa8420e9b47a1c3d6764a97e2044c51b3368b66b161a5fc8ceebccf\n      swap1\n      tag_151\n      swap1\n        /* \"initial-offering.sol\":3169:3174  _name */\n      dup11\n      swap1\n        /* \"initial-offering.sol\":2988:3108  AssetOwner({... */\n      dup11\n      swap1\n        /* \"initial-offering.sol\":3190:3208  _minimumTotalPrice */\n      dup10\n      swap1\n        /* \"initial-offering.sol\":3132:3209  AssetCreated(assetCount, msg.sender, _name, _totalShares, _minimumTotalPrice) */\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"initial-offering.sol\":3235:3245  assetCount */\n      sload(0x03)\n        /* \"initial-offering.sol\":3224:3272  OwnerAdded(assetCount, msg.sender, _totalShares) */\n      mload(0x40)\n        /* \"#utility.yul\":2475:2500   */\n      dup7\n      dup2\n      mstore\n        /* \"initial-offering.sol\":3247:3257  msg.sender */\n      caller\n      swap2\n        /* \"initial-offering.sol\":3235:3245  assetCount */\n      swap1\n        /* \"initial-offering.sol\":3224:3272  OwnerAdded(assetCount, msg.sender, _totalShares) */\n      0x25af9e0275abbb4de910d2062f5dcca6d4c47f1313066083dd9d7077608a7a54\n      swap1\n        /* \"#utility.yul\":2463:2465   */\n      0x20\n        /* \"#utility.yul\":2448:2466   */\n      add\n        /* \"initial-offering.sol\":3224:3272  OwnerAdded(assetCount, msg.sender, _totalShares) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"initial-offering.sol\":3287:3316  AssetCountUpdated(assetCount) */\n      0xdbad7356874fb84060a1e809f3b9f73d977da5f6e62d52682c065d51d15435c6\n        /* \"initial-offering.sol\":3305:3315  assetCount */\n      sload(0x03)\n        /* \"initial-offering.sol\":3287:3316  AssetCountUpdated(assetCount) */\n      mload(0x40)\n      tag_154\n      swap2\n        /* \"#utility.yul\":2475:2500   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2463:2465   */\n      0x20\n        /* \"#utility.yul\":2448:2466   */\n      add\n      swap1\n        /* \"#utility.yul\":2329:2506   */\n      jump\n        /* \"initial-offering.sol\":3287:3316  AssetCountUpdated(assetCount) */\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"initial-offering.sol\":2056:3323  {... */\n      pop\n        /* \"initial-offering.sol\":1848:3323  function createAssetOffering(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"initial-offering.sol\":5092:5888  function placeBid(uint256 _assetId, uint256 _shareAmount) external payable nonReentrant {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_156\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_114\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_156:\n        /* \"initial-offering.sol\":5190:5209  Asset storage asset */\n      0x00\n        /* \"initial-offering.sol\":5212:5228  assets[_assetId] */\n      dup3\n      dup2\n      mstore\n        /* \"initial-offering.sol\":5212:5218  assets */\n      0x01\n        /* \"initial-offering.sol\":5212:5228  assets[_assetId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"initial-offering.sol\":5247:5266  asset.biddingClosed */\n      0x05\n      dup2\n      add\n      sload\n      0xff\n      and\n        /* \"initial-offering.sol\":5246:5266  !asset.biddingClosed */\n      iszero\n        /* \"initial-offering.sol\":5238:5285  require(!asset.biddingClosed, \"Bidding closed\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12754:12756   */\n      0x20\n        /* \"initial-offering.sol\":5238:5285  require(!asset.biddingClosed, \"Bidding closed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12736:12757   */\n      mstore\n        /* \"#utility.yul\":12793:12795   */\n      0x0e\n        /* \"#utility.yul\":12773:12791   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12766:12796   */\n      mstore\n      shl(0x92, 0x109a59191a5b99c818db1bdcd959)\n        /* \"#utility.yul\":12812:12830   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12805:12849   */\n      mstore\n        /* \"#utility.yul\":12866:12884   */\n      0x64\n      add\n        /* \"initial-offering.sol\":5238:5285  require(!asset.biddingClosed, \"Bidding closed\") */\n      tag_73\n        /* \"#utility.yul\":12552:12890   */\n      jump\n        /* \"initial-offering.sol\":5238:5285  require(!asset.biddingClosed, \"Bidding closed\") */\n    tag_158:\n        /* \"initial-offering.sol\":5321:5326  asset */\n      dup1\n        /* \"initial-offering.sol\":5321:5341  asset.biddingEndTime */\n      0x06\n      add\n      sload\n        /* \"initial-offering.sol\":5303:5318  block.timestamp */\n      timestamp\n        /* \"initial-offering.sol\":5303:5341  block.timestamp < asset.biddingEndTime */\n      lt\n        /* \"initial-offering.sol\":5295:5366  require(block.timestamp < asset.biddingEndTime, \"Bidding period ended\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13097:13099   */\n      0x20\n        /* \"initial-offering.sol\":5295:5366  require(block.timestamp < asset.biddingEndTime, \"Bidding period ended\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13079:13100   */\n      mstore\n        /* \"#utility.yul\":13136:13138   */\n      0x14\n        /* \"#utility.yul\":13116:13134   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13109:13139   */\n      mstore\n      shl(0x62, 0x109a59191a5b99c81c195c9a5bd908195b991959)\n        /* \"#utility.yul\":13155:13173   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13148:13198   */\n      mstore\n        /* \"#utility.yul\":13215:13233   */\n      0x64\n      add\n        /* \"initial-offering.sol\":5295:5366  require(block.timestamp < asset.biddingEndTime, \"Bidding period ended\") */\n      tag_73\n        /* \"#utility.yul\":12895:13239   */\n      jump\n        /* \"initial-offering.sol\":5295:5366  require(block.timestamp < asset.biddingEndTime, \"Bidding period ended\") */\n    tag_161:\n        /* \"initial-offering.sol\":5399:5400  0 */\n      0x00\n        /* \"initial-offering.sol\":5384:5396  _shareAmount */\n      dup3\n        /* \"initial-offering.sol\":5384:5400  _shareAmount > 0 */\n      gt\n        /* \"initial-offering.sol\":5376:5425  require(_shareAmount > 0, \"Invalid share amount\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13446:13448   */\n      0x20\n        /* \"initial-offering.sol\":5376:5425  require(_shareAmount > 0, \"Invalid share amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13428:13449   */\n      mstore\n        /* \"#utility.yul\":13485:13487   */\n      0x14\n        /* \"#utility.yul\":13465:13483   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13458:13488   */\n      mstore\n      shl(0x62, 0x125b9d985b1a59081cda185c9948185b5bdd5b9d)\n        /* \"#utility.yul\":13504:13522   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13497:13547   */\n      mstore\n        /* \"#utility.yul\":13564:13582   */\n      0x64\n      add\n        /* \"initial-offering.sol\":5376:5425  require(_shareAmount > 0, \"Invalid share amount\") */\n      tag_73\n        /* \"#utility.yul\":13244:13588   */\n      jump\n        /* \"initial-offering.sol\":5376:5425  require(_shareAmount > 0, \"Invalid share amount\") */\n    tag_164:\n        /* \"initial-offering.sol\":5585:5604  assetBids[_assetId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"initial-offering.sol\":5585:5594  assetBids */\n      0x02\n        /* \"initial-offering.sol\":5585:5604  assetBids[_assetId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"initial-offering.sol\":5610:5782  Bid({... */\n      dup3\n      mload\n      0x80\n      dup2\n      add\n      dup5\n      mstore\n        /* \"initial-offering.sol\":5636:5646  msg.sender */\n      caller\n        /* \"initial-offering.sol\":5610:5782  Bid({... */\n      dup2\n      mstore\n      swap2\n      dup3\n      add\n      dup6\n      swap1\n      mstore\n        /* \"initial-offering.sol\":5585:5604  assetBids[_assetId] */\n      swap2\n        /* \"initial-offering.sol\":5610:5782  Bid({... */\n      dup2\n      add\n        /* \"initial-offering.sol\":5714:5741  msg.value.div(_shareAmount) */\n      tag_167\n        /* \"initial-offering.sol\":5714:5723  msg.value */\n      callvalue\n        /* \"initial-offering.sol\":5673:5685  _shareAmount */\n      dup7\n        /* \"initial-offering.sol\":5714:5727  msg.value.div */\n      tag_168\n        /* \"initial-offering.sol\":5714:5741  msg.value.div(_shareAmount) */\n      jump\t// in\n    tag_167:\n        /* \"initial-offering.sol\":5610:5782  Bid({... */\n      dup2\n      mstore\n        /* \"initial-offering.sol\":5766:5771  false */\n      0x00\n        /* \"initial-offering.sol\":5610:5782  Bid({... */\n      0x20\n      swap2\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n        /* \"initial-offering.sol\":5585:5783  assetBids[_assetId].push(Bid({... */\n      dup4\n      sload\n        /* \"initial-offering.sol\":5610:5782  Bid({... */\n      0x01\n        /* \"initial-offering.sol\":5585:5783  assetBids[_assetId].push(Bid({... */\n      dup1\n      dup3\n      add\n      dup7\n      sstore\n      swap5\n      dup3\n      mstore\n      swap1\n      dup3\n      swap1\n      keccak256\n      dup4\n      mload\n      0x04\n      swap1\n      swap3\n      mul\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      dup2\n      sstore\n      swap1\n      dup3\n      add\n      mload\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n      0x40\n      dup2\n      add\n      mload\n      0x02\n      dup4\n      add\n      sstore\n      0x60\n      add\n      mload\n      0x03\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"initial-offering.sol\":5827:5837  msg.sender */\n      caller\n        /* \"initial-offering.sol\":5817:5825  _assetId */\n      dup4\n        /* \"initial-offering.sol\":5807:5881  BidPlaced(_assetId, msg.sender, _shareAmount, msg.value.div(_shareAmount)) */\n      0x51db8e23b3f4479b162fd48823b8402895442b8f6cfd94f66239391881ec7b6f\n        /* \"initial-offering.sol\":5839:5851  _shareAmount */\n      dup5\n        /* \"initial-offering.sol\":5853:5880  msg.value.div(_shareAmount) */\n      tag_170\n        /* \"initial-offering.sol\":5853:5862  msg.value */\n      callvalue\n        /* \"initial-offering.sol\":5839:5851  _shareAmount */\n      dup3\n        /* \"initial-offering.sol\":5853:5866  msg.value.div */\n      tag_168\n        /* \"initial-offering.sol\":5853:5880  msg.value.div(_shareAmount) */\n      jump\t// in\n    tag_170:\n        /* \"initial-offering.sol\":5807:5881  BidPlaced(_assetId, msg.sender, _shareAmount, msg.value.div(_shareAmount)) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":13767:13792   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":13823:13825   */\n      0x20\n        /* \"#utility.yul\":13808:13826   */\n      dup4\n      add\n        /* \"#utility.yul\":13801:13835   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":13740:13758   */\n      add\n        /* \"initial-offering.sol\":5807:5881  BidPlaced(_assetId, msg.sender, _shareAmount, msg.value.div(_shareAmount)) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"initial-offering.sol\":5180:5888  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_173\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_173:\n        /* \"initial-offering.sol\":5092:5888  function placeBid(uint256 _assetId, uint256 _shareAmount) external payable nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"initial-offering.sol\":4309:5054  function getAssetOwners(uint256 _assetId) external view returns (... */\n    tag_42:\n        /* \"initial-offering.sol\":4383:4414  address[] memory ownerAddresses */\n      0x60\n        /* \"initial-offering.sol\":4424:4452  uint256[] memory ownerShares */\n      dup1\n        /* \"initial-offering.sol\":4488:4489  0 */\n      0x00\n        /* \"initial-offering.sol\":4477:4485  _assetId */\n      dup4\n        /* \"initial-offering.sol\":4477:4489  _assetId > 0 */\n      gt\n        /* \"initial-offering.sol\":4477:4515  _assetId > 0 && _assetId <= assetCount */\n      dup1\n      iszero\n      tag_175\n      jumpi\n      pop\n        /* \"initial-offering.sol\":4505:4515  assetCount */\n      sload(0x03)\n        /* \"initial-offering.sol\":4493:4501  _assetId */\n      dup4\n        /* \"initial-offering.sol\":4493:4515  _assetId <= assetCount */\n      gt\n      iszero\n        /* \"initial-offering.sol\":4477:4515  _assetId > 0 && _assetId <= assetCount */\n    tag_175:\n        /* \"initial-offering.sol\":4469:4536  require(_assetId > 0 && _assetId <= assetCount, \"Invalid asset ID\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_176:\n        /* \"initial-offering.sol\":4546:4565  Asset storage asset */\n      0x00\n        /* \"initial-offering.sol\":4568:4584  assets[_assetId] */\n      dup4\n      dup2\n      mstore\n        /* \"initial-offering.sol\":4568:4574  assets */\n      0x01\n        /* \"initial-offering.sol\":4568:4584  assets[_assetId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"initial-offering.sol\":4624:4644  asset.ownerAddresses */\n      0x07\n      dup2\n      add\n        /* \"initial-offering.sol\":4624:4651  asset.ownerAddresses.length */\n      sload\n      dup1\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"initial-offering.sol\":4678:4703  new address[](ownerCount) */\n      dup2\n      gt\n      iszero\n      tag_179\n      jumpi\n      tag_179\n      tag_77\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_180\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_180:\n      pop\n        /* \"initial-offering.sol\":4661:4703  ownerAddresses = new address[](ownerCount) */\n      swap4\n      pop\n        /* \"initial-offering.sol\":4741:4751  ownerCount */\n      dup1\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"initial-offering.sol\":4727:4752  new uint256[](ownerCount) */\n      dup2\n      gt\n      iszero\n      tag_182\n      jumpi\n      tag_182\n      tag_77\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_183\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_183:\n      pop\n        /* \"initial-offering.sol\":4713:4752  ownerShares = new uint256[](ownerCount) */\n      swap3\n      pop\n        /* \"initial-offering.sol\":4776:4785  uint256 i */\n      0x00\n        /* \"initial-offering.sol\":4771:4993  for (uint256 i = 0; i < ownerCount; i++) {... */\n    tag_184:\n        /* \"initial-offering.sol\":4795:4805  ownerCount */\n      dup2\n        /* \"initial-offering.sol\":4791:4792  i */\n      dup2\n        /* \"initial-offering.sol\":4791:4805  i < ownerCount */\n      lt\n        /* \"initial-offering.sol\":4771:4993  for (uint256 i = 0; i < ownerCount; i++) {... */\n      iszero\n      tag_185\n      jumpi\n        /* \"initial-offering.sol\":4826:4846  address ownerAddress */\n      0x00\n        /* \"initial-offering.sol\":4849:4854  asset */\n      dup4\n        /* \"initial-offering.sol\":4849:4869  asset.ownerAddresses */\n      0x07\n      add\n        /* \"initial-offering.sol\":4870:4871  i */\n      dup3\n        /* \"initial-offering.sol\":4849:4872  asset.ownerAddresses[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_188\n      jumpi\n      tag_188\n      tag_93\n      jump\t// in\n    tag_188:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"initial-offering.sol\":4826:4872  address ownerAddress = asset.ownerAddresses[i] */\n      swap1\n      pop\n        /* \"initial-offering.sol\":4906:4918  ownerAddress */\n      dup1\n        /* \"initial-offering.sol\":4886:4900  ownerAddresses */\n      dup7\n        /* \"initial-offering.sol\":4901:4902  i */\n      dup4\n        /* \"initial-offering.sol\":4886:4903  ownerAddresses[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_191\n      jumpi\n      tag_191\n      tag_93\n      jump\t// in\n    tag_191:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"initial-offering.sol\":4886:4918  ownerAddresses[i] = ownerAddress */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"initial-offering.sol\":4949:4954  asset */\n      dup4\n        /* \"initial-offering.sol\":4949:4961  asset.owners */\n      0x08\n      add\n        /* \"initial-offering.sol\":4949:4975  asset.owners[ownerAddress] */\n      0x00\n        /* \"initial-offering.sol\":4962:4974  ownerAddress */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"initial-offering.sol\":4949:4975  asset.owners[ownerAddress] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"initial-offering.sol\":4949:4982  asset.owners[ownerAddress].shares */\n      0x01\n      add\n      sload\n        /* \"initial-offering.sol\":4932:4943  ownerShares */\n      dup6\n        /* \"initial-offering.sol\":4944:4945  i */\n      dup4\n        /* \"initial-offering.sol\":4932:4946  ownerShares[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_193\n      jumpi\n      tag_193\n      tag_93\n      jump\t// in\n    tag_193:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"initial-offering.sol\":4932:4982  ownerShares[i] = asset.owners[ownerAddress].shares */\n      mstore\n      pop\n        /* \"initial-offering.sol\":4807:4810  i++ */\n      0x01\n      add\n        /* \"initial-offering.sol\":4771:4993  for (uint256 i = 0; i < ownerCount; i++) {... */\n      jump(tag_184)\n    tag_185:\n      pop\n        /* \"initial-offering.sol\":5011:5047  return (ownerAddresses, ownerShares) */\n      pop\n      pop\n        /* \"initial-offering.sol\":4309:5054  function getAssetOwners(uint256 _assetId) external view returns (... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"initial-offering.sol\":1057:1099  mapping(uint256 => Bid[]) public assetBids */\n    tag_48:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_194\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_194:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x04\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      swap1\n      swap4\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap5\n      pop\n      swap3\n      pop\n      0xff\n      and\n      dup5\n      jump\t// out\n        /* \"initial-offering.sol\":3501:4265  function getAssetBasicDetails(uint256 _assetId) external view returns (... */\n    tag_54:\n        /* \"initial-offering.sol\":3581:3602  address originalOwner */\n      0x00\n        /* \"initial-offering.sol\":3612:3630  string memory name */\n      0x60\n        /* \"initial-offering.sol\":3640:3659  uint256 totalShares */\n      0x00\n        /* \"initial-offering.sol\":3669:3692  uint256 sharesRemaining */\n      dup1\n        /* \"initial-offering.sol\":3739:3764  uint256 minimumTotalPrice */\n      0x00\n        /* \"initial-offering.sol\":3774:3792  bool biddingClosed */\n      dup1\n        /* \"initial-offering.sol\":3802:3824  uint256 biddingEndTime */\n      0x00\n        /* \"initial-offering.sol\":3860:3861  0 */\n      dup1\n        /* \"initial-offering.sol\":3849:3857  _assetId */\n      dup9\n        /* \"initial-offering.sol\":3849:3861  _assetId > 0 */\n      gt\n        /* \"initial-offering.sol\":3849:3887  _assetId > 0 && _assetId <= assetCount */\n      dup1\n      iszero\n      tag_197\n      jumpi\n      pop\n        /* \"initial-offering.sol\":3877:3887  assetCount */\n      sload(0x03)\n        /* \"initial-offering.sol\":3865:3873  _assetId */\n      dup9\n        /* \"initial-offering.sol\":3865:3887  _assetId <= assetCount */\n      gt\n      iszero\n        /* \"initial-offering.sol\":3849:3887  _assetId > 0 && _assetId <= assetCount */\n    tag_197:\n        /* \"initial-offering.sol\":3841:3908  require(_assetId > 0 && _assetId <= assetCount, \"Invalid asset ID\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_74\n      jump\t// in\n    tag_198:\n        /* \"initial-offering.sol\":3918:3937  Asset storage asset */\n      0x00\n        /* \"initial-offering.sol\":3940:3956  assets[_assetId] */\n      dup9\n      dup2\n      mstore\n        /* \"initial-offering.sol\":3940:3946  assets */\n      0x01\n        /* \"initial-offering.sol\":3940:3956  assets[_assetId] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"initial-offering.sol\":3996:4015  asset.originalOwner */\n      dup1\n      sload\n        /* \"initial-offering.sol\":4053:4070  asset.totalShares */\n      0x02\n      dup3\n      add\n      sload\n        /* \"initial-offering.sol\":4084:4105  asset.sharesRemaining */\n      0x03\n      dup4\n      add\n      sload\n        /* \"initial-offering.sol\":4158:4181  asset.minimumTotalPrice */\n      0x04\n      dup5\n      add\n      sload\n        /* \"initial-offering.sol\":4195:4214  asset.biddingClosed */\n      0x05\n      dup6\n      add\n      sload\n        /* \"initial-offering.sol\":4228:4248  asset.biddingEndTime */\n      0x06\n      dup7\n      add\n      sload\n        /* \"initial-offering.sol\":4029:4039  asset.name */\n      swap7\n      dup7\n      add\n        /* \"initial-offering.sol\":3975:4258  return (... */\n      dup1\n      sload\n        /* \"initial-offering.sol\":3940:3956  assets[_assetId] */\n      swap7\n      swap8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"initial-offering.sol\":3996:4015  asset.originalOwner */\n      swap1\n      swap7\n      and\n      swap7\n        /* \"initial-offering.sol\":4029:4039  asset.name */\n      swap1\n      swap6\n        /* \"initial-offering.sol\":4195:4214  asset.biddingClosed */\n      0xff\n      swap1\n      swap3\n      and\n      swap2\n        /* \"initial-offering.sol\":4228:4248  asset.biddingEndTime */\n      swap1\n        /* \"initial-offering.sol\":4029:4039  asset.name */\n      dup7\n      swap1\n        /* \"initial-offering.sol\":3975:4258  return (... */\n      tag_200\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_202\n      swap1\n      tag_201\n      jump\t// in\n    tag_202:\n      dup1\n      iszero\n      tag_203\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_204\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_203)\n    tag_204:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_205:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_205\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_203:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap6\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      pop\n        /* \"initial-offering.sol\":3501:4265  function getAssetBasicDetails(uint256 _assetId) external view returns (... */\n      swap2\n      swap4\n      swap6\n      swap8\n      swap1\n      swap3\n      swap5\n      swap7\n      pop\n      jump\t// out\n        /* \"initial-offering.sol\":7484:8118  function executeBidding(uint256 _assetId) external nonReentrant {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_207\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_114\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_207:\n        /* \"initial-offering.sol\":7558:7577  Asset storage asset */\n      0x00\n        /* \"initial-offering.sol\":7580:7596  assets[_assetId] */\n      dup2\n      dup2\n      mstore\n        /* \"initial-offering.sol\":7580:7586  assets */\n      0x01\n        /* \"initial-offering.sol\":7580:7596  assets[_assetId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"initial-offering.sol\":7628:7647  asset.originalOwner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"initial-offering.sol\":7614:7624  msg.sender */\n      caller\n        /* \"initial-offering.sol\":7614:7647  msg.sender == asset.originalOwner */\n      eq\n        /* \"initial-offering.sol\":7606:7664  require(msg.sender == asset.originalOwner, \"Unauthorized\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_118\n      jump\t// in\n    tag_209:\n        /* \"initial-offering.sol\":7683:7702  asset.biddingClosed */\n      0x05\n      dup2\n      add\n      sload\n      0xff\n      and\n        /* \"initial-offering.sol\":7682:7702  !asset.biddingClosed */\n      iszero\n        /* \"initial-offering.sol\":7674:7729  require(!asset.biddingClosed, \"Bidding already closed\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_73\n      swap1\n      tag_121\n      jump\t// in\n    tag_211:\n        /* \"initial-offering.sol\":7766:7771  asset */\n      dup1\n        /* \"initial-offering.sol\":7766:7786  asset.biddingEndTime */\n      0x06\n      add\n      sload\n        /* \"initial-offering.sol\":7747:7762  block.timestamp */\n      timestamp\n        /* \"initial-offering.sol\":7747:7786  block.timestamp >= asset.biddingEndTime */\n      lt\n      iszero\n        /* \"initial-offering.sol\":7739:7813  require(block.timestamp >= asset.biddingEndTime, \"Bidding period ongoing\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14048:14050   */\n      0x20\n        /* \"initial-offering.sol\":7739:7813  require(block.timestamp >= asset.biddingEndTime, \"Bidding period ongoing\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14030:14051   */\n      mstore\n        /* \"#utility.yul\":14087:14089   */\n      0x16\n        /* \"#utility.yul\":14067:14085   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14060:14090   */\n      mstore\n      shl(0x50, 0x42696464696e6720706572696f64206f6e676f696e67)\n        /* \"#utility.yul\":14106:14124   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14099:14151   */\n      mstore\n        /* \"#utility.yul\":14168:14186   */\n      0x64\n      add\n        /* \"initial-offering.sol\":7739:7813  require(block.timestamp >= asset.biddingEndTime, \"Bidding period ongoing\") */\n      tag_73\n        /* \"#utility.yul\":13846:14192   */\n      jump\n        /* \"initial-offering.sol\":1012:1051  mapping(uint256 => Asset) public assets */\n    tag_64:\n      0x01\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      swap2\n      dup2\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap4\n      and\n      swap3\n      tag_221\n      swap1\n      tag_201\n      jump\t// in\n    tag_221:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_222\n      swap1\n      tag_201\n      jump\t// in\n    tag_222:\n      dup1\n      iszero\n      tag_223\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_224\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_223)\n    tag_224:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_225:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_225\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_223:\n      pop\n      pop\n      pop\n      pop\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      dup5\n      add\n      sload\n      0x04\n      dup6\n      add\n      sload\n      0x05\n      dup7\n      add\n      sload\n      0x06\n      swap1\n      swap7\n      add\n      sload\n      swap5\n      swap6\n      swap3\n      swap5\n      swap2\n      swap4\n      pop\n      swap2\n      0xff\n      and\n      swap1\n      dup8\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_114:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_227\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14399:14401   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14381:14402   */\n      mstore\n        /* \"#utility.yul\":14438:14440   */\n      0x1f\n        /* \"#utility.yul\":14418:14436   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14411:14441   */\n      mstore\n        /* \"#utility.yul\":14477:14510   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":14457:14475   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14450:14511   */\n      mstore\n        /* \"#utility.yul\":14528:14546   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_73\n        /* \"#utility.yul\":14197:14552   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_227:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"initial-offering.sol\":8169:12169  function _processBids(uint256 _assetId) internal {... */\n    tag_124:\n        /* \"initial-offering.sol\":8228:8247  Asset storage asset */\n      0x00\n        /* \"initial-offering.sol\":8250:8266  assets[_assetId] */\n      dup2\n      dup2\n      mstore\n        /* \"initial-offering.sol\":8250:8256  assets */\n      0x01\n        /* \"initial-offering.sol\":8250:8266  assets[_assetId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"initial-offering.sol\":8335:8354  _sortBids(_assetId) */\n      tag_231\n        /* \"initial-offering.sol\":8257:8265  _assetId */\n      dup3\n        /* \"initial-offering.sol\":8335:8344  _sortBids */\n      tag_232\n        /* \"initial-offering.sol\":8335:8354  _sortBids(_assetId) */\n      jump\t// in\n    tag_231:\n        /* \"initial-offering.sol\":8373:8391  Bid[] storage bids */\n      0x00\n        /* \"initial-offering.sol\":8394:8413  assetBids[_assetId] */\n      dup3\n      dup2\n      mstore\n        /* \"initial-offering.sol\":8394:8403  assetBids */\n      0x02\n        /* \"initial-offering.sol\":8394:8413  assetBids[_assetId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"initial-offering.sol\":8583:8604  asset.sharesRemaining */\n      0x03\n      dup4\n      add\n      sload\n        /* \"initial-offering.sol\":8394:8413  assetBids[_assetId] */\n      swap1\n      swap2\n        /* \"initial-offering.sol\":8373:8391  Bid[] storage bids */\n      swap1\n      dup2\n        /* \"initial-offering.sol\":8623:9119  for(uint256 i = 0; i < bids.length && sharesToAllocate > 0; i++) {... */\n    tag_233:\n        /* \"initial-offering.sol\":8646:8657  bids.length */\n      dup4\n      sload\n        /* \"initial-offering.sol\":8642:8657  i < bids.length */\n      dup2\n      lt\n        /* \"initial-offering.sol\":8642:8681  i < bids.length && sharesToAllocate > 0 */\n      dup1\n      iszero\n      tag_236\n      jumpi\n      pop\n        /* \"initial-offering.sol\":8680:8681  0 */\n      0x00\n        /* \"initial-offering.sol\":8661:8677  sharesToAllocate */\n      dup3\n        /* \"initial-offering.sol\":8661:8681  sharesToAllocate > 0 */\n      gt\n        /* \"initial-offering.sol\":8642:8681  i < bids.length && sharesToAllocate > 0 */\n    tag_236:\n        /* \"initial-offering.sol\":8623:9119  for(uint256 i = 0; i < bids.length && sharesToAllocate > 0; i++) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"initial-offering.sol\":8702:8717  Bid storage bid */\n      0x00\n        /* \"initial-offering.sol\":8720:8724  bids */\n      dup5\n        /* \"initial-offering.sol\":8725:8726  i */\n      dup3\n        /* \"initial-offering.sol\":8720:8727  bids[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_238\n      jumpi\n      tag_238\n      tag_93\n      jump\t// in\n    tag_238:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x04\n      swap1\n      swap2\n      mul\n      add\n        /* \"initial-offering.sol\":8744:8757  bid.allocated */\n      0x03\n      dup2\n      add\n      sload\n        /* \"initial-offering.sol\":8720:8727  bids[i] */\n      swap1\n      swap2\n      pop\n        /* \"initial-offering.sol\":8744:8757  bid.allocated */\n      0xff\n      and\n        /* \"initial-offering.sol\":8741:8767  if(bid.allocated) continue */\n      iszero\n      tag_240\n      jumpi\n        /* \"initial-offering.sol\":8759:8767  continue */\n      pop\n      jump(tag_235)\n        /* \"initial-offering.sol\":8741:8767  if(bid.allocated) continue */\n    tag_240:\n        /* \"initial-offering.sol\":8794:8819  uint256 allocatableShares */\n      0x00\n        /* \"initial-offering.sol\":8842:8858  sharesToAllocate */\n      dup4\n        /* \"initial-offering.sol\":8823:8826  bid */\n      dup3\n        /* \"initial-offering.sol\":8823:8838  bid.shareAmount */\n      0x01\n      add\n      sload\n        /* \"initial-offering.sol\":8823:8858  bid.shareAmount <= sharesToAllocate */\n      gt\n      iszero\n        /* \"initial-offering.sol\":8822:8930  (bid.shareAmount <= sharesToAllocate) ... */\n      tag_241\n      jumpi\n        /* \"initial-offering.sol\":8914:8930  sharesToAllocate */\n      dup4\n        /* \"initial-offering.sol\":8822:8930  (bid.shareAmount <= sharesToAllocate) ... */\n      jump(tag_242)\n    tag_241:\n        /* \"initial-offering.sol\":8879:8882  bid */\n      dup2\n        /* \"initial-offering.sol\":8879:8894  bid.shareAmount */\n      0x01\n      add\n      sload\n        /* \"initial-offering.sol\":8822:8930  (bid.shareAmount <= sharesToAllocate) ... */\n    tag_242:\n        /* \"initial-offering.sol\":8794:8930  uint256 allocatableShares = (bid.shareAmount <= sharesToAllocate) ... */\n      swap1\n      pop\n        /* \"initial-offering.sol\":8977:9036  totalBidValue.add(allocatableShares.mul(bid.pricePerShare)) */\n      tag_243\n        /* \"initial-offering.sol\":8995:9035  allocatableShares.mul(bid.pricePerShare) */\n      tag_244\n        /* \"initial-offering.sol\":9017:9020  bid */\n      dup4\n        /* \"initial-offering.sol\":9017:9034  bid.pricePerShare */\n      0x02\n      add\n      sload\n        /* \"initial-offering.sol\":8995:9012  allocatableShares */\n      dup4\n        /* \"initial-offering.sol\":8995:9016  allocatableShares.mul */\n      tag_245\n      swap1\n        /* \"initial-offering.sol\":8995:9035  allocatableShares.mul(bid.pricePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_244:\n        /* \"initial-offering.sol\":8977:8990  totalBidValue */\n      dup7\n      swap1\n        /* \"initial-offering.sol\":8977:8994  totalBidValue.add */\n      tag_246\n        /* \"initial-offering.sol\":8977:9036  totalBidValue.add(allocatableShares.mul(bid.pricePerShare)) */\n      jump\t// in\n    tag_243:\n        /* \"initial-offering.sol\":8961:9036  totalBidValue = totalBidValue.add(allocatableShares.mul(bid.pricePerShare)) */\n      swap5\n      pop\n        /* \"initial-offering.sol\":9069:9108  sharesToAllocate.sub(allocatableShares) */\n      tag_247\n        /* \"initial-offering.sol\":9069:9085  sharesToAllocate */\n      dup5\n        /* \"initial-offering.sol\":9090:9107  allocatableShares */\n      dup3\n        /* \"initial-offering.sol\":9069:9089  sharesToAllocate.sub */\n      tag_248\n        /* \"initial-offering.sol\":9069:9108  sharesToAllocate.sub(allocatableShares) */\n      jump\t// in\n    tag_247:\n        /* \"initial-offering.sol\":9050:9108  sharesToAllocate = sharesToAllocate.sub(allocatableShares) */\n      swap4\n      pop\n        /* \"initial-offering.sol\":8688:9119  {... */\n      pop\n      pop\n        /* \"initial-offering.sol\":8623:9119  for(uint256 i = 0; i < bids.length && sharesToAllocate > 0; i++) {... */\n    tag_235:\n        /* \"initial-offering.sol\":8683:8686  i++ */\n      dup1\n      tag_249\n      dup2\n      tag_145\n      jump\t// in\n    tag_249:\n      swap2\n      pop\n      pop\n        /* \"initial-offering.sol\":8623:9119  for(uint256 i = 0; i < bids.length && sharesToAllocate > 0; i++) {... */\n      jump(tag_233)\n    tag_234:\n      pop\n        /* \"initial-offering.sol\":9238:9261  asset.minimumTotalPrice */\n      0x04\n      dup5\n      add\n      sload\n        /* \"initial-offering.sol\":9221:9261  totalBidValue >= asset.minimumTotalPrice */\n      dup3\n      lt\n      dup1\n      iszero\n      swap1\n        /* \"initial-offering.sol\":9280:12088  if (successful) {... */\n      tag_250\n      jumpi\n        /* \"initial-offering.sol\":9404:9421  asset.totalShares */\n      0x02\n      dup6\n      add\n      sload\n        /* \"initial-offering.sol\":9380:9401  asset.sharesRemaining */\n      0x03\n      dup7\n      add\n        /* \"initial-offering.sol\":9380:9421  asset.sharesRemaining = asset.totalShares */\n      sstore\n      0x00\n        /* \"initial-offering.sol\":9502:9694  for (uint256 i = 0; i < asset.ownerAddresses.length; i++) {... */\n    tag_251:\n        /* \"initial-offering.sol\":9526:9546  asset.ownerAddresses */\n      0x07\n      dup7\n      add\n        /* \"initial-offering.sol\":9526:9553  asset.ownerAddresses.length */\n      sload\n        /* \"initial-offering.sol\":9522:9553  i < asset.ownerAddresses.length */\n      dup2\n      lt\n        /* \"initial-offering.sol\":9502:9694  for (uint256 i = 0; i < asset.ownerAddresses.length; i++) {... */\n      iszero\n      tag_252\n      jumpi\n        /* \"initial-offering.sol\":9578:9598  address ownerAddress */\n      0x00\n        /* \"initial-offering.sol\":9601:9606  asset */\n      dup7\n        /* \"initial-offering.sol\":9601:9621  asset.ownerAddresses */\n      0x07\n      add\n        /* \"initial-offering.sol\":9622:9623  i */\n      dup3\n        /* \"initial-offering.sol\":9601:9624  asset.ownerAddresses[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_255\n      jumpi\n      tag_255\n      tag_93\n      jump\t// in\n    tag_255:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"initial-offering.sol\":9642:9668  asset.owners[ownerAddress] */\n      dup3\n      mstore\n        /* \"initial-offering.sol\":9642:9654  asset.owners */\n      0x08\n      dup10\n      add\n        /* \"initial-offering.sol\":9642:9668  asset.owners[ownerAddress] */\n      swap1\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"initial-offering.sol\":9601:9624  asset.ownerAddresses[i] */\n      0x01\n        /* \"initial-offering.sol\":9642:9675  asset.owners[ownerAddress].shares */\n      swap1\n      dup2\n      add\n        /* \"initial-offering.sol\":9642:9679  asset.owners[ownerAddress].shares = 0 */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"initial-offering.sol\":9555:9558  i++ */\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n      pop\n        /* \"initial-offering.sol\":9502:9694  for (uint256 i = 0; i < asset.ownerAddresses.length; i++) {... */\n      jump(tag_251)\n    tag_252:\n      pop\n        /* \"initial-offering.sol\":9752:9779  delete asset.ownerAddresses */\n      tag_257\n        /* \"initial-offering.sol\":9759:9779  asset.ownerAddresses */\n      0x07\n      dup7\n      add\n      0x00\n        /* \"initial-offering.sol\":9752:9779  delete asset.ownerAddresses */\n      tag_258\n      jump\t// in\n    tag_257:\n        /* \"initial-offering.sol\":9855:9864  uint256 i */\n      0x00\n        /* \"initial-offering.sol\":9851:11976  for(uint256 i = 0; i < bids.length; i++) {... */\n    tag_259:\n        /* \"initial-offering.sol\":9874:9885  bids.length */\n      dup5\n      sload\n        /* \"initial-offering.sol\":9870:9885  i < bids.length */\n      dup2\n      lt\n        /* \"initial-offering.sol\":9851:11976  for(uint256 i = 0; i < bids.length; i++) {... */\n      iszero\n      tag_260\n      jumpi\n        /* \"initial-offering.sol\":9913:9934  asset.sharesRemaining */\n      0x03\n      dup7\n      add\n      sload\n        /* \"initial-offering.sol\":9910:9946  if(asset.sharesRemaining == 0) break */\n      iszero\n        /* \"initial-offering.sol\":9941:9946  break */\n      tag_260\n        /* \"initial-offering.sol\":9910:9946  if(asset.sharesRemaining == 0) break */\n      jumpi\n        /* \"initial-offering.sol\":9981:9996  Bid storage bid */\n      0x00\n        /* \"initial-offering.sol\":9999:10003  bids */\n      dup6\n        /* \"initial-offering.sol\":10004:10005  i */\n      dup3\n        /* \"initial-offering.sol\":9999:10006  bids[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_264\n      jumpi\n      tag_264\n      tag_93\n      jump\t// in\n    tag_264:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x04\n      swap1\n      swap2\n      mul\n      add\n        /* \"initial-offering.sol\":10027:10040  bid.allocated */\n      0x03\n      dup2\n      add\n      sload\n        /* \"initial-offering.sol\":9999:10006  bids[i] */\n      swap1\n      swap2\n      pop\n        /* \"initial-offering.sol\":10027:10040  bid.allocated */\n      0xff\n      and\n        /* \"initial-offering.sol\":10024:10050  if(bid.allocated) continue */\n      iszero\n      tag_266\n      jumpi\n        /* \"initial-offering.sol\":10042:10050  continue */\n      pop\n      jump(tag_261)\n        /* \"initial-offering.sol\":10024:10050  if(bid.allocated) continue */\n    tag_266:\n        /* \"initial-offering.sol\":10085:10110  uint256 allocatableShares */\n      0x00\n        /* \"initial-offering.sol\":10133:10138  asset */\n      dup8\n        /* \"initial-offering.sol\":10133:10154  asset.sharesRemaining */\n      0x03\n      add\n      sload\n        /* \"initial-offering.sol\":10114:10117  bid */\n      dup3\n        /* \"initial-offering.sol\":10114:10129  bid.shareAmount */\n      0x01\n      add\n      sload\n        /* \"initial-offering.sol\":10114:10154  bid.shareAmount <= asset.sharesRemaining */\n      gt\n      iszero\n        /* \"initial-offering.sol\":10113:10239  (bid.shareAmount <= asset.sharesRemaining) ... */\n      tag_267\n      jumpi\n        /* \"initial-offering.sol\":10218:10223  asset */\n      dup8\n        /* \"initial-offering.sol\":10218:10239  asset.sharesRemaining */\n      0x03\n      add\n      sload\n        /* \"initial-offering.sol\":10113:10239  (bid.shareAmount <= asset.sharesRemaining) ... */\n      jump(tag_268)\n    tag_267:\n        /* \"initial-offering.sol\":10179:10182  bid */\n      dup2\n        /* \"initial-offering.sol\":10179:10194  bid.shareAmount */\n      0x01\n      add\n      sload\n        /* \"initial-offering.sol\":10113:10239  (bid.shareAmount <= asset.sharesRemaining) ... */\n    tag_268:\n        /* \"initial-offering.sol\":10085:10239  uint256 allocatableShares = (bid.shareAmount <= asset.sharesRemaining) ... */\n      swap1\n      pop\n        /* \"initial-offering.sol\":10338:10361  uint256 requiredPayment */\n      0x00\n        /* \"initial-offering.sol\":10364:10404  allocatableShares.mul(bid.pricePerShare) */\n      tag_269\n        /* \"initial-offering.sol\":10386:10389  bid */\n      dup4\n        /* \"initial-offering.sol\":10386:10403  bid.pricePerShare */\n      0x02\n      add\n      sload\n        /* \"initial-offering.sol\":10364:10381  allocatableShares */\n      dup4\n        /* \"initial-offering.sol\":10364:10385  allocatableShares.mul */\n      tag_245\n      swap1\n        /* \"initial-offering.sol\":10364:10404  allocatableShares.mul(bid.pricePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_269:\n        /* \"initial-offering.sol\":10338:10404  uint256 requiredPayment = allocatableShares.mul(bid.pricePerShare) */\n      swap1\n      pop\n        /* \"initial-offering.sol\":10422:10442  uint256 refundAmount */\n      0x00\n        /* \"initial-offering.sol\":10445:10504  bid.shareAmount.mul(bid.pricePerShare).sub(requiredPayment) */\n      tag_270\n        /* \"initial-offering.sol\":10488:10503  requiredPayment */\n      dup3\n        /* \"initial-offering.sol\":10445:10483  bid.shareAmount.mul(bid.pricePerShare) */\n      tag_271\n        /* \"initial-offering.sol\":10465:10468  bid */\n      dup7\n        /* \"initial-offering.sol\":10465:10482  bid.pricePerShare */\n      0x02\n      add\n      sload\n        /* \"initial-offering.sol\":10445:10448  bid */\n      dup8\n        /* \"initial-offering.sol\":10445:10460  bid.shareAmount */\n      0x01\n      add\n      sload\n        /* \"initial-offering.sol\":10445:10464  bid.shareAmount.mul */\n      tag_245\n      swap1\n        /* \"initial-offering.sol\":10445:10483  bid.shareAmount.mul(bid.pricePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_271:\n        /* \"initial-offering.sol\":10445:10487  bid.shareAmount.mul(bid.pricePerShare).sub */\n      swap1\n      tag_248\n        /* \"initial-offering.sol\":10445:10504  bid.shareAmount.mul(bid.pricePerShare).sub(requiredPayment) */\n      jump\t// in\n    tag_270:\n        /* \"initial-offering.sol\":10422:10504  uint256 refundAmount = bid.shareAmount.mul(bid.pricePerShare).sub(requiredPayment) */\n      swap1\n      pop\n        /* \"initial-offering.sol\":10542:10563  allocatableShares > 0 */\n      dup3\n      iszero\n        /* \"initial-offering.sol\":10539:11713  if(allocatableShares > 0) {... */\n      tag_272\n      jumpi\n        /* \"initial-offering.sol\":10653:10672  asset.originalOwner */\n      dup10\n      sload\n        /* \"initial-offering.sol\":10645:10699  payable(asset.originalOwner).transfer(requiredPayment) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"initial-offering.sol\":10653:10672  asset.originalOwner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"initial-offering.sol\":10645:10699  payable(asset.originalOwner).transfer(requiredPayment) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"initial-offering.sol\":10683:10698  requiredPayment */\n      dup5\n      swap1\n        /* \"initial-offering.sol\":10653:10672  asset.originalOwner */\n      0x00\n        /* \"initial-offering.sol\":10645:10699  payable(asset.originalOwner).transfer(requiredPayment) */\n      dup2\n        /* \"initial-offering.sol\":10653:10672  asset.originalOwner */\n      dup2\n        /* \"initial-offering.sol\":10645:10699  payable(asset.originalOwner).transfer(requiredPayment) */\n      dup2\n        /* \"initial-offering.sol\":10683:10698  requiredPayment */\n      dup6\n        /* \"initial-offering.sol\":10653:10672  asset.originalOwner */\n      dup9\n        /* \"initial-offering.sol\":10645:10699  payable(asset.originalOwner).transfer(requiredPayment) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_274\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_274:\n      pop\n        /* \"initial-offering.sol\":10813:10834  asset.sharesRemaining */\n      0x03\n      dup11\n      add\n      sload\n        /* \"initial-offering.sol\":10813:10857  asset.sharesRemaining.sub(allocatableShares) */\n      tag_275\n      swap1\n        /* \"initial-offering.sol\":10839:10856  allocatableShares */\n      dup5\n        /* \"initial-offering.sol\":10813:10838  asset.sharesRemaining.sub */\n      tag_248\n        /* \"initial-offering.sol\":10813:10857  asset.sharesRemaining.sub(allocatableShares) */\n      jump\t// in\n    tag_275:\n        /* \"initial-offering.sol\":10789:10810  asset.sharesRemaining */\n      0x03\n      dup1\n      dup13\n      add\n        /* \"initial-offering.sol\":10789:10857  asset.sharesRemaining = asset.sharesRemaining.sub(allocatableShares) */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"initial-offering.sol\":10879:10892  bid.allocated */\n      dup5\n      add\n        /* \"initial-offering.sol\":10879:10899  bid.allocated = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"initial-offering.sol\":10895:10899  true */\n      0x01\n        /* \"initial-offering.sol\":10879:10899  bid.allocated = true */\n      or\n      swap1\n      sstore\n        /* \"initial-offering.sol\":11003:11013  bid.bidder */\n      dup4\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"initial-offering.sol\":10879:10892  bid.allocated */\n      0x00\n        /* \"initial-offering.sol\":10990:11014  asset.owners[bid.bidder] */\n      swap1\n      dup2\n      mstore\n        /* \"initial-offering.sol\":10990:11002  asset.owners */\n      0x08\n      dup12\n      add\n        /* \"initial-offering.sol\":10990:11014  asset.owners[bid.bidder] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"initial-offering.sol\":10990:11021  asset.owners[bid.bidder].exists */\n      0x02\n      add\n      sload\n        /* \"initial-offering.sol\":10879:10899  bid.allocated = true */\n      0xff\n        /* \"initial-offering.sol\":10990:11021  asset.owners[bid.bidder].exists */\n      and\n        /* \"initial-offering.sol\":10985:11494  if (!asset.owners[bid.bidder].exists) {... */\n      tag_276\n      jumpi\n        /* \"initial-offering.sol\":11049:11054  asset */\n      dup10\n        /* \"initial-offering.sol\":11049:11069  asset.ownerAddresses */\n      0x07\n      add\n        /* \"initial-offering.sol\":11075:11078  bid */\n      dup5\n        /* \"initial-offering.sol\":11075:11085  bid.bidder */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"initial-offering.sol\":11049:11086  asset.ownerAddresses.push(bid.bidder) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"initial-offering.sol\":11139:11328  AssetOwner({... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"initial-offering.sol\":11194:11197  bid */\n      dup6\n        /* \"initial-offering.sol\":11194:11204  bid.bidder */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"initial-offering.sol\":11139:11328  AssetOwner({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"initial-offering.sol\":11242:11259  allocatableShares */\n      dup5\n        /* \"initial-offering.sol\":11139:11328  AssetOwner({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"initial-offering.sol\":11297:11301  true */\n      0x01\n        /* \"initial-offering.sol\":11139:11328  AssetOwner({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"initial-offering.sol\":11112:11117  asset */\n      dup11\n        /* \"initial-offering.sol\":11112:11124  asset.owners */\n      0x08\n      add\n        /* \"initial-offering.sol\":11112:11136  asset.owners[bid.bidder] */\n      0x00\n        /* \"initial-offering.sol\":11125:11128  bid */\n      dup7\n        /* \"initial-offering.sol\":11125:11135  bid.bidder */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"initial-offering.sol\":11112:11136  asset.owners[bid.bidder] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"initial-offering.sol\":11112:11328  asset.owners[bid.bidder] = AssetOwner({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"initial-offering.sol\":10985:11494  if (!asset.owners[bid.bidder].exists) {... */\n      jump(tag_278)\n    tag_276:\n        /* \"initial-offering.sol\":11430:11440  bid.bidder */\n      dup4\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"initial-offering.sol\":11417:11441  asset.owners[bid.bidder] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"initial-offering.sol\":11417:11429  asset.owners */\n      0x08\n      dup12\n      add\n        /* \"initial-offering.sol\":11417:11441  asset.owners[bid.bidder] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"initial-offering.sol\":11430:11440  bid.bidder */\n      0x01\n        /* \"initial-offering.sol\":11417:11448  asset.owners[bid.bidder].shares */\n      add\n      sload\n        /* \"initial-offering.sol\":11417:11471  asset.owners[bid.bidder].shares.add(allocatableShares) */\n      tag_279\n      swap1\n        /* \"initial-offering.sol\":11453:11470  allocatableShares */\n      dup5\n        /* \"initial-offering.sol\":11417:11452  asset.owners[bid.bidder].shares.add */\n      tag_246\n        /* \"initial-offering.sol\":11417:11471  asset.owners[bid.bidder].shares.add(allocatableShares) */\n      jump\t// in\n    tag_279:\n        /* \"initial-offering.sol\":11396:11406  bid.bidder */\n      dup5\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"initial-offering.sol\":11383:11407  asset.owners[bid.bidder] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"initial-offering.sol\":11383:11395  asset.owners */\n      0x08\n      dup13\n      add\n        /* \"initial-offering.sol\":11383:11407  asset.owners[bid.bidder] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"initial-offering.sol\":11396:11406  bid.bidder */\n      0x01\n        /* \"initial-offering.sol\":11383:11414  asset.owners[bid.bidder].shares */\n      add\n        /* \"initial-offering.sol\":11383:11471  asset.owners[bid.bidder].shares = asset.owners[bid.bidder].shares.add(allocatableShares) */\n      sstore\n        /* \"initial-offering.sol\":10985:11494  if (!asset.owners[bid.bidder].exists) {... */\n    tag_278:\n        /* \"initial-offering.sol\":11567:11577  bid.bidder */\n      dup4\n      sload\n        /* \"initial-offering.sol\":11598:11615  bid.pricePerShare */\n      0x02\n      dup6\n      add\n      sload\n        /* \"initial-offering.sol\":11541:11616  SharesAllocated(_assetId, bid.bidder, allocatableShares, bid.pricePerShare) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"initial-offering.sol\":11567:11577  bid.bidder */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"initial-offering.sol\":11557:11565  _assetId */\n      dup14\n      swap2\n        /* \"initial-offering.sol\":11541:11616  SharesAllocated(_assetId, bid.bidder, allocatableShares, bid.pricePerShare) */\n      0x46d3c445b404e9de2c80e1c0489cc92f23dfd5462ce7c6b3a1a54b3f0f70bcfc\n      swap2\n      tag_280\n      swap2\n        /* \"initial-offering.sol\":11579:11596  allocatableShares */\n      dup9\n        /* \"#utility.yul\":13767:13792   */\n      dup3\n      mstore\n        /* \"#utility.yul\":13823:13825   */\n      0x20\n        /* \"#utility.yul\":13808:13826   */\n      dup3\n      add\n        /* \"#utility.yul\":13801:13835   */\n      mstore\n        /* \"#utility.yul\":13755:13757   */\n      0x40\n        /* \"#utility.yul\":13740:13758   */\n      add\n      swap1\n        /* \"#utility.yul\":13593:13841   */\n      jump\n        /* \"initial-offering.sol\":11541:11616  SharesAllocated(_assetId, bid.bidder, allocatableShares, bid.pricePerShare) */\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"initial-offering.sol\":11664:11674  bid.bidder */\n      dup4\n      sload\n        /* \"initial-offering.sol\":11643:11694  OwnerAdded(_assetId, bid.bidder, allocatableShares) */\n      mload(0x40)\n        /* \"#utility.yul\":2475:2500   */\n      dup5\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"initial-offering.sol\":11664:11674  bid.bidder */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"initial-offering.sol\":11654:11662  _assetId */\n      dup13\n      swap1\n        /* \"initial-offering.sol\":11643:11694  OwnerAdded(_assetId, bid.bidder, allocatableShares) */\n      0x25af9e0275abbb4de910d2062f5dcca6d4c47f1313066083dd9d7077608a7a54\n      swap1\n        /* \"#utility.yul\":2463:2465   */\n      0x20\n        /* \"#utility.yul\":2448:2466   */\n      add\n        /* \"initial-offering.sol\":11643:11694  OwnerAdded(_assetId, bid.bidder, allocatableShares) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"initial-offering.sol\":10539:11713  if(allocatableShares > 0) {... */\n    tag_272:\n        /* \"initial-offering.sol\":11796:11812  refundAmount > 0 */\n      dup1\n      iszero\n        /* \"initial-offering.sol\":11793:11962  if(refundAmount > 0) {... */\n      tag_282\n      jumpi\n        /* \"initial-offering.sol\":11844:11854  bid.bidder */\n      dup4\n      sload\n        /* \"initial-offering.sol\":11836:11878  payable(bid.bidder).transfer(refundAmount) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"initial-offering.sol\":11844:11854  bid.bidder */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"initial-offering.sol\":11836:11878  payable(bid.bidder).transfer(refundAmount) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"initial-offering.sol\":11865:11877  refundAmount */\n      dup4\n      swap1\n        /* \"initial-offering.sol\":11844:11854  bid.bidder */\n      0x00\n        /* \"initial-offering.sol\":11836:11878  payable(bid.bidder).transfer(refundAmount) */\n      dup2\n        /* \"initial-offering.sol\":11844:11854  bid.bidder */\n      dup2\n        /* \"initial-offering.sol\":11836:11878  payable(bid.bidder).transfer(refundAmount) */\n      dup2\n        /* \"initial-offering.sol\":11865:11877  refundAmount */\n      dup6\n        /* \"initial-offering.sol\":11844:11854  bid.bidder */\n      dup9\n        /* \"initial-offering.sol\":11836:11878  payable(bid.bidder).transfer(refundAmount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_284\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_284:\n      pop\n        /* \"initial-offering.sol\":11918:11928  bid.bidder */\n      dup4\n      sload\n        /* \"initial-offering.sol\":11905:11943  RefundIssued(bid.bidder, refundAmount) */\n      mload(0x40)\n        /* \"#utility.yul\":2475:2500   */\n      dup3\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"initial-offering.sol\":11918:11928  bid.bidder */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"initial-offering.sol\":11905:11943  RefundIssued(bid.bidder, refundAmount) */\n      0xa171b6942063c6f2800ce40a780edce37baa2b618571b11eedd1e69e626e7d76\n      swap1\n        /* \"#utility.yul\":2463:2465   */\n      0x20\n        /* \"#utility.yul\":2448:2466   */\n      add\n        /* \"initial-offering.sol\":11905:11943  RefundIssued(bid.bidder, refundAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"initial-offering.sol\":11793:11962  if(refundAmount > 0) {... */\n    tag_282:\n        /* \"initial-offering.sol\":9892:11976  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"initial-offering.sol\":9851:11976  for(uint256 i = 0; i < bids.length; i++) {... */\n    tag_261:\n        /* \"initial-offering.sol\":9887:9890  i++ */\n      0x01\n      add\n        /* \"initial-offering.sol\":9851:11976  for(uint256 i = 0; i < bids.length; i++) {... */\n      jump(tag_259)\n    tag_260:\n      pop\n        /* \"initial-offering.sol\":9280:12088  if (successful) {... */\n      jump(tag_287)\n    tag_250:\n        /* \"initial-offering.sol\":12053:12077  _refundAllBids(_assetId) */\n      tag_287\n        /* \"initial-offering.sol\":12068:12076  _assetId */\n      dup7\n        /* \"initial-offering.sol\":12053:12067  _refundAllBids */\n      tag_288\n        /* \"initial-offering.sol\":12053:12077  _refundAllBids(_assetId) */\n      jump\t// in\n    tag_287:\n        /* \"initial-offering.sol\":12111:12162  BiddingEnded(_assetId, successful, block.timestamp) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":7791:7805   */\n      dup3\n      iszero\n        /* \"#utility.yul\":7784:7806   */\n      iszero\n        /* \"#utility.yul\":7766:7807   */\n      dup2\n      mstore\n        /* \"initial-offering.sol\":12146:12161  block.timestamp */\n      timestamp\n        /* \"#utility.yul\":7838:7840   */\n      0x20\n        /* \"#utility.yul\":7823:7841   */\n      dup3\n      add\n        /* \"#utility.yul\":7816:7850   */\n      mstore\n        /* \"initial-offering.sol\":12124:12132  _assetId */\n      dup8\n      swap2\n        /* \"initial-offering.sol\":12111:12162  BiddingEnded(_assetId, successful, block.timestamp) */\n      0x4d7a5e450395fb8fb6b67c4751f80f057cd5a74550929306eff2cac7f0ecc188\n      swap2\n        /* \"#utility.yul\":7739:7757   */\n      add\n        /* \"initial-offering.sol\":12111:12162  BiddingEnded(_assetId, successful, block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"initial-offering.sol\":8218:12169  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"initial-offering.sol\":8169:12169  function _processBids(uint256 _assetId) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_168:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3908:3915  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_292\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3938:3939  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3935  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3934:3939  a / b */\n      tag_293\n      jump\t// in\n    tag_292:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3927:3939  return a / b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3850:3946  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_291:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"initial-offering.sol\":12217:12660  function _sortBids(uint256 _assetId) internal {... */\n    tag_232:\n        /* \"initial-offering.sol\":12273:12291  Bid[] storage bids */\n      0x00\n        /* \"initial-offering.sol\":12294:12313  assetBids[_assetId] */\n      dup2\n      dup2\n      mstore\n        /* \"initial-offering.sol\":12294:12303  assetBids */\n      0x02\n        /* \"initial-offering.sol\":12294:12313  assetBids[_assetId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"initial-offering.sol\":12323:12654  for(uint256 i = 0; i < bids.length; i++) {... */\n    tag_295:\n        /* \"initial-offering.sol\":12346:12357  bids.length */\n      dup2\n      sload\n        /* \"initial-offering.sol\":12342:12357  i < bids.length */\n      dup2\n      lt\n        /* \"initial-offering.sol\":12323:12654  for(uint256 i = 0; i < bids.length; i++) {... */\n      iszero\n      tag_296\n      jumpi\n        /* \"initial-offering.sol\":12382:12391  uint256 j */\n      0x00\n        /* \"initial-offering.sol\":12394:12397  i+1 */\n      tag_301\n        /* \"initial-offering.sol\":12394:12395  i */\n      dup3\n        /* \"initial-offering.sol\":12396:12397  1 */\n      0x01\n        /* \"initial-offering.sol\":12394:12397  i+1 */\n      tag_149\n      jump\t// in\n    tag_301:\n        /* \"initial-offering.sol\":12382:12397  uint256 j = i+1 */\n      swap1\n      pop\n        /* \"initial-offering.sol\":12378:12644  for(uint256 j = i+1; j < bids.length; j++) {... */\n    tag_298:\n        /* \"initial-offering.sol\":12403:12414  bids.length */\n      dup3\n      sload\n        /* \"initial-offering.sol\":12399:12414  j < bids.length */\n      dup2\n      lt\n        /* \"initial-offering.sol\":12378:12644  for(uint256 j = i+1; j < bids.length; j++) {... */\n      iszero\n      tag_299\n      jumpi\n        /* \"initial-offering.sol\":12466:12470  bids */\n      dup3\n        /* \"initial-offering.sol\":12471:12472  j */\n      dup2\n        /* \"initial-offering.sol\":12466:12473  bids[j] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_303\n      jumpi\n      tag_303\n      tag_93\n      jump\t// in\n    tag_303:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"initial-offering.sol\":12466:12487  bids[j].pricePerShare */\n      0x02\n      add\n      sload\n        /* \"initial-offering.sol\":12442:12446  bids */\n      dup4\n        /* \"initial-offering.sol\":12447:12448  i */\n      dup4\n        /* \"initial-offering.sol\":12442:12449  bids[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_306\n      jumpi\n      tag_306\n      tag_93\n      jump\t// in\n    tag_306:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"initial-offering.sol\":12442:12463  bids[i].pricePerShare */\n      0x02\n      add\n      sload\n        /* \"initial-offering.sol\":12442:12487  bids[i].pricePerShare < bids[j].pricePerShare */\n      lt\n        /* \"initial-offering.sol\":12439:12630  if(bids[i].pricePerShare < bids[j].pricePerShare) {... */\n      iszero\n      tag_308\n      jumpi\n        /* \"initial-offering.sol\":12511:12526  Bid memory temp */\n      0x00\n        /* \"initial-offering.sol\":12529:12533  bids */\n      dup4\n        /* \"initial-offering.sol\":12534:12535  i */\n      dup4\n        /* \"initial-offering.sol\":12529:12536  bids[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_310\n      jumpi\n      tag_310\n      tag_93\n      jump\t// in\n    tag_310:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"initial-offering.sol\":12511:12536  Bid memory temp = bids[i] */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n        /* \"initial-offering.sol\":12529:12536  bids[i] */\n      0x04\n      swap1\n      swap4\n      mul\n      swap1\n      swap2\n      add\n        /* \"initial-offering.sol\":12511:12536  Bid memory temp = bids[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup4\n      mstore\n      0x01\n      dup2\n      add\n      sload\n      swap4\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x02\n      dup4\n      add\n      sload\n      swap1\n      dup3\n      add\n      mstore\n      0x03\n      swap1\n      swap2\n      add\n      sload\n      0xff\n      and\n      iszero\n      iszero\n      0x60\n      dup3\n      add\n      mstore\n        /* \"initial-offering.sol\":12568:12575  bids[j] */\n      dup5\n      sload\n        /* \"initial-offering.sol\":12511:12536  Bid memory temp = bids[i] */\n      swap1\n      swap2\n      pop\n        /* \"initial-offering.sol\":12568:12572  bids */\n      dup5\n      swap1\n        /* \"initial-offering.sol\":12573:12574  j */\n      dup4\n      swap1\n        /* \"initial-offering.sol\":12568:12575  bids[j] */\n      dup2\n      lt\n      tag_313\n      jumpi\n      tag_313\n      tag_93\n      jump\t// in\n    tag_313:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"initial-offering.sol\":12558:12562  bids */\n      dup5\n        /* \"initial-offering.sol\":12563:12564  i */\n      dup5\n        /* \"initial-offering.sol\":12558:12565  bids[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_316\n      jumpi\n      tag_316\n      tag_93\n      jump\t// in\n    tag_316:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"initial-offering.sol\":12558:12575  bids[i] = bids[j] */\n      dup3\n      sload\n        /* \"initial-offering.sol\":12558:12565  bids[i] */\n      0x04\n      swap1\n      swap3\n      mul\n      add\n        /* \"initial-offering.sol\":12558:12575  bids[i] = bids[j] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      dup2\n      sstore\n      0x01\n      dup1\n      dup4\n      add\n      sload\n      swap1\n      dup3\n      add\n      sstore\n      0x02\n      dup1\n      dup4\n      add\n      sload\n      swap1\n      dup3\n      add\n      sstore\n      0x03\n      swap2\n      dup3\n      add\n      sload\n      swap2\n      add\n      dup1\n      sload\n      0xff\n      swap1\n      swap3\n      and\n      iszero\n      iszero\n      not(0xff)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"initial-offering.sol\":12597:12604  bids[j] */\n      dup4\n      sload\n        /* \"initial-offering.sol\":12607:12611  temp */\n      dup2\n      swap1\n        /* \"initial-offering.sol\":12597:12601  bids */\n      dup6\n      swap1\n        /* \"initial-offering.sol\":12602:12603  j */\n      dup5\n      swap1\n        /* \"initial-offering.sol\":12597:12604  bids[j] */\n      dup2\n      lt\n      tag_319\n      jumpi\n      tag_319\n      tag_93\n      jump\t// in\n    tag_319:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"initial-offering.sol\":12597:12611  bids[j] = temp */\n      dup4\n      mload\n        /* \"initial-offering.sol\":12597:12604  bids[j] */\n      0x04\n      swap3\n      swap1\n      swap3\n      mul\n      add\n        /* \"initial-offering.sol\":12597:12611  bids[j] = temp */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      dup2\n      sstore\n      swap1\n      dup3\n      add\n      mload\n      0x01\n      dup3\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      0x02\n      dup3\n      add\n      sstore\n      0x60\n      swap1\n      swap2\n      add\n      mload\n      0x03\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n        /* \"initial-offering.sol\":12439:12630  if(bids[i].pricePerShare < bids[j].pricePerShare) {... */\n    tag_308:\n        /* \"initial-offering.sol\":12416:12419  j++ */\n      0x01\n      add\n        /* \"initial-offering.sol\":12378:12644  for(uint256 j = i+1; j < bids.length; j++) {... */\n      jump(tag_298)\n    tag_299:\n      pop\n        /* \"initial-offering.sol\":12359:12362  i++ */\n      0x01\n      add\n        /* \"initial-offering.sol\":12323:12654  for(uint256 i = 0; i < bids.length; i++) {... */\n      jump(tag_295)\n    tag_296:\n      pop\n        /* \"initial-offering.sol\":12263:12660  {... */\n      pop\n        /* \"initial-offering.sol\":12217:12660  function _sortBids(uint256 _assetId) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_245:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_292\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_323\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_292\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_149\n      jump\t// in\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3122:3218  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_248:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3180:3187  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_292\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3210:3211  b */\n      dup3\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3207  a */\n      dup5\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3206:3211  a - b */\n      tag_328\n      jump\t// in\n        /* \"initial-offering.sol\":12735:13171  function _refundAllBids(uint256 _assetId) internal {... */\n    tag_288:\n        /* \"initial-offering.sol\":12796:12814  Bid[] storage bids */\n      0x00\n        /* \"initial-offering.sol\":12817:12836  assetBids[_assetId] */\n      dup2\n      dup2\n      mstore\n        /* \"initial-offering.sol\":12817:12826  assetBids */\n      0x02\n        /* \"initial-offering.sol\":12817:12836  assetBids[_assetId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"initial-offering.sol\":12846:13165  for(uint256 i = 0; i < bids.length; i++) {... */\n    tag_330:\n        /* \"initial-offering.sol\":12869:12880  bids.length */\n      dup2\n      sload\n        /* \"initial-offering.sol\":12865:12880  i < bids.length */\n      dup2\n      lt\n        /* \"initial-offering.sol\":12846:13165  for(uint256 i = 0; i < bids.length; i++) {... */\n      iszero\n      tag_296\n      jumpi\n        /* \"initial-offering.sol\":12905:12909  bids */\n      dup2\n        /* \"initial-offering.sol\":12910:12911  i */\n      dup2\n        /* \"initial-offering.sol\":12905:12912  bids[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_334\n      jumpi\n      tag_334\n      tag_93\n      jump\t// in\n    tag_334:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"initial-offering.sol\":12905:12922  bids[i].allocated */\n      0x03\n        /* \"initial-offering.sol\":12905:12912  bids[i] */\n      0x04\n      swap1\n      swap3\n      mul\n      add\n        /* \"initial-offering.sol\":12905:12922  bids[i].allocated */\n      add\n      sload\n      0xff\n      and\n        /* \"initial-offering.sol\":12901:13155  if(!bids[i].allocated) {... */\n      tag_336\n      jumpi\n        /* \"initial-offering.sol\":12942:12962  uint256 refundAmount */\n      0x00\n        /* \"initial-offering.sol\":12965:13011  bids[i].shareAmount.mul(bids[i].pricePerShare) */\n      tag_337\n        /* \"initial-offering.sol\":12989:12993  bids */\n      dup4\n        /* \"initial-offering.sol\":12994:12995  i */\n      dup4\n        /* \"initial-offering.sol\":12989:12996  bids[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_339\n      jumpi\n      tag_339\n      tag_93\n      jump\t// in\n    tag_339:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"initial-offering.sol\":12989:13010  bids[i].pricePerShare */\n      0x02\n      add\n      sload\n        /* \"initial-offering.sol\":12965:12969  bids */\n      dup5\n        /* \"initial-offering.sol\":12970:12971  i */\n      dup5\n        /* \"initial-offering.sol\":12965:12972  bids[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_342\n      jumpi\n      tag_342\n      tag_93\n      jump\t// in\n    tag_342:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"initial-offering.sol\":12965:12984  bids[i].shareAmount */\n      0x01\n      add\n      sload\n        /* \"initial-offering.sol\":12965:12988  bids[i].shareAmount.mul */\n      tag_245\n      swap1\n        /* \"initial-offering.sol\":12965:13011  bids[i].shareAmount.mul(bids[i].pricePerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_337:\n        /* \"initial-offering.sol\":12942:13011  uint256 refundAmount = bids[i].shareAmount.mul(bids[i].pricePerShare) */\n      swap1\n      pop\n        /* \"initial-offering.sol\":13037:13041  bids */\n      dup3\n        /* \"initial-offering.sol\":13042:13043  i */\n      dup3\n        /* \"initial-offering.sol\":13037:13044  bids[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_345\n      jumpi\n      tag_345\n      tag_93\n      jump\t// in\n    tag_345:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      keccak256\n      0x04\n      swap1\n      swap2\n      mul\n      add\n        /* \"initial-offering.sol\":13037:13051  bids[i].bidder */\n      sload\n        /* \"initial-offering.sol\":13029:13075  payable(bids[i].bidder).transfer(refundAmount) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"initial-offering.sol\":13037:13051  bids[i].bidder */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"initial-offering.sol\":13029:13075  payable(bids[i].bidder).transfer(refundAmount) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"initial-offering.sol\":13062:13074  refundAmount */\n      dup5\n      swap2\n        /* \"initial-offering.sol\":13029:13075  payable(bids[i].bidder).transfer(refundAmount) */\n      dup2\n        /* \"initial-offering.sol\":13037:13044  bids[i] */\n      dup2\n        /* \"initial-offering.sol\":13029:13075  payable(bids[i].bidder).transfer(refundAmount) */\n      dup2\n        /* \"initial-offering.sol\":13062:13074  refundAmount */\n      dup6\n        /* \"initial-offering.sol\":13037:13051  bids[i].bidder */\n      dup9\n        /* \"initial-offering.sol\":13029:13075  payable(bids[i].bidder).transfer(refundAmount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_348\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_348:\n      pop\n        /* \"initial-offering.sol\":13111:13115  bids */\n      dup3\n        /* \"initial-offering.sol\":13116:13117  i */\n      dup3\n        /* \"initial-offering.sol\":13111:13118  bids[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_350\n      jumpi\n      tag_350\n      tag_93\n      jump\t// in\n    tag_350:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap2\n      dup3\n      swap1\n      keccak256\n      0x04\n      swap1\n      swap2\n      mul\n      add\n        /* \"initial-offering.sol\":13111:13125  bids[i].bidder */\n      sload\n        /* \"initial-offering.sol\":13098:13140  RefundIssued(bids[i].bidder, refundAmount) */\n      mload(0x40)\n        /* \"#utility.yul\":2475:2500   */\n      dup4\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"initial-offering.sol\":13111:13125  bids[i].bidder */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"initial-offering.sol\":13098:13140  RefundIssued(bids[i].bidder, refundAmount) */\n      0xa171b6942063c6f2800ce40a780edce37baa2b618571b11eedd1e69e626e7d76\n      swap2\n        /* \"#utility.yul\":2448:2466   */\n      add\n        /* \"initial-offering.sol\":13098:13140  RefundIssued(bids[i].bidder, refundAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"initial-offering.sol\":12924:13155  {... */\n      pop\n        /* \"initial-offering.sol\":12901:13155  if(!bids[i].allocated) {... */\n    tag_336:\n        /* \"initial-offering.sol\":12882:12885  i++ */\n      0x01\n      add\n        /* \"initial-offering.sol\":12846:13165  for(uint256 i = 0; i < bids.length; i++) {... */\n      jump(tag_330)\n    tag_258:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n    tag_356:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_357\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_356)\n    tag_357:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:240   */\n    tag_17:\n        /* \"#utility.yul\":73:79   */\n      0x00\n        /* \"#utility.yul\":126:128   */\n      0x20\n        /* \"#utility.yul\":114:123   */\n      dup3\n        /* \"#utility.yul\":105:112   */\n      dup5\n        /* \"#utility.yul\":101:124   */\n      sub\n        /* \"#utility.yul\":97:129   */\n      slt\n        /* \"#utility.yul\":94:146   */\n      iszero\n      tag_367\n      jumpi\n        /* \"#utility.yul\":142:143   */\n      0x00\n        /* \"#utility.yul\":139:140   */\n      dup1\n        /* \"#utility.yul\":132:144   */\n      revert\n        /* \"#utility.yul\":94:146   */\n    tag_367:\n      pop\n        /* \"#utility.yul\":187:210   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":14:240   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":245:691   */\n    tag_358:\n        /* \"#utility.yul\":298:301   */\n      0x00\n        /* \"#utility.yul\":336:341   */\n      dup2\n        /* \"#utility.yul\":330:342   */\n      mload\n        /* \"#utility.yul\":363:369   */\n      dup1\n        /* \"#utility.yul\":358:361   */\n      dup5\n        /* \"#utility.yul\":351:370   */\n      mstore\n        /* \"#utility.yul\":395:399   */\n      0x20\n        /* \"#utility.yul\":390:393   */\n      dup5\n        /* \"#utility.yul\":386:400   */\n      add\n        /* \"#utility.yul\":379:400   */\n      swap4\n      pop\n        /* \"#utility.yul\":434:438   */\n      0x20\n        /* \"#utility.yul\":427:432   */\n      dup4\n        /* \"#utility.yul\":423:439   */\n      add\n        /* \"#utility.yul\":457:458   */\n      0x00\n        /* \"#utility.yul\":467:666   */\n    tag_369:\n        /* \"#utility.yul\":481:487   */\n      dup3\n        /* \"#utility.yul\":478:479   */\n      dup2\n        /* \"#utility.yul\":475:488   */\n      lt\n        /* \"#utility.yul\":467:666   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":546:559   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":542:581   */\n      and\n        /* \"#utility.yul\":530:582   */\n      dup7\n      mstore\n        /* \"#utility.yul\":611:615   */\n      0x20\n        /* \"#utility.yul\":602:616   */\n      swap6\n      dup7\n      add\n      swap6\n        /* \"#utility.yul\":639:656   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":578:579   */\n      0x01\n        /* \"#utility.yul\":496:505   */\n      add\n        /* \"#utility.yul\":467:666   */\n      jump(tag_369)\n    tag_371:\n      pop\n        /* \"#utility.yul\":682:685   */\n      swap4\n      swap5\n        /* \"#utility.yul\":245:691   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:1116   */\n    tag_359:\n        /* \"#utility.yul\":749:752   */\n      0x00\n        /* \"#utility.yul\":787:792   */\n      dup2\n        /* \"#utility.yul\":781:793   */\n      mload\n        /* \"#utility.yul\":814:820   */\n      dup1\n        /* \"#utility.yul\":809:812   */\n      dup5\n        /* \"#utility.yul\":802:821   */\n      mstore\n        /* \"#utility.yul\":846:850   */\n      0x20\n        /* \"#utility.yul\":841:844   */\n      dup5\n        /* \"#utility.yul\":837:851   */\n      add\n        /* \"#utility.yul\":830:851   */\n      swap4\n      pop\n        /* \"#utility.yul\":885:889   */\n      0x20\n        /* \"#utility.yul\":878:883   */\n      dup4\n        /* \"#utility.yul\":874:890   */\n      add\n        /* \"#utility.yul\":908:909   */\n      0x00\n        /* \"#utility.yul\":918:1091   */\n    tag_373:\n        /* \"#utility.yul\":932:938   */\n      dup3\n        /* \"#utility.yul\":929:930   */\n      dup2\n        /* \"#utility.yul\":926:939   */\n      lt\n        /* \"#utility.yul\":918:1091   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":993:1006   */\n      dup2\n      mload\n        /* \"#utility.yul\":981:1007   */\n      dup7\n      mstore\n        /* \"#utility.yul\":1036:1040   */\n      0x20\n        /* \"#utility.yul\":1027:1041   */\n      swap6\n      dup7\n      add\n      swap6\n        /* \"#utility.yul\":1064:1081   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":954:955   */\n      0x01\n        /* \"#utility.yul\":947:956   */\n      add\n        /* \"#utility.yul\":918:1091   */\n      jump(tag_373)\n        /* \"#utility.yul\":1121:2324   */\n    tag_20:\n        /* \"#utility.yul\":1528:1531   */\n      0x80\n        /* \"#utility.yul\":1517:1526   */\n      dup2\n        /* \"#utility.yul\":1510:1532   */\n      mstore\n        /* \"#utility.yul\":1491:1495   */\n      0x00\n        /* \"#utility.yul\":1555:1612   */\n      tag_377\n        /* \"#utility.yul\":1607:1610   */\n      0x80\n        /* \"#utility.yul\":1596:1605   */\n      dup4\n        /* \"#utility.yul\":1592:1611   */\n      add\n        /* \"#utility.yul\":1584:1590   */\n      dup8\n        /* \"#utility.yul\":1555:1612   */\n      tag_358\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":1660:1669   */\n      dup3\n        /* \"#utility.yul\":1652:1658   */\n      dup2\n        /* \"#utility.yul\":1648:1670   */\n      sub\n        /* \"#utility.yul\":1643:1645   */\n      0x20\n        /* \"#utility.yul\":1632:1641   */\n      dup5\n        /* \"#utility.yul\":1628:1646   */\n      add\n        /* \"#utility.yul\":1621:1671   */\n      mstore\n        /* \"#utility.yul\":1694:1738   */\n      tag_378\n        /* \"#utility.yul\":1731:1737   */\n      dup2\n        /* \"#utility.yul\":1723:1729   */\n      dup8\n        /* \"#utility.yul\":1694:1738   */\n      tag_359\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":1680:1738   */\n      swap1\n      pop\n        /* \"#utility.yul\":1786:1795   */\n      dup3\n        /* \"#utility.yul\":1778:1784   */\n      dup2\n        /* \"#utility.yul\":1774:1796   */\n      sub\n        /* \"#utility.yul\":1769:1771   */\n      0x40\n        /* \"#utility.yul\":1758:1767   */\n      dup5\n        /* \"#utility.yul\":1754:1772   */\n      add\n        /* \"#utility.yul\":1747:1797   */\n      mstore\n        /* \"#utility.yul\":1820:1864   */\n      tag_379\n        /* \"#utility.yul\":1857:1863   */\n      dup2\n        /* \"#utility.yul\":1849:1855   */\n      dup7\n        /* \"#utility.yul\":1820:1864   */\n      tag_359\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":1900:1922   */\n      dup4\n      dup2\n      sub\n        /* \"#utility.yul\":1895:1897   */\n      0x60\n        /* \"#utility.yul\":1880:1898   */\n      dup6\n      add\n        /* \"#utility.yul\":1873:1923   */\n      mstore\n        /* \"#utility.yul\":1972:1985   */\n      dup5\n      mload\n        /* \"#utility.yul\":1994:2016   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2044:2046   */\n      0x20\n        /* \"#utility.yul\":2070:2085   */\n      dup1\n      dup8\n      add\n      swap4\n      pop\n        /* \"#utility.yul\":2032:2047   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":2103:2104   */\n      0x00\n        /* \"#utility.yul\":2113:2298   */\n    tag_380:\n        /* \"#utility.yul\":2127:2133   */\n      dup2\n        /* \"#utility.yul\":2124:2125   */\n      dup2\n        /* \"#utility.yul\":2121:2134   */\n      lt\n        /* \"#utility.yul\":2113:2298   */\n      iszero\n      tag_382\n      jumpi\n        /* \"#utility.yul\":2202:2215   */\n      dup4\n      mload\n        /* \"#utility.yul\":2195:2216   */\n      iszero\n        /* \"#utility.yul\":2188:2217   */\n      iszero\n        /* \"#utility.yul\":2176:2218   */\n      dup4\n      mstore\n        /* \"#utility.yul\":2247:2249   */\n      0x20\n        /* \"#utility.yul\":2273:2288   */\n      swap4\n      dup5\n      add\n      swap4\n        /* \"#utility.yul\":2238:2250   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":2149:2150   */\n      0x01\n        /* \"#utility.yul\":2142:2151   */\n      add\n        /* \"#utility.yul\":2113:2298   */\n      jump(tag_380)\n    tag_382:\n      pop\n        /* \"#utility.yul\":2315:2318   */\n      swap1\n      swap9\n        /* \"#utility.yul\":1121:2324   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2511:2638   */\n    tag_77:\n        /* \"#utility.yul\":2572:2582   */\n      0x4e487b71\n        /* \"#utility.yul\":2567:2570   */\n      0xe0\n        /* \"#utility.yul\":2563:2583   */\n      shl\n        /* \"#utility.yul\":2560:2561   */\n      0x00\n        /* \"#utility.yul\":2553:2584   */\n      mstore\n        /* \"#utility.yul\":2603:2607   */\n      0x41\n        /* \"#utility.yul\":2600:2601   */\n      0x04\n        /* \"#utility.yul\":2593:2608   */\n      mstore\n        /* \"#utility.yul\":2627:2631   */\n      0x24\n        /* \"#utility.yul\":2624:2625   */\n      0x00\n        /* \"#utility.yul\":2617:2632   */\n      revert\n        /* \"#utility.yul\":2643:4074   */\n    tag_33:\n        /* \"#utility.yul\":2748:2754   */\n      0x00\n        /* \"#utility.yul\":2756:2762   */\n      dup1\n        /* \"#utility.yul\":2764:2770   */\n      0x00\n        /* \"#utility.yul\":2772:2778   */\n      dup1\n        /* \"#utility.yul\":2780:2786   */\n      0x00\n        /* \"#utility.yul\":2833:2836   */\n      0xa0\n        /* \"#utility.yul\":2821:2830   */\n      dup7\n        /* \"#utility.yul\":2812:2819   */\n      dup9\n        /* \"#utility.yul\":2808:2831   */\n      sub\n        /* \"#utility.yul\":2804:2837   */\n      slt\n        /* \"#utility.yul\":2801:2854   */\n      iszero\n      tag_386\n      jumpi\n        /* \"#utility.yul\":2850:2851   */\n      0x00\n        /* \"#utility.yul\":2847:2848   */\n      dup1\n        /* \"#utility.yul\":2840:2852   */\n      revert\n        /* \"#utility.yul\":2801:2854   */\n    tag_386:\n        /* \"#utility.yul\":2890:2899   */\n      dup6\n        /* \"#utility.yul\":2877:2900   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":2915:2921   */\n      dup2\n        /* \"#utility.yul\":2912:2942   */\n      gt\n        /* \"#utility.yul\":2909:2959   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":2955:2956   */\n      0x00\n        /* \"#utility.yul\":2952:2953   */\n      dup1\n        /* \"#utility.yul\":2945:2957   */\n      revert\n        /* \"#utility.yul\":2909:2959   */\n    tag_387:\n        /* \"#utility.yul\":2978:3000   */\n      dup7\n      add\n        /* \"#utility.yul\":3031:3035   */\n      0x1f\n        /* \"#utility.yul\":3023:3036   */\n      dup2\n      add\n        /* \"#utility.yul\":3019:3046   */\n      dup9\n      sgt\n        /* \"#utility.yul\":3009:3064   */\n      tag_388\n      jumpi\n        /* \"#utility.yul\":3060:3061   */\n      0x00\n        /* \"#utility.yul\":3057:3058   */\n      dup1\n        /* \"#utility.yul\":3050:3062   */\n      revert\n        /* \"#utility.yul\":3009:3064   */\n    tag_388:\n        /* \"#utility.yul\":3100:3102   */\n      dup1\n        /* \"#utility.yul\":3087:3103   */\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3118:3124   */\n      dup2\n        /* \"#utility.yul\":3115:3145   */\n      gt\n        /* \"#utility.yul\":3112:3168   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":3148:3166   */\n      tag_390\n      tag_77\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":3197:3199   */\n      0x40\n        /* \"#utility.yul\":3191:3200   */\n      mload\n        /* \"#utility.yul\":3289:3291   */\n      0x1f\n        /* \"#utility.yul\":3251:3268   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3247:3278   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3280:3282   */\n      0x3f\n        /* \"#utility.yul\":3243:3283   */\n      add\n        /* \"#utility.yul\":3239:3293   */\n      and\n        /* \"#utility.yul\":3227:3294   */\n      dup2\n      add\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":3309:3343   */\n      dup2\n      gt\n        /* \"#utility.yul\":3345:3367   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":3306:3368   */\n      or\n        /* \"#utility.yul\":3303:3391   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":3371:3389   */\n      tag_392\n      tag_77\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":3407:3409   */\n      0x40\n        /* \"#utility.yul\":3400:3422   */\n      mstore\n        /* \"#utility.yul\":3431:3453   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":3472:3487   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":3489:3493   */\n      0x20\n        /* \"#utility.yul\":3468:3494   */\n      add\n        /* \"#utility.yul\":3465:3504   */\n      dup11\n      lt\n        /* \"#utility.yul\":3462:3521   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":3517:3518   */\n      0x00\n        /* \"#utility.yul\":3514:3515   */\n      dup1\n        /* \"#utility.yul\":3507:3519   */\n      revert\n        /* \"#utility.yul\":3462:3521   */\n    tag_393:\n        /* \"#utility.yul\":3577:3583   */\n      dup2\n        /* \"#utility.yul\":3570:3574   */\n      0x20\n        /* \"#utility.yul\":3566:3568   */\n      dup5\n        /* \"#utility.yul\":3562:3575   */\n      add\n        /* \"#utility.yul\":3555:3559   */\n      0x20\n        /* \"#utility.yul\":3547:3553   */\n      dup4\n        /* \"#utility.yul\":3543:3560   */\n      add\n        /* \"#utility.yul\":3530:3584   */\n      calldatacopy\n        /* \"#utility.yul\":3632:3633   */\n      0x00\n        /* \"#utility.yul\":3625:3629   */\n      0x20\n        /* \"#utility.yul\":3604:3623   */\n      swap3\n      dup3\n      add\n        /* \"#utility.yul\":3600:3630   */\n      dup4\n      add\n        /* \"#utility.yul\":3593:3634   */\n      mstore\n        /* \"#utility.yul\":3604:3623   */\n      swap10\n        /* \"#utility.yul\":3713:3733   */\n      swap1\n      dup9\n      add\n        /* \"#utility.yul\":3700:3734   */\n      calldataload\n      swap9\n      pop\n        /* \"#utility.yul\":3831:3833   */\n      0x40\n        /* \"#utility.yul\":3816:3834   */\n      dup9\n      add\n        /* \"#utility.yul\":3803:3835   */\n      calldataload\n      swap8\n        /* \"#utility.yul\":3934:3936   */\n      0x60\n        /* \"#utility.yul\":3919:3937   */\n      dup2\n      add\n        /* \"#utility.yul\":3906:3938   */\n      calldataload\n      swap8\n      pop\n        /* \"#utility.yul\":4037:4040   */\n      0x80\n        /* \"#utility.yul\":4022:4041   */\n      add\n        /* \"#utility.yul\":4009:4042   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":3608:3614   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2643:4074   */\n      jump\t// out\n        /* \"#utility.yul\":4079:4425   */\n    tag_37:\n        /* \"#utility.yul\":4147:4153   */\n      0x00\n        /* \"#utility.yul\":4155:4161   */\n      dup1\n        /* \"#utility.yul\":4208:4210   */\n      0x40\n        /* \"#utility.yul\":4196:4205   */\n      dup4\n        /* \"#utility.yul\":4187:4194   */\n      dup6\n        /* \"#utility.yul\":4183:4206   */\n      sub\n        /* \"#utility.yul\":4179:4211   */\n      slt\n        /* \"#utility.yul\":4176:4228   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":4224:4225   */\n      0x00\n        /* \"#utility.yul\":4221:4222   */\n      dup1\n        /* \"#utility.yul\":4214:4226   */\n      revert\n        /* \"#utility.yul\":4176:4228   */\n    tag_395:\n      pop\n      pop\n        /* \"#utility.yul\":4269:4292   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":4389:4391   */\n      0x20\n        /* \"#utility.yul\":4374:4392   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":4361:4393   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4079:4425   */\n      jump\t// out\n        /* \"#utility.yul\":4430:4895   */\n    tag_44:\n        /* \"#utility.yul\":4687:4689   */\n      0x40\n        /* \"#utility.yul\":4676:4685   */\n      dup2\n        /* \"#utility.yul\":4669:4690   */\n      mstore\n        /* \"#utility.yul\":4650:4654   */\n      0x00\n        /* \"#utility.yul\":4713:4769   */\n      tag_397\n        /* \"#utility.yul\":4765:4767   */\n      0x40\n        /* \"#utility.yul\":4754:4763   */\n      dup4\n        /* \"#utility.yul\":4750:4768   */\n      add\n        /* \"#utility.yul\":4742:4748   */\n      dup6\n        /* \"#utility.yul\":4713:4769   */\n      tag_358\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":4817:4826   */\n      dup3\n        /* \"#utility.yul\":4809:4815   */\n      dup2\n        /* \"#utility.yul\":4805:4827   */\n      sub\n        /* \"#utility.yul\":4800:4802   */\n      0x20\n        /* \"#utility.yul\":4789:4798   */\n      dup5\n        /* \"#utility.yul\":4785:4803   */\n      add\n        /* \"#utility.yul\":4778:4828   */\n      mstore\n        /* \"#utility.yul\":4845:4889   */\n      tag_398\n        /* \"#utility.yul\":4882:4888   */\n      dup2\n        /* \"#utility.yul\":4874:4880   */\n      dup6\n        /* \"#utility.yul\":4845:4889   */\n      tag_359\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":4837:4889   */\n      swap6\n        /* \"#utility.yul\":4430:4895   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5332:5732   */\n    tag_360:\n        /* \"#utility.yul\":5374:5377   */\n      0x00\n        /* \"#utility.yul\":5412:5417   */\n      dup2\n        /* \"#utility.yul\":5406:5418   */\n      mload\n        /* \"#utility.yul\":5439:5445   */\n      dup1\n        /* \"#utility.yul\":5434:5437   */\n      dup5\n        /* \"#utility.yul\":5427:5446   */\n      mstore\n        /* \"#utility.yul\":5464:5465   */\n      0x00\n        /* \"#utility.yul\":5474:5613   */\n    tag_401:\n        /* \"#utility.yul\":5488:5494   */\n      dup2\n        /* \"#utility.yul\":5485:5486   */\n      dup2\n        /* \"#utility.yul\":5482:5495   */\n      lt\n        /* \"#utility.yul\":5474:5613   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":5596:5600   */\n      0x20\n        /* \"#utility.yul\":5581:5594   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":5577:5601   */\n      dup2\n      add\n        /* \"#utility.yul\":5571:5602   */\n      mload\n        /* \"#utility.yul\":5551:5562   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":5547:5569   */\n      dup3\n      add\n        /* \"#utility.yul\":5540:5603   */\n      mstore\n        /* \"#utility.yul\":5503:5515   */\n      add\n        /* \"#utility.yul\":5474:5613   */\n      jump(tag_401)\n    tag_403:\n        /* \"#utility.yul\":5478:5481   */\n      pop\n        /* \"#utility.yul\":5658:5659   */\n      0x00\n        /* \"#utility.yul\":5651:5655   */\n      0x20\n        /* \"#utility.yul\":5642:5648   */\n      dup3\n        /* \"#utility.yul\":5637:5640   */\n      dup7\n        /* \"#utility.yul\":5633:5649   */\n      add\n        /* \"#utility.yul\":5629:5656   */\n      add\n        /* \"#utility.yul\":5622:5660   */\n      mstore\n        /* \"#utility.yul\":5721:5725   */\n      0x20\n        /* \"#utility.yul\":5714:5716   */\n      0x1f\n        /* \"#utility.yul\":5710:5717   */\n      not\n        /* \"#utility.yul\":5705:5707   */\n      0x1f\n        /* \"#utility.yul\":5697:5703   */\n      dup4\n        /* \"#utility.yul\":5693:5708   */\n      add\n        /* \"#utility.yul\":5689:5718   */\n      and\n        /* \"#utility.yul\":5684:5687   */\n      dup6\n        /* \"#utility.yul\":5680:5719   */\n      add\n        /* \"#utility.yul\":5676:5726   */\n      add\n        /* \"#utility.yul\":5669:5726   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5332:5732   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5737:6424   */\n    tag_56:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6048:6080   */\n      dup9\n      and\n        /* \"#utility.yul\":6030:6081   */\n      dup2\n      mstore\n        /* \"#utility.yul\":6117:6120   */\n      0xe0\n        /* \"#utility.yul\":6112:6114   */\n      0x20\n        /* \"#utility.yul\":6097:6115   */\n      dup3\n      add\n        /* \"#utility.yul\":6090:6121   */\n      dup2\n      swap1\n      mstore\n      0x00\n      swap1\n        /* \"#utility.yul\":6138:6184   */\n      tag_405\n      swap1\n        /* \"#utility.yul\":6164:6183   */\n      dup4\n      add\n        /* \"#utility.yul\":6156:6162   */\n      dup10\n        /* \"#utility.yul\":6138:6184   */\n      tag_360\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":6215:6217   */\n      0x40\n        /* \"#utility.yul\":6200:6218   */\n      dup4\n      add\n        /* \"#utility.yul\":6193:6227   */\n      swap8\n      swap1\n      swap8\n      mstore\n      pop\n        /* \"#utility.yul\":6258:6260   */\n      0x60\n        /* \"#utility.yul\":6243:6261   */\n      dup2\n      add\n        /* \"#utility.yul\":6236:6270   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":6301:6304   */\n      0x80\n        /* \"#utility.yul\":6286:6305   */\n      dup5\n      add\n        /* \"#utility.yul\":6279:6314   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":6358:6372   */\n      iszero\n        /* \"#utility.yul\":6351:6373   */\n      iszero\n        /* \"#utility.yul\":6345:6348   */\n      0xa0\n        /* \"#utility.yul\":6330:6349   */\n      dup4\n      add\n        /* \"#utility.yul\":6323:6374   */\n      mstore\n        /* \"#utility.yul\":6405:6408   */\n      0xc0\n        /* \"#utility.yul\":6390:6409   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":6383:6418   */\n      mstore\n        /* \"#utility.yul\":6130:6184   */\n      swap3\n        /* \"#utility.yul\":5737:6424   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6429:6769   */\n    tag_74:\n        /* \"#utility.yul\":6631:6633   */\n      0x20\n        /* \"#utility.yul\":6613:6634   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6670:6672   */\n      0x10\n        /* \"#utility.yul\":6650:6668   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6643:6673   */\n      mstore\n      shl(0x82, 0x125b9d985b1a5908185cdcd95d081251)\n        /* \"#utility.yul\":6704:6706   */\n      0x40\n        /* \"#utility.yul\":6689:6707   */\n      dup3\n      add\n        /* \"#utility.yul\":6682:6728   */\n      mstore\n        /* \"#utility.yul\":6760:6762   */\n      0x60\n        /* \"#utility.yul\":6745:6763   */\n      add\n      swap1\n        /* \"#utility.yul\":6429:6769   */\n      jump\t// out\n        /* \"#utility.yul\":6774:6901   */\n    tag_93:\n        /* \"#utility.yul\":6835:6845   */\n      0x4e487b71\n        /* \"#utility.yul\":6830:6833   */\n      0xe0\n        /* \"#utility.yul\":6826:6846   */\n      shl\n        /* \"#utility.yul\":6823:6824   */\n      0x00\n        /* \"#utility.yul\":6816:6847   */\n      mstore\n        /* \"#utility.yul\":6866:6870   */\n      0x32\n        /* \"#utility.yul\":6863:6864   */\n      0x04\n        /* \"#utility.yul\":6856:6871   */\n      mstore\n        /* \"#utility.yul\":6890:6894   */\n      0x24\n        /* \"#utility.yul\":6887:6888   */\n      0x00\n        /* \"#utility.yul\":6880:6895   */\n      revert\n        /* \"#utility.yul\":6906:7242   */\n    tag_118:\n        /* \"#utility.yul\":7108:7110   */\n      0x20\n        /* \"#utility.yul\":7090:7111   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7147:7149   */\n      0x0c\n        /* \"#utility.yul\":7127:7145   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7120:7150   */\n      mstore\n      shl(0xa2, 0x155b985d5d1a1bdc9a5e9959)\n        /* \"#utility.yul\":7181:7183   */\n      0x40\n        /* \"#utility.yul\":7166:7184   */\n      dup3\n      add\n        /* \"#utility.yul\":7159:7201   */\n      mstore\n        /* \"#utility.yul\":7233:7235   */\n      0x60\n        /* \"#utility.yul\":7218:7236   */\n      add\n      swap1\n        /* \"#utility.yul\":6906:7242   */\n      jump\t// out\n        /* \"#utility.yul\":7247:7593   */\n    tag_121:\n        /* \"#utility.yul\":7449:7451   */\n      0x20\n        /* \"#utility.yul\":7431:7452   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7488:7490   */\n      0x16\n        /* \"#utility.yul\":7468:7486   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7461:7491   */\n      mstore\n      shl(0x52, 0x109a59191a5b99c8185b1c9958591e4818db1bdcd959)\n        /* \"#utility.yul\":7522:7524   */\n      0x40\n        /* \"#utility.yul\":7507:7525   */\n      dup3\n      add\n        /* \"#utility.yul\":7500:7552   */\n      mstore\n        /* \"#utility.yul\":7584:7586   */\n      0x60\n        /* \"#utility.yul\":7569:7587   */\n      add\n      swap1\n        /* \"#utility.yul\":7247:7593   */\n      jump\t// out\n        /* \"#utility.yul\":9274:9401   */\n    tag_361:\n        /* \"#utility.yul\":9335:9345   */\n      0x4e487b71\n        /* \"#utility.yul\":9330:9333   */\n      0xe0\n        /* \"#utility.yul\":9326:9346   */\n      shl\n        /* \"#utility.yul\":9323:9324   */\n      0x00\n        /* \"#utility.yul\":9316:9347   */\n      mstore\n        /* \"#utility.yul\":9366:9370   */\n      0x11\n        /* \"#utility.yul\":9363:9364   */\n      0x04\n        /* \"#utility.yul\":9356:9371   */\n      mstore\n        /* \"#utility.yul\":9390:9394   */\n      0x24\n        /* \"#utility.yul\":9387:9388   */\n      0x00\n        /* \"#utility.yul\":9380:9395   */\n      revert\n        /* \"#utility.yul\":9406:9541   */\n    tag_145:\n        /* \"#utility.yul\":9445:9448   */\n      0x00\n        /* \"#utility.yul\":9466:9483   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":9463:9506   */\n      tag_418\n      jumpi\n        /* \"#utility.yul\":9486:9504   */\n      tag_418\n      tag_361\n      jump\t// in\n    tag_418:\n      pop\n        /* \"#utility.yul\":9533:9534   */\n      0x01\n        /* \"#utility.yul\":9522:9535   */\n      add\n      swap1\n        /* \"#utility.yul\":9406:9541   */\n      jump\t// out\n        /* \"#utility.yul\":9546:9926   */\n    tag_201:\n        /* \"#utility.yul\":9625:9626   */\n      0x01\n        /* \"#utility.yul\":9621:9633   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":9668:9680   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":9689:9750   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":9743:9747   */\n      0x7f\n        /* \"#utility.yul\":9735:9741   */\n      dup3\n        /* \"#utility.yul\":9731:9748   */\n      and\n        /* \"#utility.yul\":9721:9748   */\n      swap2\n      pop\n        /* \"#utility.yul\":9689:9750   */\n    tag_420:\n        /* \"#utility.yul\":9796:9798   */\n      0x20\n        /* \"#utility.yul\":9788:9794   */\n      dup3\n        /* \"#utility.yul\":9785:9799   */\n      lt\n        /* \"#utility.yul\":9765:9783   */\n      dup2\n        /* \"#utility.yul\":9762:9800   */\n      sub\n        /* \"#utility.yul\":9759:9920   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":9842:9852   */\n      0x4e487b71\n        /* \"#utility.yul\":9837:9840   */\n      0xe0\n        /* \"#utility.yul\":9833:9853   */\n      shl\n        /* \"#utility.yul\":9830:9831   */\n      0x00\n        /* \"#utility.yul\":9823:9854   */\n      mstore\n        /* \"#utility.yul\":9877:9881   */\n      0x22\n        /* \"#utility.yul\":9874:9875   */\n      0x04\n        /* \"#utility.yul\":9867:9882   */\n      mstore\n        /* \"#utility.yul\":9905:9909   */\n      0x24\n        /* \"#utility.yul\":9902:9903   */\n      0x00\n        /* \"#utility.yul\":9895:9910   */\n      revert\n        /* \"#utility.yul\":9759:9920   */\n    tag_421:\n      pop\n        /* \"#utility.yul\":9546:9926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10057:10575   */\n    tag_363:\n        /* \"#utility.yul\":10159:10161   */\n      0x1f\n        /* \"#utility.yul\":10154:10157   */\n      dup3\n        /* \"#utility.yul\":10151:10162   */\n      gt\n        /* \"#utility.yul\":10148:10569   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":10195:10200   */\n      dup1\n        /* \"#utility.yul\":10192:10193   */\n      0x00\n        /* \"#utility.yul\":10185:10201   */\n      mstore\n        /* \"#utility.yul\":10239:10243   */\n      0x20\n        /* \"#utility.yul\":10236:10237   */\n      0x00\n        /* \"#utility.yul\":10226:10244   */\n      keccak256\n        /* \"#utility.yul\":10309:10311   */\n      0x1f\n        /* \"#utility.yul\":10297:10307   */\n      dup5\n        /* \"#utility.yul\":10293:10312   */\n      add\n        /* \"#utility.yul\":10290:10291   */\n      0x05\n        /* \"#utility.yul\":10286:10313   */\n      shr\n        /* \"#utility.yul\":10280:10284   */\n      dup2\n        /* \"#utility.yul\":10276:10314   */\n      add\n        /* \"#utility.yul\":10345:10349   */\n      0x20\n        /* \"#utility.yul\":10333:10343   */\n      dup6\n        /* \"#utility.yul\":10330:10350   */\n      lt\n        /* \"#utility.yul\":10327:10374   */\n      iszero\n      tag_425\n      jumpi\n      pop\n        /* \"#utility.yul\":10368:10372   */\n      dup1\n        /* \"#utility.yul\":10327:10374   */\n    tag_425:\n        /* \"#utility.yul\":10423:10425   */\n      0x1f\n        /* \"#utility.yul\":10418:10421   */\n      dup5\n        /* \"#utility.yul\":10414:10426   */\n      add\n        /* \"#utility.yul\":10411:10412   */\n      0x05\n        /* \"#utility.yul\":10407:10427   */\n      shr\n        /* \"#utility.yul\":10401:10405   */\n      dup3\n        /* \"#utility.yul\":10397:10428   */\n      add\n        /* \"#utility.yul\":10387:10428   */\n      swap2\n      pop\n        /* \"#utility.yul\":10478:10559   */\n    tag_426:\n        /* \"#utility.yul\":10496:10498   */\n      dup2\n        /* \"#utility.yul\":10489:10494   */\n      dup2\n        /* \"#utility.yul\":10486:10499   */\n      lt\n        /* \"#utility.yul\":10478:10559   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":10555:10556   */\n      0x00\n        /* \"#utility.yul\":10541:10557   */\n      dup2\n      sstore\n        /* \"#utility.yul\":10522:10523   */\n      0x01\n        /* \"#utility.yul\":10511:10524   */\n      add\n        /* \"#utility.yul\":10478:10559   */\n      jump(tag_426)\n    tag_428:\n        /* \"#utility.yul\":10482:10485   */\n      pop\n      pop\n        /* \"#utility.yul\":10057:10575   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10751:12050   */\n    tag_147:\n        /* \"#utility.yul\":10877:10880   */\n      dup2\n        /* \"#utility.yul\":10871:10881   */\n      mload\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"#utility.yul\":10896:10902   */\n      dup2\n        /* \"#utility.yul\":10893:10923   */\n      gt\n        /* \"#utility.yul\":10890:10946   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":10926:10944   */\n      tag_432\n      tag_77\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":10955:11052   */\n      tag_433\n        /* \"#utility.yul\":11045:11051   */\n      dup2\n        /* \"#utility.yul\":11005:11043   */\n      tag_434\n        /* \"#utility.yul\":11037:11041   */\n      dup5\n        /* \"#utility.yul\":11031:11042   */\n      sload\n        /* \"#utility.yul\":11005:11043   */\n      tag_201\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10999:11003   */\n      dup5\n        /* \"#utility.yul\":10955:11052   */\n      tag_363\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":11101:11105   */\n      0x20\n        /* \"#utility.yul\":11132:11134   */\n      0x1f\n        /* \"#utility.yul\":11121:11135   */\n      dup3\n      gt\n        /* \"#utility.yul\":11149:11150   */\n      0x01\n        /* \"#utility.yul\":11144:11793   */\n      dup2\n      eq\n      tag_436\n      jumpi\n        /* \"#utility.yul\":11837:11838   */\n      0x00\n        /* \"#utility.yul\":11854:11860   */\n      dup4\n        /* \"#utility.yul\":11851:11940   */\n      iszero\n      tag_437\n      jumpi\n      pop\n        /* \"#utility.yul\":11906:11925   */\n      dup5\n      dup3\n      add\n        /* \"#utility.yul\":11900:11926   */\n      mload\n        /* \"#utility.yul\":11851:11940   */\n    tag_437:\n      not(0x00)\n        /* \"#utility.yul\":10708:10709   */\n      0x03\n        /* \"#utility.yul\":10704:10715   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":10700:10724   */\n      shr\n        /* \"#utility.yul\":10696:10725   */\n      not\n        /* \"#utility.yul\":10686:10726   */\n      and\n        /* \"#utility.yul\":10732:10733   */\n      0x01\n        /* \"#utility.yul\":10728:10739   */\n      dup5\n      swap1\n      shl\n        /* \"#utility.yul\":10683:10740   */\n      or\n        /* \"#utility.yul\":11953:12034   */\n      dup5\n      sstore\n        /* \"#utility.yul\":11114:12044   */\n      jump(tag_428)\n        /* \"#utility.yul\":11144:11793   */\n    tag_436:\n        /* \"#utility.yul\":10004:10005   */\n      0x00\n        /* \"#utility.yul\":9997:10011   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":10041:10045   */\n      0x20\n        /* \"#utility.yul\":10028:10046   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":11180:11200   */\n      dup6\n      and\n      swap2\n        /* \"#utility.yul\":11298:11520   */\n    tag_440:\n        /* \"#utility.yul\":11312:11319   */\n      dup3\n        /* \"#utility.yul\":11309:11310   */\n      dup2\n        /* \"#utility.yul\":11306:11320   */\n      lt\n        /* \"#utility.yul\":11298:11520   */\n      iszero\n      tag_442\n      jumpi\n        /* \"#utility.yul\":11394:11413   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":11388:11414   */\n      mload\n        /* \"#utility.yul\":11373:11415   */\n      dup3\n      sstore\n        /* \"#utility.yul\":11501:11505   */\n      0x20\n        /* \"#utility.yul\":11486:11506   */\n      swap5\n      dup6\n      add\n      swap5\n        /* \"#utility.yul\":11454:11455   */\n      0x01\n        /* \"#utility.yul\":11442:11456   */\n      swap1\n      swap3\n      add\n      swap2\n        /* \"#utility.yul\":11328:11340   */\n      add\n        /* \"#utility.yul\":11298:11520   */\n      jump(tag_440)\n    tag_442:\n        /* \"#utility.yul\":11302:11305   */\n      pop\n        /* \"#utility.yul\":11548:11554   */\n      dup5\n        /* \"#utility.yul\":11539:11546   */\n      dup3\n        /* \"#utility.yul\":11536:11555   */\n      lt\n        /* \"#utility.yul\":11533:11734   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":11609:11628   */\n      dup7\n      dup5\n      add\n        /* \"#utility.yul\":11603:11629   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":11692:11693   */\n      0x03\n        /* \"#utility.yul\":11688:11702   */\n      dup8\n      swap1\n      shl\n        /* \"#utility.yul\":11704:11707   */\n      0xf8\n        /* \"#utility.yul\":11684:11708   */\n      and\n        /* \"#utility.yul\":11680:11717   */\n      shr\n        /* \"#utility.yul\":11676:11718   */\n      not\n        /* \"#utility.yul\":11661:11719   */\n      and\n        /* \"#utility.yul\":11646:11720   */\n      dup2\n      sstore\n        /* \"#utility.yul\":11533:11734   */\n    tag_443:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11780:11781   */\n      0x01\n        /* \"#utility.yul\":11764:11778   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":11760:11782   */\n      add\n        /* \"#utility.yul\":11747:11783   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":10751:12050   */\n      jump\t// out\n        /* \"#utility.yul\":12055:12180   */\n    tag_149:\n        /* \"#utility.yul\":12120:12129   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":12141:12151   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":12138:12174   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":12154:12172   */\n      tag_291\n      tag_361\n      jump\t// in\n        /* \"#utility.yul\":12185:12547   */\n    tag_152:\n        /* \"#utility.yul\":12390:12392   */\n      0x60\n        /* \"#utility.yul\":12379:12388   */\n      dup2\n        /* \"#utility.yul\":12372:12393   */\n      mstore\n        /* \"#utility.yul\":12353:12357   */\n      0x00\n        /* \"#utility.yul\":12410:12455   */\n      tag_448\n        /* \"#utility.yul\":12451:12453   */\n      0x60\n        /* \"#utility.yul\":12440:12449   */\n      dup4\n        /* \"#utility.yul\":12436:12454   */\n      add\n        /* \"#utility.yul\":12428:12434   */\n      dup7\n        /* \"#utility.yul\":12410:12455   */\n      tag_360\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":12486:12488   */\n      0x20\n        /* \"#utility.yul\":12471:12489   */\n      dup4\n      add\n        /* \"#utility.yul\":12464:12498   */\n      swap5\n      swap1\n      swap5\n      mstore\n      pop\n        /* \"#utility.yul\":12529:12531   */\n      0x40\n        /* \"#utility.yul\":12514:12532   */\n      add\n        /* \"#utility.yul\":12507:12541   */\n      mstore\n        /* \"#utility.yul\":12402:12455   */\n      swap2\n        /* \"#utility.yul\":12185:12547   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14557:14774   */\n    tag_293:\n        /* \"#utility.yul\":14597:14598   */\n      0x00\n        /* \"#utility.yul\":14623:14624   */\n      dup3\n        /* \"#utility.yul\":14613:14745   */\n      tag_456\n      jumpi\n        /* \"#utility.yul\":14667:14677   */\n      0x4e487b71\n        /* \"#utility.yul\":14662:14665   */\n      0xe0\n        /* \"#utility.yul\":14658:14678   */\n      shl\n        /* \"#utility.yul\":14655:14656   */\n      0x00\n        /* \"#utility.yul\":14648:14679   */\n      mstore\n        /* \"#utility.yul\":14702:14706   */\n      0x12\n        /* \"#utility.yul\":14699:14700   */\n      0x04\n        /* \"#utility.yul\":14692:14707   */\n      mstore\n        /* \"#utility.yul\":14730:14734   */\n      0x24\n        /* \"#utility.yul\":14727:14728   */\n      0x00\n        /* \"#utility.yul\":14720:14735   */\n      revert\n        /* \"#utility.yul\":14613:14745   */\n    tag_456:\n      pop\n        /* \"#utility.yul\":14759:14768   */\n      div\n      swap1\n        /* \"#utility.yul\":14557:14774   */\n      jump\t// out\n        /* \"#utility.yul\":14779:14947   */\n    tag_323:\n        /* \"#utility.yul\":14852:14861   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":14883:14892   */\n      dup2\n      iszero\n        /* \"#utility.yul\":14900:14915   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":14894:14916   */\n      dup5\n      eq\n        /* \"#utility.yul\":14880:14917   */\n      or\n        /* \"#utility.yul\":14870:14941   */\n      tag_291\n      jumpi\n        /* \"#utility.yul\":14921:14939   */\n      tag_291\n      tag_361\n      jump\t// in\n        /* \"#utility.yul\":14952:15080   */\n    tag_328:\n        /* \"#utility.yul\":15019:15028   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":15040:15051   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":15037:15074   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":15054:15072   */\n      tag_291\n      tag_361\n      jump\t// in\n\n    auxdata: 0xa2646970667358221220be7b34ff116e59147e9f73fa4041f7918791d42501b74360e5a0f1e0be57b97d64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SSTORE PUSH2 0x1EC5 DUP1 PUSH2 0x24 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x686735C5 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x686735C5 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xA3D5F1E5 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xB18CC358 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xB468E0B0 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xCF35BDD0 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xEAFE7A74 EQ PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x392CC45 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x93755AD EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x47582610 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x503E0578 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x57C90DE5 EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x191F JUMP JUMPDEST PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFA PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x191F JUMP JUMPDEST PUSH2 0x505 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFA PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A47 JUMP JUMPDEST PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0xFA PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x8D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0x191F JUMP JUMPDEST PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP3 SWAP2 SWAP1 PUSH2 0x1B3C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xD1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x191F JUMP JUMPDEST PUSH2 0xC9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BB0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFA PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x191F JUMP JUMPDEST PUSH2 0xDC5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0x191F JUMP JUMPDEST PUSH2 0xE76 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x0 DUP6 GT DUP1 ISZERO PUSH2 0x269 JUMPI POP PUSH1 0x3 SLOAD DUP6 GT ISZERO JUMPDEST PUSH2 0x28E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2B6 JUMPI PUSH2 0x2B6 PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2DF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP6 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2FA JUMPI PUSH2 0x2FA PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x323 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x33E JUMPI PUSH2 0x33E PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x367 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x382 JUMPI PUSH2 0x382 PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3AB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4FB JUMPI DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3CB JUMPI PUSH2 0x3CB PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x3FC JUMPI PUSH2 0x3FC PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x42E JUMPI PUSH2 0x42E PUSH2 0x1C2A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x452 JUMPI PUSH2 0x452 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x470 JUMPI PUSH2 0x470 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD SLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x494 JUMPI PUSH2 0x494 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4B2 JUMPI PUSH2 0x4B2 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4E3 JUMPI PUSH2 0x4E3 PUSH2 0x1C2A JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x3B1 JUMP JUMPDEST POP POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH2 0x50D PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x544 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285 SWAP1 PUSH2 0x1C66 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x59A JUMPI PUSH2 0x595 DUP3 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE DUP4 SWAP2 PUSH32 0x4D7A5E450395FB8FB6B67C4751F80F057CD5A74550929306EFF2CAC7F0ECC188 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP PUSH2 0x5E1 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x62A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A59081CDA185C994818DBDD5B9D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x285 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206D696E696D756D2070726963652070657220736861726500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x285 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x6CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206D696E696D756D20746F74616C2070726963650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x285 JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD GT PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E616D652063616E6E6F7420626520656D707479 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x285 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x722 DUP4 PUSH2 0x1CAC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR DUP2 SSTORE SWAP1 DUP2 ADD PUSH2 0x758 DUP8 DUP3 PUSH2 0x1D4D JUMP JUMPDEST POP PUSH1 0x2 DUP2 ADD DUP6 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP6 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x784 DUP3 TIMESTAMP PUSH2 0x1E0B JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x7 DUP2 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 KECCAK256 SWAP1 SWAP3 ADD DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP4 DUP2 MSTORE DUP1 DUP7 ADD DUP13 DUP2 MSTORE DUP2 DUP4 ADD DUP7 DUP2 MSTORE DUP6 DUP10 MSTORE PUSH1 0x8 DUP11 ADD SWAP1 SWAP8 MSTORE SWAP7 DUP3 SWAP1 KECCAK256 SWAP1 MLOAD DUP2 SLOAD SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE SWAP5 MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x3 SLOAD SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x1B72BEABFA8420E9B47A1C3D6764A97E2044C51B3368B66B161A5FC8CEEBCCF SWAP1 PUSH2 0x84E SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP10 SWAP1 PUSH2 0x1E1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE CALLER SWAP2 SWAP1 PUSH32 0x25AF9E0275ABBB4DE910D2062F5DCCA6D4C47F1313066083DD9D7077608A7A54 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0xDBAD7356874FB84060A1E809F3B9F73D977DA5F6E62D52682C065D51D15435C6 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH2 0x8C2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8DA PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x109A59191A5B99C818DB1BDCD959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x285 JUMP JUMPDEST DUP1 PUSH1 0x6 ADD SLOAD TIMESTAMP LT PUSH2 0x978 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x109A59191A5B99C81C195C9A5BD908195B991959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x285 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x9BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A59081CDA185C9948185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x285 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE CALLER DUP2 MSTORE SWAP2 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 DUP2 ADD PUSH2 0x9EF CALLVALUE DUP7 PUSH2 0x1548 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE SWAP5 DUP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x4 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP1 DUP3 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLER DUP4 PUSH32 0x51DB8E23B3F4479B162FD48823B8402895442B8F6CFD94F66239391881EC7B6F DUP5 PUSH2 0xA8B CALLVALUE DUP3 PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xAAE PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP4 GT DUP1 ISZERO PUSH2 0xAC7 JUMPI POP PUSH1 0x3 SLOAD DUP4 GT ISZERO JUMPDEST PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 DUP2 ADD SLOAD DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xB0E JUMPI PUSH2 0xB0E PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB37 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xB52 JUMPI PUSH2 0xB52 PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB7B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC44 JUMPI PUSH1 0x0 DUP4 PUSH1 0x7 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBA0 JUMPI PUSH2 0xBA0 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xBD3 JUMPI PUSH2 0xBD3 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 PUSH1 0x8 ADD PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC30 JUMPI PUSH2 0xC30 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0xB81 JUMP JUMPDEST POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP5 POP SWAP3 POP PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP9 GT DUP1 ISZERO PUSH2 0xCBC JUMPI POP PUSH1 0x3 SLOAD DUP9 GT ISZERO JUMPDEST PUSH2 0xCD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD SWAP7 DUP7 ADD DUP1 SLOAD SWAP7 SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND SWAP7 SWAP1 SWAP6 PUSH1 0xFF SWAP1 SWAP3 AND SWAP2 SWAP1 DUP7 SWAP1 PUSH2 0xD2B SWAP1 PUSH2 0x1CC5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD57 SWAP1 PUSH2 0x1CC5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDA4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD79 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDA4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD87 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP6 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH2 0xDCD PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285 SWAP1 PUSH2 0x1C66 JUMP JUMPDEST DUP1 PUSH1 0x6 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x42696464696E6720706572696F64206F6E676F696E67 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x285 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH2 0xEA3 SWAP1 PUSH2 0x1CC5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xECF SWAP1 PUSH2 0x1CC5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF1C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEF1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF1C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEFF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 POP SWAP2 PUSH1 0xFF AND SWAP1 DUP8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xF9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x285 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xFB9 DUP3 PUSH2 0x155D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 DUP4 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP2 JUMPDEST DUP4 SLOAD DUP2 LT DUP1 ISZERO PUSH2 0xFE1 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST ISZERO PUSH2 0x1080 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFFA JUMPI PUSH2 0xFFA PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD PUSH1 0x3 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x1020 JUMPI POP PUSH2 0x106E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x1034 JUMPI DUP4 PUSH2 0x103A JUMP JUMPDEST DUP2 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH2 0x105D PUSH2 0x1056 DUP4 PUSH1 0x2 ADD SLOAD DUP4 PUSH2 0x1763 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x176F JUMP JUMPDEST SWAP5 POP PUSH2 0x1069 DUP5 DUP3 PUSH2 0x177B JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST DUP1 PUSH2 0x1078 DUP2 PUSH2 0x1CAC JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFD1 JUMP JUMPDEST POP PUSH1 0x4 DUP5 ADD SLOAD DUP3 LT DUP1 ISZERO SWAP1 PUSH2 0x14FB JUMPI PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP7 ADD SLOAD DUP2 LT ISZERO PUSH2 0x10F6 JUMPI PUSH1 0x0 DUP7 PUSH1 0x7 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10BF JUMPI PUSH2 0x10BF PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x8 DUP10 ADD SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 SWAP1 SWAP2 ADD SWAP1 POP PUSH2 0x109C JUMP JUMPDEST POP PUSH2 0x1105 PUSH1 0x7 DUP7 ADD PUSH1 0x0 PUSH2 0x18ED JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 SLOAD DUP2 LT ISZERO PUSH2 0x14F5 JUMPI PUSH1 0x3 DUP7 ADD SLOAD ISZERO PUSH2 0x14F5 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x112F JUMPI PUSH2 0x112F PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD PUSH1 0x3 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x1155 JUMPI POP PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x0 DUP8 PUSH1 0x3 ADD SLOAD DUP3 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x1171 JUMPI DUP8 PUSH1 0x3 ADD SLOAD PUSH2 0x1177 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1192 DUP4 PUSH1 0x2 ADD SLOAD DUP4 PUSH2 0x1763 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11BB DUP3 PUSH2 0x11B5 DUP7 PUSH1 0x2 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1763 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x177B JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x1466 JUMPI DUP10 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x11FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x3 DUP11 ADD SLOAD PUSH2 0x120C SWAP1 DUP5 PUSH2 0x177B JUMP JUMPDEST PUSH1 0x3 DUP1 DUP13 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 DUP12 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1385 JUMPI DUP10 PUSH1 0x7 ADD DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP DUP11 PUSH1 0x8 ADD PUSH1 0x0 DUP7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x13CE JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 DUP12 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x13AE SWAP1 DUP5 PUSH2 0x176F JUMP JUMPDEST DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 DUP13 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE JUMPDEST DUP4 SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP14 SWAP2 PUSH32 0x46D3C445B404E9DE2C80E1C0489CC92F23DFD5462CE7C6B3A1A54B3F0F70BCFC SWAP2 PUSH2 0x141A SWAP2 DUP9 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP4 SLOAD PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP13 SWAP1 PUSH32 0x25AF9E0275ABBB4DE910D2062F5DCCA6D4C47F1313066083DD9D7077608A7A54 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP1 ISZERO PUSH2 0x14E8 JUMPI DUP4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x14A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP4 SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xA171B6942063C6F2800CE40A780EDCE37BAA2B618571B11EEDD1E69E626E7D76 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1108 JUMP JUMPDEST POP PUSH2 0x1504 JUMP JUMPDEST PUSH2 0x1504 DUP7 PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 ISZERO ISZERO DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE DUP8 SWAP2 PUSH32 0x4D7A5E450395FB8FB6B67C4751F80F057CD5A74550929306EFF2CAC7F0ECC188 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1554 DUP3 DUP5 PUSH2 0x1E43 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x175E JUMPI PUSH1 0x0 PUSH2 0x1583 DUP3 PUSH1 0x1 PUSH2 0x1E0B JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x1755 JUMPI DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x15A1 JUMPI PUSH2 0x15A1 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD SLOAD DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x15C5 JUMPI PUSH2 0x15C5 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x174D JUMPI PUSH1 0x0 DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x15F1 JUMPI PUSH2 0x15F1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x4 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE DUP5 SLOAD SWAP1 SWAP2 POP DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1657 JUMPI PUSH2 0x1657 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD DUP5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1677 JUMPI PUSH2 0x1677 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x4 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x2 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x3 SWAP2 DUP3 ADD SLOAD SWAP2 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 SLOAD DUP2 SWAP1 DUP6 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x16ED JUMPI PUSH2 0x16ED PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x4 SWAP3 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP1 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1586 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x156D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1554 DUP3 DUP5 PUSH2 0x1E65 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1554 DUP3 DUP5 PUSH2 0x1E0B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1554 DUP3 DUP5 PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x175E JUMPI DUP2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x17B2 JUMPI PUSH2 0x17B2 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x4 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0x18E5 JUMPI PUSH1 0x0 PUSH2 0x1828 DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x17E4 JUMPI PUSH2 0x17E4 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD SLOAD DUP5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1808 JUMPI PUSH2 0x1808 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x1763 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x183C JUMPI PUSH2 0x183C PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1881 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1894 JUMPI PUSH2 0x1894 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0xA171B6942063C6F2800CE40A780EDCE37BAA2B618571B11EEDD1E69E626E7D76 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1797 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5E1 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x191B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1907 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1931 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1973 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x194C JUMP JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1973 JUMPI DUP2 MLOAD DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x19C2 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x1938 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x19D4 DUP2 DUP8 PUSH2 0x197D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x19E8 DUP2 DUP7 PUSH2 0x197D JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x60 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A23 JUMPI DUP4 MLOAD ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1A03 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1A75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x1A86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1A9F JUMPI PUSH2 0x1A9F PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1ACD JUMPI PUSH2 0x1ACD PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP11 LT ISZERO PUSH2 0x1AE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 SWAP3 DUP3 ADD DUP4 ADD MSTORE SWAP10 SWAP1 DUP9 ADD CALLDATALOAD SWAP9 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP8 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP8 POP PUSH1 0x80 ADD CALLDATALOAD SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1B4F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1938 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1B61 DUP2 DUP6 PUSH2 0x197D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B90 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1B74 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1BD4 SWAP1 DUP4 ADD DUP10 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP8 SWAP1 SWAP8 MSTORE POP PUSH1 0x60 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x125B9D985B1A5908185CDCD95D081251 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x155B985D5D1A1BDC9A5E9959 PUSH1 0xA2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x109A59191A5B99C8185B1C9958591E4818DB1BDCD959 PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1CBE JUMPI PUSH2 0x1CBE PUSH2 0x1C96 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1CD9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CF9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x175E JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1D26 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D46 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D32 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1D66 JUMPI PUSH2 0x1D66 PUSH2 0x1A31 JUMP JUMPDEST PUSH2 0x1D7A DUP2 PUSH2 0x1D74 DUP5 SLOAD PUSH2 0x1CC5 JUMP JUMPDEST DUP5 PUSH2 0x1CFF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1DAE JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x1D96 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1DDE JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1DBE JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1DFC JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1557 JUMPI PUSH2 0x1557 PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1E31 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1E60 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1557 JUMPI PUSH2 0x1557 PUSH2 0x1C96 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1557 JUMPI PUSH2 0x1557 PUSH2 0x1C96 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE PUSH28 0x34FF116E59147E9F73FA4041F7918791D42501B74360E5A0F1E0BE57 0xB9 PUSH30 0x64736F6C634300081D003300000000000000000000000000000000000000 ",
							"sourceMap": "179:12994:2:-:0;;;;;;;;;;;;-1:-1:-1;1716:1:0;1821:7;:22;179:12994:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_nonReentrantAfter_52": {
									"entryPoint": null,
									"id": 52,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_44": {
									"entryPoint": 3913,
									"id": 44,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_processBids_1451": {
									"entryPoint": 4002,
									"id": 1451,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_refundAllBids_1593": {
									"entryPoint": 6023,
									"id": 1593,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_sortBids_1526": {
									"entryPoint": 5469,
									"id": 1526,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_240": {
									"entryPoint": 5999,
									"id": 240,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@assetBids_435": {
									"entryPoint": 3148,
									"id": 435,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@assetCount_437": {
									"entryPoint": null,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@assets_429": {
									"entryPoint": 3702,
									"id": 429,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@createAssetOffering_640": {
									"entryPoint": 1508,
									"id": 640,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@div_285": {
									"entryPoint": 5448,
									"id": 285,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@endBidding_1048": {
									"entryPoint": 1285,
									"id": 1048,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@executeBidding_1114": {
									"entryPoint": 3525,
									"id": 1114,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getAssetBasicDetails_702": {
									"entryPoint": 3231,
									"id": 702,
									"parameterSlots": 1,
									"returnSlots": 7
								},
								"@getAssetBids_991": {
									"entryPoint": 593,
									"id": 991,
									"parameterSlots": 1,
									"returnSlots": 4
								},
								"@getAssetOwners_793": {
									"entryPoint": 2738,
									"id": 793,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getLatestAssetCount_648": {
									"entryPoint": null,
									"id": 648,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mul_270": {
									"entryPoint": 5987,
									"id": 270,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@placeBid_862": {
									"entryPoint": 2258,
									"id": 862,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@sub_255": {
									"entryPoint": 6011,
									"id": 255,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256t_uint256": {
									"entryPoint": 6727,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6938,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_array_address_dyn": {
									"entryPoint": 6456,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 6525,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 7018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": 7088,
									"id": null,
									"parameterSlots": 8,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6972,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bool_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bool_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6575,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7710,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_119a2f4ad272726f690e20370d39e55ca3ab5b4c8e68a193f694062fe42aa1ce__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2660f134c570050d07081949ab61b8e2ef1ea86f2b1188677e00a97048789cae__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2f302c4a317eeeaa66ff142a8019be7f7a17e4f751a3204fdf93094743ebab94__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7168,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_57592abfbda94eb909abef2196f77385e01da573d6304a2883cd72451377302b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8c1cad1af2254206997ae1c3d22293c820984c676cba92a0d2942294ac246808__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9e942198a9acdea3654333ae329526f4a71c67a256810bd427f0a4d17a278f95__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7270,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cec8607ff74902d73895ca204adfd06f34d0ecf19ec1c9aa31f2c5b658f0327c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_de457caaba2cd98cb8dedbc6d33667526c4ecb91f62ade29eeaee1391f7fa60f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7781,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7804,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 7423,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 7501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7318,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7210,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6705,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15082:3",
										"nodeType": "YulBlock",
										"src": "0:15082:3",
										"statements": [
											{
												"nativeSrc": "6:3:3",
												"nodeType": "YulBlock",
												"src": "6:3:3",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "84:156:3",
													"nodeType": "YulBlock",
													"src": "84:156:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "130:16:3",
																"nodeType": "YulBlock",
																"src": "130:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "139:1:3",
																					"nodeType": "YulLiteral",
																					"src": "139:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "142:1:3",
																					"nodeType": "YulLiteral",
																					"src": "142:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "132:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "132:6:3"
																			},
																			"nativeSrc": "132:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "132:12:3"
																		},
																		"nativeSrc": "132:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "132:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "105:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "105:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "114:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "114:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "101:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "101:3:3"
																		},
																		"nativeSrc": "101:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "101:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "126:2:3",
																		"nodeType": "YulLiteral",
																		"src": "126:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "97:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "97:3:3"
																},
																"nativeSrc": "97:32:3",
																"nodeType": "YulFunctionCall",
																"src": "97:32:3"
															},
															"nativeSrc": "94:52:3",
															"nodeType": "YulIf",
															"src": "94:52:3"
														},
														{
															"nativeSrc": "155:14:3",
															"nodeType": "YulVariableDeclaration",
															"src": "155:14:3",
															"value": {
																"kind": "number",
																"nativeSrc": "168:1:3",
																"nodeType": "YulLiteral",
																"src": "168:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "159:5:3",
																	"nodeType": "YulTypedName",
																	"src": "159:5:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "178:32:3",
															"nodeType": "YulAssignment",
															"src": "178:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "200:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "200:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "187:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "187:12:3"
																},
																"nativeSrc": "187:23:3",
																"nodeType": "YulFunctionCall",
																"src": "187:23:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "178:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "178:5:3"
																}
															]
														},
														{
															"nativeSrc": "219:15:3",
															"nodeType": "YulAssignment",
															"src": "219:15:3",
															"value": {
																"name": "value",
																"nativeSrc": "229:5:3",
																"nodeType": "YulIdentifier",
																"src": "229:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "219:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "219:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "14:226:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "50:9:3",
														"nodeType": "YulTypedName",
														"src": "50:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "61:7:3",
														"nodeType": "YulTypedName",
														"src": "61:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "73:6:3",
														"nodeType": "YulTypedName",
														"src": "73:6:3",
														"type": ""
													}
												],
												"src": "14:226:3"
											},
											{
												"body": {
													"nativeSrc": "306:385:3",
													"nodeType": "YulBlock",
													"src": "306:385:3",
													"statements": [
														{
															"nativeSrc": "316:26:3",
															"nodeType": "YulVariableDeclaration",
															"src": "316:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "336:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "336:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "330:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "330:5:3"
																},
																"nativeSrc": "330:12:3",
																"nodeType": "YulFunctionCall",
																"src": "330:12:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "320:6:3",
																	"nodeType": "YulTypedName",
																	"src": "320:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "358:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "358:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "363:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "363:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "351:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "351:6:3"
																},
																"nativeSrc": "351:19:3",
																"nodeType": "YulFunctionCall",
																"src": "351:19:3"
															},
															"nativeSrc": "351:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "351:19:3"
														},
														{
															"nativeSrc": "379:21:3",
															"nodeType": "YulAssignment",
															"src": "379:21:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "390:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "390:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "395:4:3",
																		"nodeType": "YulLiteral",
																		"src": "395:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "386:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "386:3:3"
																},
																"nativeSrc": "386:14:3",
																"nodeType": "YulFunctionCall",
																"src": "386:14:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "379:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "379:3:3"
																}
															]
														},
														{
															"nativeSrc": "409:30:3",
															"nodeType": "YulVariableDeclaration",
															"src": "409:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "427:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "427:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "434:4:3",
																		"nodeType": "YulLiteral",
																		"src": "434:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "423:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "423:3:3"
																},
																"nativeSrc": "423:16:3",
																"nodeType": "YulFunctionCall",
																"src": "423:16:3"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "413:6:3",
																	"nodeType": "YulTypedName",
																	"src": "413:6:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "448:10:3",
															"nodeType": "YulVariableDeclaration",
															"src": "448:10:3",
															"value": {
																"kind": "number",
																"nativeSrc": "457:1:3",
																"nodeType": "YulLiteral",
																"src": "457:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "452:1:3",
																	"nodeType": "YulTypedName",
																	"src": "452:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "516:150:3",
																"nodeType": "YulBlock",
																"src": "516:150:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "537:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "537:3:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nativeSrc": "552:6:3",
																									"nodeType": "YulIdentifier",
																									"src": "552:6:3"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "546:5:3",
																								"nodeType": "YulIdentifier",
																								"src": "546:5:3"
																							},
																							"nativeSrc": "546:13:3",
																							"nodeType": "YulFunctionCall",
																							"src": "546:13:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "569:3:3",
																											"nodeType": "YulLiteral",
																											"src": "569:3:3",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "574:1:3",
																											"nodeType": "YulLiteral",
																											"src": "574:1:3",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "565:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "565:3:3"
																									},
																									"nativeSrc": "565:11:3",
																									"nodeType": "YulFunctionCall",
																									"src": "565:11:3"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "578:1:3",
																									"nodeType": "YulLiteral",
																									"src": "578:1:3",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nativeSrc": "561:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "561:3:3"
																							},
																							"nativeSrc": "561:19:3",
																							"nodeType": "YulFunctionCall",
																							"src": "561:19:3"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "542:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "542:3:3"
																					},
																					"nativeSrc": "542:39:3",
																					"nodeType": "YulFunctionCall",
																					"src": "542:39:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "530:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "530:6:3"
																			},
																			"nativeSrc": "530:52:3",
																			"nodeType": "YulFunctionCall",
																			"src": "530:52:3"
																		},
																		"nativeSrc": "530:52:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "530:52:3"
																	},
																	{
																		"nativeSrc": "595:21:3",
																		"nodeType": "YulAssignment",
																		"src": "595:21:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "606:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "606:3:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "611:4:3",
																					"nodeType": "YulLiteral",
																					"src": "611:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "602:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "602:3:3"
																			},
																			"nativeSrc": "602:14:3",
																			"nodeType": "YulFunctionCall",
																			"src": "602:14:3"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "595:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "595:3:3"
																			}
																		]
																	},
																	{
																		"nativeSrc": "629:27:3",
																		"nodeType": "YulAssignment",
																		"src": "629:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "643:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "643:6:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "651:4:3",
																					"nodeType": "YulLiteral",
																					"src": "651:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "639:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "639:3:3"
																			},
																			"nativeSrc": "639:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "639:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "629:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "629:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "478:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "478:1:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "481:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "481:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "475:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "475:2:3"
																},
																"nativeSrc": "475:13:3",
																"nodeType": "YulFunctionCall",
																"src": "475:13:3"
															},
															"nativeSrc": "467:199:3",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "489:18:3",
																"nodeType": "YulBlock",
																"src": "489:18:3",
																"statements": [
																	{
																		"nativeSrc": "491:14:3",
																		"nodeType": "YulAssignment",
																		"src": "491:14:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "500:1:3",
																					"nodeType": "YulIdentifier",
																					"src": "500:1:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "503:1:3",
																					"nodeType": "YulLiteral",
																					"src": "503:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "496:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "496:3:3"
																			},
																			"nativeSrc": "496:9:3",
																			"nodeType": "YulFunctionCall",
																			"src": "496:9:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "491:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "491:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "471:3:3",
																"nodeType": "YulBlock",
																"src": "471:3:3",
																"statements": []
															},
															"src": "467:199:3"
														},
														{
															"nativeSrc": "675:10:3",
															"nodeType": "YulAssignment",
															"src": "675:10:3",
															"value": {
																"name": "pos",
																"nativeSrc": "682:3:3",
																"nodeType": "YulIdentifier",
																"src": "682:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "675:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "675:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_address_dyn",
												"nativeSrc": "245:446:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "283:5:3",
														"nodeType": "YulTypedName",
														"src": "283:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "290:3:3",
														"nodeType": "YulTypedName",
														"src": "290:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "298:3:3",
														"nodeType": "YulTypedName",
														"src": "298:3:3",
														"type": ""
													}
												],
												"src": "245:446:3"
											},
											{
												"body": {
													"nativeSrc": "757:359:3",
													"nodeType": "YulBlock",
													"src": "757:359:3",
													"statements": [
														{
															"nativeSrc": "767:26:3",
															"nodeType": "YulVariableDeclaration",
															"src": "767:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "787:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "787:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "781:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "781:5:3"
																},
																"nativeSrc": "781:12:3",
																"nodeType": "YulFunctionCall",
																"src": "781:12:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "771:6:3",
																	"nodeType": "YulTypedName",
																	"src": "771:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "809:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "809:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "814:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "814:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "802:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "802:6:3"
																},
																"nativeSrc": "802:19:3",
																"nodeType": "YulFunctionCall",
																"src": "802:19:3"
															},
															"nativeSrc": "802:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "802:19:3"
														},
														{
															"nativeSrc": "830:21:3",
															"nodeType": "YulAssignment",
															"src": "830:21:3",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "841:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "841:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "846:4:3",
																		"nodeType": "YulLiteral",
																		"src": "846:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "837:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "837:3:3"
																},
																"nativeSrc": "837:14:3",
																"nodeType": "YulFunctionCall",
																"src": "837:14:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "830:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "830:3:3"
																}
															]
														},
														{
															"nativeSrc": "860:30:3",
															"nodeType": "YulVariableDeclaration",
															"src": "860:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "878:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "878:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "885:4:3",
																		"nodeType": "YulLiteral",
																		"src": "885:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "874:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "874:3:3"
																},
																"nativeSrc": "874:16:3",
																"nodeType": "YulFunctionCall",
																"src": "874:16:3"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "864:6:3",
																	"nodeType": "YulTypedName",
																	"src": "864:6:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "899:10:3",
															"nodeType": "YulVariableDeclaration",
															"src": "899:10:3",
															"value": {
																"kind": "number",
																"nativeSrc": "908:1:3",
																"nodeType": "YulLiteral",
																"src": "908:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "903:1:3",
																	"nodeType": "YulTypedName",
																	"src": "903:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "967:124:3",
																"nodeType": "YulBlock",
																"src": "967:124:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "988:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "988:3:3"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nativeSrc": "999:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "999:6:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "993:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "993:5:3"
																					},
																					"nativeSrc": "993:13:3",
																					"nodeType": "YulFunctionCall",
																					"src": "993:13:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "981:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "981:6:3"
																			},
																			"nativeSrc": "981:26:3",
																			"nodeType": "YulFunctionCall",
																			"src": "981:26:3"
																		},
																		"nativeSrc": "981:26:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "981:26:3"
																	},
																	{
																		"nativeSrc": "1020:21:3",
																		"nodeType": "YulAssignment",
																		"src": "1020:21:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "1031:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "1031:3:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:4:3",
																					"nodeType": "YulLiteral",
																					"src": "1036:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1027:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "1027:3:3"
																			},
																			"nativeSrc": "1027:14:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1027:14:3"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "1020:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "1020:3:3"
																			}
																		]
																	},
																	{
																		"nativeSrc": "1054:27:3",
																		"nodeType": "YulAssignment",
																		"src": "1054:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "1068:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "1068:6:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1076:4:3",
																					"nodeType": "YulLiteral",
																					"src": "1076:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1064:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "1064:3:3"
																			},
																			"nativeSrc": "1064:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "1064:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "1054:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1054:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "929:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "929:1:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "932:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "932:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "926:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "926:2:3"
																},
																"nativeSrc": "926:13:3",
																"nodeType": "YulFunctionCall",
																"src": "926:13:3"
															},
															"nativeSrc": "918:173:3",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "940:18:3",
																"nodeType": "YulBlock",
																"src": "940:18:3",
																"statements": [
																	{
																		"nativeSrc": "942:14:3",
																		"nodeType": "YulAssignment",
																		"src": "942:14:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "951:1:3",
																					"nodeType": "YulIdentifier",
																					"src": "951:1:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "954:1:3",
																					"nodeType": "YulLiteral",
																					"src": "954:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "947:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "947:3:3"
																			},
																			"nativeSrc": "947:9:3",
																			"nodeType": "YulFunctionCall",
																			"src": "947:9:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "942:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "942:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "922:3:3",
																"nodeType": "YulBlock",
																"src": "922:3:3",
																"statements": []
															},
															"src": "918:173:3"
														},
														{
															"nativeSrc": "1100:10:3",
															"nodeType": "YulAssignment",
															"src": "1100:10:3",
															"value": {
																"name": "pos",
																"nativeSrc": "1107:3:3",
																"nodeType": "YulIdentifier",
																"src": "1107:3:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1100:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "1100:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nativeSrc": "696:420:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "734:5:3",
														"nodeType": "YulTypedName",
														"src": "734:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "741:3:3",
														"nodeType": "YulTypedName",
														"src": "741:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "749:3:3",
														"nodeType": "YulTypedName",
														"src": "749:3:3",
														"type": ""
													}
												],
												"src": "696:420:3"
											},
											{
												"body": {
													"nativeSrc": "1500:824:3",
													"nodeType": "YulBlock",
													"src": "1500:824:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1517:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "1517:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1528:3:3",
																		"nodeType": "YulLiteral",
																		"src": "1528:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1510:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1510:6:3"
																},
																"nativeSrc": "1510:22:3",
																"nodeType": "YulFunctionCall",
																"src": "1510:22:3"
															},
															"nativeSrc": "1510:22:3",
															"nodeType": "YulExpressionStatement",
															"src": "1510:22:3"
														},
														{
															"nativeSrc": "1541:71:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1541:71:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1584:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1584:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1596:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1596:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1607:3:3",
																				"nodeType": "YulLiteral",
																				"src": "1607:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1592:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1592:3:3"
																		},
																		"nativeSrc": "1592:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1592:19:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn",
																	"nativeSrc": "1555:28:3",
																	"nodeType": "YulIdentifier",
																	"src": "1555:28:3"
																},
																"nativeSrc": "1555:57:3",
																"nodeType": "YulFunctionCall",
																"src": "1555:57:3"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "1545:6:3",
																	"nodeType": "YulTypedName",
																	"src": "1545:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1632:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1632:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1643:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1643:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1628:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1628:3:3"
																		},
																		"nativeSrc": "1628:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1628:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "1652:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1652:6:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1660:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1660:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1648:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1648:3:3"
																		},
																		"nativeSrc": "1648:22:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1648:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1621:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1621:6:3"
																},
																"nativeSrc": "1621:50:3",
																"nodeType": "YulFunctionCall",
																"src": "1621:50:3"
															},
															"nativeSrc": "1621:50:3",
															"nodeType": "YulExpressionStatement",
															"src": "1621:50:3"
														},
														{
															"nativeSrc": "1680:58:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1680:58:3",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1723:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1723:6:3"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "1731:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1731:6:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "1694:28:3",
																	"nodeType": "YulIdentifier",
																	"src": "1694:28:3"
																},
																"nativeSrc": "1694:44:3",
																"nodeType": "YulFunctionCall",
																"src": "1694:44:3"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nativeSrc": "1684:6:3",
																	"nodeType": "YulTypedName",
																	"src": "1684:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1758:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1758:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1769:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1769:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1754:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1754:3:3"
																		},
																		"nativeSrc": "1754:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1754:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nativeSrc": "1778:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1786:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1786:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1774:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1774:3:3"
																		},
																		"nativeSrc": "1774:22:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1774:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1747:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1747:6:3"
																},
																"nativeSrc": "1747:50:3",
																"nodeType": "YulFunctionCall",
																"src": "1747:50:3"
															},
															"nativeSrc": "1747:50:3",
															"nodeType": "YulExpressionStatement",
															"src": "1747:50:3"
														},
														{
															"nativeSrc": "1806:58:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1806:58:3",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "1849:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1849:6:3"
																	},
																	{
																		"name": "tail_2",
																		"nativeSrc": "1857:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1857:6:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "1820:28:3",
																	"nodeType": "YulIdentifier",
																	"src": "1820:28:3"
																},
																"nativeSrc": "1820:44:3",
																"nodeType": "YulFunctionCall",
																"src": "1820:44:3"
															},
															"variables": [
																{
																	"name": "tail_3",
																	"nativeSrc": "1810:6:3",
																	"nodeType": "YulTypedName",
																	"src": "1810:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1884:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1884:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1895:2:3",
																				"nodeType": "YulLiteral",
																				"src": "1895:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1880:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1880:3:3"
																		},
																		"nativeSrc": "1880:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1880:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_3",
																				"nativeSrc": "1904:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "1904:6:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1912:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "1912:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1900:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "1900:3:3"
																		},
																		"nativeSrc": "1900:22:3",
																		"nodeType": "YulFunctionCall",
																		"src": "1900:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1873:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1873:6:3"
																},
																"nativeSrc": "1873:50:3",
																"nodeType": "YulFunctionCall",
																"src": "1873:50:3"
															},
															"nativeSrc": "1873:50:3",
															"nodeType": "YulExpressionStatement",
															"src": "1873:50:3"
														},
														{
															"nativeSrc": "1932:17:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1932:17:3",
															"value": {
																"name": "tail_3",
																"nativeSrc": "1943:6:3",
																"nodeType": "YulIdentifier",
																"src": "1943:6:3"
															},
															"variables": [
																{
																	"name": "pos",
																	"nativeSrc": "1936:3:3",
																	"nodeType": "YulTypedName",
																	"src": "1936:3:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1958:27:3",
															"nodeType": "YulVariableDeclaration",
															"src": "1958:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "1978:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "1978:6:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1972:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "1972:5:3"
																},
																"nativeSrc": "1972:13:3",
																"nodeType": "YulFunctionCall",
																"src": "1972:13:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1962:6:3",
																	"nodeType": "YulTypedName",
																	"src": "1962:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_3",
																		"nativeSrc": "2001:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2001:6:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2009:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2009:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1994:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "1994:6:3"
																},
																"nativeSrc": "1994:22:3",
																"nodeType": "YulFunctionCall",
																"src": "1994:22:3"
															},
															"nativeSrc": "1994:22:3",
															"nodeType": "YulExpressionStatement",
															"src": "1994:22:3"
														},
														{
															"nativeSrc": "2025:22:3",
															"nodeType": "YulAssignment",
															"src": "2025:22:3",
															"value": {
																"arguments": [
																	{
																		"name": "tail_3",
																		"nativeSrc": "2036:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2036:6:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2044:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2044:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2032:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2032:3:3"
																},
																"nativeSrc": "2032:15:3",
																"nodeType": "YulFunctionCall",
																"src": "2032:15:3"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2025:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2025:3:3"
																}
															]
														},
														{
															"nativeSrc": "2056:29:3",
															"nodeType": "YulVariableDeclaration",
															"src": "2056:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "2074:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2074:6:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2082:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2082:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2070:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2070:3:3"
																},
																"nativeSrc": "2070:15:3",
																"nodeType": "YulFunctionCall",
																"src": "2070:15:3"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "2060:6:3",
																	"nodeType": "YulTypedName",
																	"src": "2060:6:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2094:10:3",
															"nodeType": "YulVariableDeclaration",
															"src": "2094:10:3",
															"value": {
																"kind": "number",
																"nativeSrc": "2103:1:3",
																"nodeType": "YulLiteral",
																"src": "2103:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2098:1:3",
																	"nodeType": "YulTypedName",
																	"src": "2098:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2162:136:3",
																"nodeType": "YulBlock",
																"src": "2162:136:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "2183:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2183:3:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "srcPtr",
																											"nativeSrc": "2208:6:3",
																											"nodeType": "YulIdentifier",
																											"src": "2208:6:3"
																										}
																									],
																									"functionName": {
																										"name": "mload",
																										"nativeSrc": "2202:5:3",
																										"nodeType": "YulIdentifier",
																										"src": "2202:5:3"
																									},
																									"nativeSrc": "2202:13:3",
																									"nodeType": "YulFunctionCall",
																									"src": "2202:13:3"
																								}
																							],
																							"functionName": {
																								"name": "iszero",
																								"nativeSrc": "2195:6:3",
																								"nodeType": "YulIdentifier",
																								"src": "2195:6:3"
																							},
																							"nativeSrc": "2195:21:3",
																							"nodeType": "YulFunctionCall",
																							"src": "2195:21:3"
																						}
																					],
																					"functionName": {
																						"name": "iszero",
																						"nativeSrc": "2188:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "2188:6:3"
																					},
																					"nativeSrc": "2188:29:3",
																					"nodeType": "YulFunctionCall",
																					"src": "2188:29:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2176:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2176:6:3"
																			},
																			"nativeSrc": "2176:42:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2176:42:3"
																		},
																		"nativeSrc": "2176:42:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2176:42:3"
																	},
																	{
																		"nativeSrc": "2231:19:3",
																		"nodeType": "YulAssignment",
																		"src": "2231:19:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nativeSrc": "2242:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "2242:3:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2247:2:3",
																					"nodeType": "YulLiteral",
																					"src": "2247:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2238:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "2238:3:3"
																			},
																			"nativeSrc": "2238:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2238:12:3"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "2231:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "2231:3:3"
																			}
																		]
																	},
																	{
																		"nativeSrc": "2263:25:3",
																		"nodeType": "YulAssignment",
																		"src": "2263:25:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "2277:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "2277:6:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2285:2:3",
																					"nodeType": "YulLiteral",
																					"src": "2285:2:3",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2273:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "2273:3:3"
																			},
																			"nativeSrc": "2273:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2273:15:3"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "2263:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2263:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2124:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "2124:1:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2127:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2127:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2121:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "2121:2:3"
																},
																"nativeSrc": "2121:13:3",
																"nodeType": "YulFunctionCall",
																"src": "2121:13:3"
															},
															"nativeSrc": "2113:185:3",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2135:18:3",
																"nodeType": "YulBlock",
																"src": "2135:18:3",
																"statements": [
																	{
																		"nativeSrc": "2137:14:3",
																		"nodeType": "YulAssignment",
																		"src": "2137:14:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2146:1:3",
																					"nodeType": "YulIdentifier",
																					"src": "2146:1:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2149:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2149:1:3",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2142:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "2142:3:3"
																			},
																			"nativeSrc": "2142:9:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2142:9:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2137:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "2137:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2117:3:3",
																"nodeType": "YulBlock",
																"src": "2117:3:3",
																"statements": []
															},
															"src": "2113:185:3"
														},
														{
															"nativeSrc": "2307:11:3",
															"nodeType": "YulAssignment",
															"src": "2307:11:3",
															"value": {
																"name": "pos",
																"nativeSrc": "2315:3:3",
																"nodeType": "YulIdentifier",
																"src": "2315:3:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2307:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2307:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bool_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bool_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "1121:1203:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1445:9:3",
														"nodeType": "YulTypedName",
														"src": "1445:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1456:6:3",
														"nodeType": "YulTypedName",
														"src": "1456:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1464:6:3",
														"nodeType": "YulTypedName",
														"src": "1464:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1472:6:3",
														"nodeType": "YulTypedName",
														"src": "1472:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1480:6:3",
														"nodeType": "YulTypedName",
														"src": "1480:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1491:4:3",
														"nodeType": "YulTypedName",
														"src": "1491:4:3",
														"type": ""
													}
												],
												"src": "1121:1203:3"
											},
											{
												"body": {
													"nativeSrc": "2430:76:3",
													"nodeType": "YulBlock",
													"src": "2430:76:3",
													"statements": [
														{
															"nativeSrc": "2440:26:3",
															"nodeType": "YulAssignment",
															"src": "2440:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2452:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2452:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2463:2:3",
																		"nodeType": "YulLiteral",
																		"src": "2463:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2448:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2448:3:3"
																},
																"nativeSrc": "2448:18:3",
																"nodeType": "YulFunctionCall",
																"src": "2448:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2440:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "2440:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2482:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2482:9:3"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2493:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2493:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2475:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2475:6:3"
																},
																"nativeSrc": "2475:25:3",
																"nodeType": "YulFunctionCall",
																"src": "2475:25:3"
															},
															"nativeSrc": "2475:25:3",
															"nodeType": "YulExpressionStatement",
															"src": "2475:25:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2329:177:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2399:9:3",
														"nodeType": "YulTypedName",
														"src": "2399:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2410:6:3",
														"nodeType": "YulTypedName",
														"src": "2410:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2421:4:3",
														"nodeType": "YulTypedName",
														"src": "2421:4:3",
														"type": ""
													}
												],
												"src": "2329:177:3"
											},
											{
												"body": {
													"nativeSrc": "2543:95:3",
													"nodeType": "YulBlock",
													"src": "2543:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2560:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2560:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2567:3:3",
																				"nodeType": "YulLiteral",
																				"src": "2567:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2572:10:3",
																				"nodeType": "YulLiteral",
																				"src": "2572:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2563:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2563:3:3"
																		},
																		"nativeSrc": "2563:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2563:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2553:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2553:6:3"
																},
																"nativeSrc": "2553:31:3",
																"nodeType": "YulFunctionCall",
																"src": "2553:31:3"
															},
															"nativeSrc": "2553:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "2553:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2600:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2600:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2603:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2603:4:3",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2593:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2593:6:3"
																},
																"nativeSrc": "2593:15:3",
																"nodeType": "YulFunctionCall",
																"src": "2593:15:3"
															},
															"nativeSrc": "2593:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "2593:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2624:1:3",
																		"nodeType": "YulLiteral",
																		"src": "2624:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2627:4:3",
																		"nodeType": "YulLiteral",
																		"src": "2627:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2617:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "2617:6:3"
																},
																"nativeSrc": "2617:15:3",
																"nodeType": "YulFunctionCall",
																"src": "2617:15:3"
															},
															"nativeSrc": "2617:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "2617:15:3"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "2511:127:3",
												"nodeType": "YulFunctionDefinition",
												"src": "2511:127:3"
											},
											{
												"body": {
													"nativeSrc": "2791:1283:3",
													"nodeType": "YulBlock",
													"src": "2791:1283:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "2838:16:3",
																"nodeType": "YulBlock",
																"src": "2838:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2847:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2847:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2850:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2850:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2840:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2840:6:3"
																			},
																			"nativeSrc": "2840:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2840:12:3"
																		},
																		"nativeSrc": "2840:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2840:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2812:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2821:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2808:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:3"
																		},
																		"nativeSrc": "2808:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2833:3:3",
																		"nodeType": "YulLiteral",
																		"src": "2833:3:3",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2804:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:3"
																},
																"nativeSrc": "2804:33:3",
																"nodeType": "YulFunctionCall",
																"src": "2804:33:3"
															},
															"nativeSrc": "2801:53:3",
															"nodeType": "YulIf",
															"src": "2801:53:3"
														},
														{
															"nativeSrc": "2863:37:3",
															"nodeType": "YulVariableDeclaration",
															"src": "2863:37:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2890:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2890:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2877:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "2877:12:3"
																},
																"nativeSrc": "2877:23:3",
																"nodeType": "YulFunctionCall",
																"src": "2877:23:3"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2867:6:3",
																	"nodeType": "YulTypedName",
																	"src": "2867:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2943:16:3",
																"nodeType": "YulBlock",
																"src": "2943:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2952:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2952:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2955:1:3",
																					"nodeType": "YulLiteral",
																					"src": "2955:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2945:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "2945:6:3"
																			},
																			"nativeSrc": "2945:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "2945:12:3"
																		},
																		"nativeSrc": "2945:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "2945:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2915:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2915:6:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2923:18:3",
																		"nodeType": "YulLiteral",
																		"src": "2923:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2912:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "2912:2:3"
																},
																"nativeSrc": "2912:30:3",
																"nodeType": "YulFunctionCall",
																"src": "2912:30:3"
															},
															"nativeSrc": "2909:50:3",
															"nodeType": "YulIf",
															"src": "2909:50:3"
														},
														{
															"nativeSrc": "2968:32:3",
															"nodeType": "YulVariableDeclaration",
															"src": "2968:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2982:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "2982:9:3"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2993:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "2993:6:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2978:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "2978:3:3"
																},
																"nativeSrc": "2978:22:3",
																"nodeType": "YulFunctionCall",
																"src": "2978:22:3"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2972:2:3",
																	"nodeType": "YulTypedName",
																	"src": "2972:2:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3048:16:3",
																"nodeType": "YulBlock",
																"src": "3048:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3057:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3057:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3060:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3060:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3050:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3050:6:3"
																			},
																			"nativeSrc": "3050:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3050:12:3"
																		},
																		"nativeSrc": "3050:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3050:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "3027:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "3027:2:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3031:4:3",
																						"nodeType": "YulLiteral",
																						"src": "3031:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3023:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3023:3:3"
																				},
																				"nativeSrc": "3023:13:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3023:13:3"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3038:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "3038:7:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3019:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3019:3:3"
																		},
																		"nativeSrc": "3019:27:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3019:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3012:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3012:6:3"
																},
																"nativeSrc": "3012:35:3",
																"nodeType": "YulFunctionCall",
																"src": "3012:35:3"
															},
															"nativeSrc": "3009:55:3",
															"nodeType": "YulIf",
															"src": "3009:55:3"
														},
														{
															"nativeSrc": "3073:30:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3073:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "3100:2:3",
																		"nodeType": "YulIdentifier",
																		"src": "3100:2:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3087:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "3087:12:3"
																},
																"nativeSrc": "3087:16:3",
																"nodeType": "YulFunctionCall",
																"src": "3087:16:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3077:6:3",
																	"nodeType": "YulTypedName",
																	"src": "3077:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3146:22:3",
																"nodeType": "YulBlock",
																"src": "3146:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3148:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "3148:16:3"
																			},
																			"nativeSrc": "3148:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3148:18:3"
																		},
																		"nativeSrc": "3148:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3148:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "3118:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3118:6:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3126:18:3",
																		"nodeType": "YulLiteral",
																		"src": "3126:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3115:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "3115:2:3"
																},
																"nativeSrc": "3115:30:3",
																"nodeType": "YulFunctionCall",
																"src": "3115:30:3"
															},
															"nativeSrc": "3112:56:3",
															"nodeType": "YulIf",
															"src": "3112:56:3"
														},
														{
															"nativeSrc": "3177:23:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3177:23:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3197:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3197:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3191:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "3191:5:3"
																},
																"nativeSrc": "3191:9:3",
																"nodeType": "YulFunctionCall",
																"src": "3191:9:3"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "3181:6:3",
																	"nodeType": "YulTypedName",
																	"src": "3181:6:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3209:85:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3209:85:3",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3231:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3231:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "3255:6:3",
																										"nodeType": "YulIdentifier",
																										"src": "3255:6:3"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3263:4:3",
																										"nodeType": "YulLiteral",
																										"src": "3263:4:3",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3251:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "3251:3:3"
																								},
																								"nativeSrc": "3251:17:3",
																								"nodeType": "YulFunctionCall",
																								"src": "3251:17:3"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "3274:2:3",
																										"nodeType": "YulLiteral",
																										"src": "3274:2:3",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "3270:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "3270:3:3"
																								},
																								"nativeSrc": "3270:7:3",
																								"nodeType": "YulFunctionCall",
																								"src": "3270:7:3"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "3247:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "3247:3:3"
																						},
																						"nativeSrc": "3247:31:3",
																						"nodeType": "YulFunctionCall",
																						"src": "3247:31:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3280:2:3",
																						"nodeType": "YulLiteral",
																						"src": "3280:2:3",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3243:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3243:3:3"
																				},
																				"nativeSrc": "3243:40:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3243:40:3"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3289:2:3",
																						"nodeType": "YulLiteral",
																						"src": "3289:2:3",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3285:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3285:3:3"
																				},
																				"nativeSrc": "3285:7:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3285:7:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3239:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3239:3:3"
																		},
																		"nativeSrc": "3239:54:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3239:54:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3227:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "3227:3:3"
																},
																"nativeSrc": "3227:67:3",
																"nodeType": "YulFunctionCall",
																"src": "3227:67:3"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "3213:10:3",
																	"nodeType": "YulTypedName",
																	"src": "3213:10:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3369:22:3",
																"nodeType": "YulBlock",
																"src": "3369:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "3371:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "3371:16:3"
																			},
																			"nativeSrc": "3371:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3371:18:3"
																		},
																		"nativeSrc": "3371:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3371:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3312:10:3",
																				"nodeType": "YulIdentifier",
																				"src": "3312:10:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3324:18:3",
																				"nodeType": "YulLiteral",
																				"src": "3324:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3309:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "3309:2:3"
																		},
																		"nativeSrc": "3309:34:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3309:34:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "3348:10:3",
																				"nodeType": "YulIdentifier",
																				"src": "3348:10:3"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "3360:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3360:6:3"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3345:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "3345:2:3"
																		},
																		"nativeSrc": "3345:22:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3345:22:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3306:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "3306:2:3"
																},
																"nativeSrc": "3306:62:3",
																"nodeType": "YulFunctionCall",
																"src": "3306:62:3"
															},
															"nativeSrc": "3303:88:3",
															"nodeType": "YulIf",
															"src": "3303:88:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3407:2:3",
																		"nodeType": "YulLiteral",
																		"src": "3407:2:3",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "3411:10:3",
																		"nodeType": "YulIdentifier",
																		"src": "3411:10:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3400:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3400:6:3"
																},
																"nativeSrc": "3400:22:3",
																"nodeType": "YulFunctionCall",
																"src": "3400:22:3"
															},
															"nativeSrc": "3400:22:3",
															"nodeType": "YulExpressionStatement",
															"src": "3400:22:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "3438:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3438:6:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3446:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3446:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3431:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3431:6:3"
																},
																"nativeSrc": "3431:22:3",
																"nodeType": "YulFunctionCall",
																"src": "3431:22:3"
															},
															"nativeSrc": "3431:22:3",
															"nodeType": "YulExpressionStatement",
															"src": "3431:22:3"
														},
														{
															"body": {
																"nativeSrc": "3505:16:3",
																"nodeType": "YulBlock",
																"src": "3505:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3514:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3514:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3517:1:3",
																					"nodeType": "YulLiteral",
																					"src": "3517:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3507:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3507:6:3"
																			},
																			"nativeSrc": "3507:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "3507:12:3"
																		},
																		"nativeSrc": "3507:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "3507:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "3476:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "3476:2:3"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3480:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3480:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3472:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3472:3:3"
																				},
																				"nativeSrc": "3472:15:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3472:15:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3489:4:3",
																				"nodeType": "YulLiteral",
																				"src": "3489:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3468:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3468:3:3"
																		},
																		"nativeSrc": "3468:26:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3468:26:3"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3496:7:3",
																		"nodeType": "YulIdentifier",
																		"src": "3496:7:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3465:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "3465:2:3"
																},
																"nativeSrc": "3465:39:3",
																"nodeType": "YulFunctionCall",
																"src": "3465:39:3"
															},
															"nativeSrc": "3462:59:3",
															"nodeType": "YulIf",
															"src": "3462:59:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3547:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "3547:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3555:4:3",
																				"nodeType": "YulLiteral",
																				"src": "3555:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3543:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3543:3:3"
																		},
																		"nativeSrc": "3543:17:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3543:17:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "3566:2:3",
																				"nodeType": "YulIdentifier",
																				"src": "3566:2:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3570:4:3",
																				"nodeType": "YulLiteral",
																				"src": "3570:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3562:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3562:3:3"
																		},
																		"nativeSrc": "3562:13:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3562:13:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3577:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "3577:6:3"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "3530:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "3530:12:3"
																},
																"nativeSrc": "3530:54:3",
																"nodeType": "YulFunctionCall",
																"src": "3530:54:3"
															},
															"nativeSrc": "3530:54:3",
															"nodeType": "YulExpressionStatement",
															"src": "3530:54:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "3608:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3608:6:3"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "3616:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "3616:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3604:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "3604:3:3"
																				},
																				"nativeSrc": "3604:19:3",
																				"nodeType": "YulFunctionCall",
																				"src": "3604:19:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3625:4:3",
																				"nodeType": "YulLiteral",
																				"src": "3625:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3600:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3600:3:3"
																		},
																		"nativeSrc": "3600:30:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3600:30:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3632:1:3",
																		"nodeType": "YulLiteral",
																		"src": "3632:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3593:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3593:6:3"
																},
																"nativeSrc": "3593:41:3",
																"nodeType": "YulFunctionCall",
																"src": "3593:41:3"
															},
															"nativeSrc": "3593:41:3",
															"nodeType": "YulExpressionStatement",
															"src": "3593:41:3"
														},
														{
															"nativeSrc": "3643:16:3",
															"nodeType": "YulAssignment",
															"src": "3643:16:3",
															"value": {
																"name": "memPtr",
																"nativeSrc": "3653:6:3",
																"nodeType": "YulIdentifier",
																"src": "3653:6:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3643:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3643:6:3"
																}
															]
														},
														{
															"nativeSrc": "3668:14:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3668:14:3",
															"value": {
																"kind": "number",
																"nativeSrc": "3681:1:3",
																"nodeType": "YulLiteral",
																"src": "3681:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3672:5:3",
																	"nodeType": "YulTypedName",
																	"src": "3672:5:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3691:43:3",
															"nodeType": "YulAssignment",
															"src": "3691:43:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3717:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3717:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3728:4:3",
																				"nodeType": "YulLiteral",
																				"src": "3728:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3713:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3713:3:3"
																		},
																		"nativeSrc": "3713:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3713:20:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3700:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "3700:12:3"
																},
																"nativeSrc": "3700:34:3",
																"nodeType": "YulFunctionCall",
																"src": "3700:34:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3691:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "3691:5:3"
																}
															]
														},
														{
															"nativeSrc": "3743:15:3",
															"nodeType": "YulAssignment",
															"src": "3743:15:3",
															"value": {
																"name": "value",
																"nativeSrc": "3753:5:3",
																"nodeType": "YulIdentifier",
																"src": "3753:5:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3743:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3743:6:3"
																}
															]
														},
														{
															"nativeSrc": "3767:16:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3767:16:3",
															"value": {
																"kind": "number",
																"nativeSrc": "3782:1:3",
																"nodeType": "YulLiteral",
																"src": "3782:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3771:7:3",
																	"nodeType": "YulTypedName",
																	"src": "3771:7:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3792:43:3",
															"nodeType": "YulAssignment",
															"src": "3792:43:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3820:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3820:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3831:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3831:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3816:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3816:3:3"
																		},
																		"nativeSrc": "3816:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3816:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3803:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "3803:12:3"
																},
																"nativeSrc": "3803:32:3",
																"nodeType": "YulFunctionCall",
																"src": "3803:32:3"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3792:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "3792:7:3"
																}
															]
														},
														{
															"nativeSrc": "3844:17:3",
															"nodeType": "YulAssignment",
															"src": "3844:17:3",
															"value": {
																"name": "value_1",
																"nativeSrc": "3854:7:3",
																"nodeType": "YulIdentifier",
																"src": "3854:7:3"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3844:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3844:6:3"
																}
															]
														},
														{
															"nativeSrc": "3870:16:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3870:16:3",
															"value": {
																"kind": "number",
																"nativeSrc": "3885:1:3",
																"nodeType": "YulLiteral",
																"src": "3885:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "3874:7:3",
																	"nodeType": "YulTypedName",
																	"src": "3874:7:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3895:43:3",
															"nodeType": "YulAssignment",
															"src": "3895:43:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3923:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "3923:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3934:2:3",
																				"nodeType": "YulLiteral",
																				"src": "3934:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3919:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "3919:3:3"
																		},
																		"nativeSrc": "3919:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "3919:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3906:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "3906:12:3"
																},
																"nativeSrc": "3906:32:3",
																"nodeType": "YulFunctionCall",
																"src": "3906:32:3"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "3895:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "3895:7:3"
																}
															]
														},
														{
															"nativeSrc": "3947:17:3",
															"nodeType": "YulAssignment",
															"src": "3947:17:3",
															"value": {
																"name": "value_2",
																"nativeSrc": "3957:7:3",
																"nodeType": "YulIdentifier",
																"src": "3957:7:3"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3947:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "3947:6:3"
																}
															]
														},
														{
															"nativeSrc": "3973:16:3",
															"nodeType": "YulVariableDeclaration",
															"src": "3973:16:3",
															"value": {
																"kind": "number",
																"nativeSrc": "3988:1:3",
																"nodeType": "YulLiteral",
																"src": "3988:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "3977:7:3",
																	"nodeType": "YulTypedName",
																	"src": "3977:7:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3998:44:3",
															"nodeType": "YulAssignment",
															"src": "3998:44:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4026:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4026:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4037:3:3",
																				"nodeType": "YulLiteral",
																				"src": "4037:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4022:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4022:3:3"
																		},
																		"nativeSrc": "4022:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4022:19:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4009:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "4009:12:3"
																},
																"nativeSrc": "4009:33:3",
																"nodeType": "YulFunctionCall",
																"src": "4009:33:3"
															},
															"variableNames": [
																{
																	"name": "value_3",
																	"nativeSrc": "3998:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "3998:7:3"
																}
															]
														},
														{
															"nativeSrc": "4051:17:3",
															"nodeType": "YulAssignment",
															"src": "4051:17:3",
															"value": {
																"name": "value_3",
																"nativeSrc": "4061:7:3",
																"nodeType": "YulIdentifier",
																"src": "4061:7:3"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "4051:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4051:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256t_uint256",
												"nativeSrc": "2643:1431:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2725:9:3",
														"nodeType": "YulTypedName",
														"src": "2725:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2736:7:3",
														"nodeType": "YulTypedName",
														"src": "2736:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2748:6:3",
														"nodeType": "YulTypedName",
														"src": "2748:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2756:6:3",
														"nodeType": "YulTypedName",
														"src": "2756:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2764:6:3",
														"nodeType": "YulTypedName",
														"src": "2764:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2772:6:3",
														"nodeType": "YulTypedName",
														"src": "2772:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2780:6:3",
														"nodeType": "YulTypedName",
														"src": "2780:6:3",
														"type": ""
													}
												],
												"src": "2643:1431:3"
											},
											{
												"body": {
													"nativeSrc": "4166:259:3",
													"nodeType": "YulBlock",
													"src": "4166:259:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "4212:16:3",
																"nodeType": "YulBlock",
																"src": "4212:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4221:1:3",
																					"nodeType": "YulLiteral",
																					"src": "4221:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4224:1:3",
																					"nodeType": "YulLiteral",
																					"src": "4224:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4214:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4214:6:3"
																			},
																			"nativeSrc": "4214:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "4214:12:3"
																		},
																		"nativeSrc": "4214:12:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "4214:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4187:7:3",
																				"nodeType": "YulIdentifier",
																				"src": "4187:7:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4196:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4196:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4183:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4183:3:3"
																		},
																		"nativeSrc": "4183:23:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4183:23:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4208:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4208:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4179:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "4179:3:3"
																},
																"nativeSrc": "4179:32:3",
																"nodeType": "YulFunctionCall",
																"src": "4179:32:3"
															},
															"nativeSrc": "4176:52:3",
															"nodeType": "YulIf",
															"src": "4176:52:3"
														},
														{
															"nativeSrc": "4237:14:3",
															"nodeType": "YulVariableDeclaration",
															"src": "4237:14:3",
															"value": {
																"kind": "number",
																"nativeSrc": "4250:1:3",
																"nodeType": "YulLiteral",
																"src": "4250:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4241:5:3",
																	"nodeType": "YulTypedName",
																	"src": "4241:5:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4260:32:3",
															"nodeType": "YulAssignment",
															"src": "4260:32:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4282:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4282:9:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4269:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "4269:12:3"
																},
																"nativeSrc": "4269:23:3",
																"nodeType": "YulFunctionCall",
																"src": "4269:23:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4260:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "4260:5:3"
																}
															]
														},
														{
															"nativeSrc": "4301:15:3",
															"nodeType": "YulAssignment",
															"src": "4301:15:3",
															"value": {
																"name": "value",
																"nativeSrc": "4311:5:3",
																"nodeType": "YulIdentifier",
																"src": "4311:5:3"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4301:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4301:6:3"
																}
															]
														},
														{
															"nativeSrc": "4325:16:3",
															"nodeType": "YulVariableDeclaration",
															"src": "4325:16:3",
															"value": {
																"kind": "number",
																"nativeSrc": "4340:1:3",
																"nodeType": "YulLiteral",
																"src": "4340:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "4329:7:3",
																	"nodeType": "YulTypedName",
																	"src": "4329:7:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4350:43:3",
															"nodeType": "YulAssignment",
															"src": "4350:43:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4378:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4378:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4389:2:3",
																				"nodeType": "YulLiteral",
																				"src": "4389:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4374:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4374:3:3"
																		},
																		"nativeSrc": "4374:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4374:18:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4361:12:3",
																	"nodeType": "YulIdentifier",
																	"src": "4361:12:3"
																},
																"nativeSrc": "4361:32:3",
																"nodeType": "YulFunctionCall",
																"src": "4361:32:3"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "4350:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "4350:7:3"
																}
															]
														},
														{
															"nativeSrc": "4402:17:3",
															"nodeType": "YulAssignment",
															"src": "4402:17:3",
															"value": {
																"name": "value_1",
																"nativeSrc": "4412:7:3",
																"nodeType": "YulIdentifier",
																"src": "4412:7:3"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4402:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4402:6:3"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "4079:346:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4124:9:3",
														"nodeType": "YulTypedName",
														"src": "4124:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4135:7:3",
														"nodeType": "YulTypedName",
														"src": "4135:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4147:6:3",
														"nodeType": "YulTypedName",
														"src": "4147:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4155:6:3",
														"nodeType": "YulTypedName",
														"src": "4155:6:3",
														"type": ""
													}
												],
												"src": "4079:346:3"
											},
											{
												"body": {
													"nativeSrc": "4659:236:3",
													"nodeType": "YulBlock",
													"src": "4659:236:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4676:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "4676:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4687:2:3",
																		"nodeType": "YulLiteral",
																		"src": "4687:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4669:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4669:6:3"
																},
																"nativeSrc": "4669:21:3",
																"nodeType": "YulFunctionCall",
																"src": "4669:21:3"
															},
															"nativeSrc": "4669:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "4669:21:3"
														},
														{
															"nativeSrc": "4699:70:3",
															"nodeType": "YulVariableDeclaration",
															"src": "4699:70:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4742:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4742:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4754:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4754:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4765:2:3",
																				"nodeType": "YulLiteral",
																				"src": "4765:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4750:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4750:3:3"
																		},
																		"nativeSrc": "4750:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4750:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn",
																	"nativeSrc": "4713:28:3",
																	"nodeType": "YulIdentifier",
																	"src": "4713:28:3"
																},
																"nativeSrc": "4713:56:3",
																"nodeType": "YulFunctionCall",
																"src": "4713:56:3"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "4703:6:3",
																	"nodeType": "YulTypedName",
																	"src": "4703:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4789:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4789:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4800:2:3",
																				"nodeType": "YulLiteral",
																				"src": "4800:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4785:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4785:3:3"
																		},
																		"nativeSrc": "4785:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4785:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "4809:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "4809:6:3"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4817:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "4817:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4805:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "4805:3:3"
																		},
																		"nativeSrc": "4805:22:3",
																		"nodeType": "YulFunctionCall",
																		"src": "4805:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4778:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "4778:6:3"
																},
																"nativeSrc": "4778:50:3",
																"nodeType": "YulFunctionCall",
																"src": "4778:50:3"
															},
															"nativeSrc": "4778:50:3",
															"nodeType": "YulExpressionStatement",
															"src": "4778:50:3"
														},
														{
															"nativeSrc": "4837:52:3",
															"nodeType": "YulAssignment",
															"src": "4837:52:3",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4874:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4874:6:3"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "4882:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "4882:6:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nativeSrc": "4845:28:3",
																	"nodeType": "YulIdentifier",
																	"src": "4845:28:3"
																},
																"nativeSrc": "4845:44:3",
																"nodeType": "YulFunctionCall",
																"src": "4845:44:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4837:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "4837:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "4430:465:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4620:9:3",
														"nodeType": "YulTypedName",
														"src": "4620:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4631:6:3",
														"nodeType": "YulTypedName",
														"src": "4631:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4639:6:3",
														"nodeType": "YulTypedName",
														"src": "4639:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4650:4:3",
														"nodeType": "YulTypedName",
														"src": "4650:4:3",
														"type": ""
													}
												],
												"src": "4430:465:3"
											},
											{
												"body": {
													"nativeSrc": "5079:248:3",
													"nodeType": "YulBlock",
													"src": "5079:248:3",
													"statements": [
														{
															"nativeSrc": "5089:27:3",
															"nodeType": "YulAssignment",
															"src": "5089:27:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5101:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5101:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5112:3:3",
																		"nodeType": "YulLiteral",
																		"src": "5112:3:3",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5097:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5097:3:3"
																},
																"nativeSrc": "5097:19:3",
																"nodeType": "YulFunctionCall",
																"src": "5097:19:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5089:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "5089:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5132:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "5132:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5147:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "5147:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5163:3:3",
																								"nodeType": "YulLiteral",
																								"src": "5163:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5168:1:3",
																								"nodeType": "YulLiteral",
																								"src": "5168:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5159:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "5159:3:3"
																						},
																						"nativeSrc": "5159:11:3",
																						"nodeType": "YulFunctionCall",
																						"src": "5159:11:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5172:1:3",
																						"nodeType": "YulLiteral",
																						"src": "5172:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5155:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "5155:3:3"
																				},
																				"nativeSrc": "5155:19:3",
																				"nodeType": "YulFunctionCall",
																				"src": "5155:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5143:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5143:3:3"
																		},
																		"nativeSrc": "5143:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5143:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5125:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5125:6:3"
																},
																"nativeSrc": "5125:51:3",
																"nodeType": "YulFunctionCall",
																"src": "5125:51:3"
															},
															"nativeSrc": "5125:51:3",
															"nodeType": "YulExpressionStatement",
															"src": "5125:51:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5196:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5196:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5207:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5207:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5192:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5192:3:3"
																		},
																		"nativeSrc": "5192:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5192:18:3"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "5212:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5212:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5185:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5185:6:3"
																},
																"nativeSrc": "5185:34:3",
																"nodeType": "YulFunctionCall",
																"src": "5185:34:3"
															},
															"nativeSrc": "5185:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "5185:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5239:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5239:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5250:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5250:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5235:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5235:3:3"
																		},
																		"nativeSrc": "5235:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5235:18:3"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "5255:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5255:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5228:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5228:6:3"
																},
																"nativeSrc": "5228:34:3",
																"nodeType": "YulFunctionCall",
																"src": "5228:34:3"
															},
															"nativeSrc": "5228:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "5228:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5282:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "5282:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5293:2:3",
																				"nodeType": "YulLiteral",
																				"src": "5293:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5278:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5278:3:3"
																		},
																		"nativeSrc": "5278:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5278:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nativeSrc": "5312:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "5312:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "5305:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "5305:6:3"
																				},
																				"nativeSrc": "5305:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "5305:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "5298:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "5298:6:3"
																		},
																		"nativeSrc": "5298:22:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5298:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5271:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5271:6:3"
																},
																"nativeSrc": "5271:50:3",
																"nodeType": "YulFunctionCall",
																"src": "5271:50:3"
															},
															"nativeSrc": "5271:50:3",
															"nodeType": "YulExpressionStatement",
															"src": "5271:50:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "4900:427:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5024:9:3",
														"nodeType": "YulTypedName",
														"src": "5024:9:3",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5035:6:3",
														"nodeType": "YulTypedName",
														"src": "5035:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5043:6:3",
														"nodeType": "YulTypedName",
														"src": "5043:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5051:6:3",
														"nodeType": "YulTypedName",
														"src": "5051:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5059:6:3",
														"nodeType": "YulTypedName",
														"src": "5059:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5070:4:3",
														"nodeType": "YulTypedName",
														"src": "5070:4:3",
														"type": ""
													}
												],
												"src": "4900:427:3"
											},
											{
												"body": {
													"nativeSrc": "5382:350:3",
													"nodeType": "YulBlock",
													"src": "5382:350:3",
													"statements": [
														{
															"nativeSrc": "5392:26:3",
															"nodeType": "YulVariableDeclaration",
															"src": "5392:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5412:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "5412:5:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5406:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "5406:5:3"
																},
																"nativeSrc": "5406:12:3",
																"nodeType": "YulFunctionCall",
																"src": "5406:12:3"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5396:6:3",
																	"nodeType": "YulTypedName",
																	"src": "5396:6:3",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5434:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "5434:3:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5439:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5439:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5427:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5427:6:3"
																},
																"nativeSrc": "5427:19:3",
																"nodeType": "YulFunctionCall",
																"src": "5427:19:3"
															},
															"nativeSrc": "5427:19:3",
															"nodeType": "YulExpressionStatement",
															"src": "5427:19:3"
														},
														{
															"nativeSrc": "5455:10:3",
															"nodeType": "YulVariableDeclaration",
															"src": "5455:10:3",
															"value": {
																"kind": "number",
																"nativeSrc": "5464:1:3",
																"nodeType": "YulLiteral",
																"src": "5464:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "5459:1:3",
																	"nodeType": "YulTypedName",
																	"src": "5459:1:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5526:87:3",
																"nodeType": "YulBlock",
																"src": "5526:87:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nativeSrc": "5555:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "5555:3:3"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "5560:1:3",
																									"nodeType": "YulIdentifier",
																									"src": "5560:1:3"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5551:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "5551:3:3"
																							},
																							"nativeSrc": "5551:11:3",
																							"nodeType": "YulFunctionCall",
																							"src": "5551:11:3"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "5564:4:3",
																							"nodeType": "YulLiteral",
																							"src": "5564:4:3",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5547:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "5547:3:3"
																					},
																					"nativeSrc": "5547:22:3",
																					"nodeType": "YulFunctionCall",
																					"src": "5547:22:3"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "5585:5:3",
																											"nodeType": "YulIdentifier",
																											"src": "5585:5:3"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "5592:1:3",
																											"nodeType": "YulIdentifier",
																											"src": "5592:1:3"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "5581:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "5581:3:3"
																									},
																									"nativeSrc": "5581:13:3",
																									"nodeType": "YulFunctionCall",
																									"src": "5581:13:3"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5596:4:3",
																									"nodeType": "YulLiteral",
																									"src": "5596:4:3",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5577:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "5577:3:3"
																							},
																							"nativeSrc": "5577:24:3",
																							"nodeType": "YulFunctionCall",
																							"src": "5577:24:3"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "5571:5:3",
																						"nodeType": "YulIdentifier",
																						"src": "5571:5:3"
																					},
																					"nativeSrc": "5571:31:3",
																					"nodeType": "YulFunctionCall",
																					"src": "5571:31:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5540:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "5540:6:3"
																			},
																			"nativeSrc": "5540:63:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5540:63:3"
																		},
																		"nativeSrc": "5540:63:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "5540:63:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "5485:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "5485:1:3"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5488:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "5488:6:3"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5482:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "5482:2:3"
																},
																"nativeSrc": "5482:13:3",
																"nodeType": "YulFunctionCall",
																"src": "5482:13:3"
															},
															"nativeSrc": "5474:139:3",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5496:21:3",
																"nodeType": "YulBlock",
																"src": "5496:21:3",
																"statements": [
																	{
																		"nativeSrc": "5498:17:3",
																		"nodeType": "YulAssignment",
																		"src": "5498:17:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "5507:1:3",
																					"nodeType": "YulIdentifier",
																					"src": "5507:1:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5510:4:3",
																					"nodeType": "YulLiteral",
																					"src": "5510:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5503:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "5503:3:3"
																			},
																			"nativeSrc": "5503:12:3",
																			"nodeType": "YulFunctionCall",
																			"src": "5503:12:3"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "5498:1:3",
																				"nodeType": "YulIdentifier",
																				"src": "5498:1:3"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5478:3:3",
																"nodeType": "YulBlock",
																"src": "5478:3:3",
																"statements": []
															},
															"src": "5474:139:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5637:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "5637:3:3"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "5642:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "5642:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5633:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "5633:3:3"
																				},
																				"nativeSrc": "5633:16:3",
																				"nodeType": "YulFunctionCall",
																				"src": "5633:16:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5651:4:3",
																				"nodeType": "YulLiteral",
																				"src": "5651:4:3",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5629:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5629:3:3"
																		},
																		"nativeSrc": "5629:27:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5629:27:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5658:1:3",
																		"nodeType": "YulLiteral",
																		"src": "5658:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5622:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "5622:6:3"
																},
																"nativeSrc": "5622:38:3",
																"nodeType": "YulFunctionCall",
																"src": "5622:38:3"
															},
															"nativeSrc": "5622:38:3",
															"nodeType": "YulExpressionStatement",
															"src": "5622:38:3"
														},
														{
															"nativeSrc": "5669:57:3",
															"nodeType": "YulAssignment",
															"src": "5669:57:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "5684:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "5684:3:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "5697:6:3",
																								"nodeType": "YulIdentifier",
																								"src": "5697:6:3"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5705:2:3",
																								"nodeType": "YulLiteral",
																								"src": "5705:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5693:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "5693:3:3"
																						},
																						"nativeSrc": "5693:15:3",
																						"nodeType": "YulFunctionCall",
																						"src": "5693:15:3"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5714:2:3",
																								"nodeType": "YulLiteral",
																								"src": "5714:2:3",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "5710:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "5710:3:3"
																						},
																						"nativeSrc": "5710:7:3",
																						"nodeType": "YulFunctionCall",
																						"src": "5710:7:3"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "5689:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "5689:3:3"
																				},
																				"nativeSrc": "5689:29:3",
																				"nodeType": "YulFunctionCall",
																				"src": "5689:29:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5680:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "5680:3:3"
																		},
																		"nativeSrc": "5680:39:3",
																		"nodeType": "YulFunctionCall",
																		"src": "5680:39:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5721:4:3",
																		"nodeType": "YulLiteral",
																		"src": "5721:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5676:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5676:3:3"
																},
																"nativeSrc": "5676:50:3",
																"nodeType": "YulFunctionCall",
																"src": "5676:50:3"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5669:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "5669:3:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "5332:400:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5359:5:3",
														"nodeType": "YulTypedName",
														"src": "5359:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5366:3:3",
														"nodeType": "YulTypedName",
														"src": "5366:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5374:3:3",
														"nodeType": "YulTypedName",
														"src": "5374:3:3",
														"type": ""
													}
												],
												"src": "5332:400:3"
											},
											{
												"body": {
													"nativeSrc": "6020:404:3",
													"nodeType": "YulBlock",
													"src": "6020:404:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6037:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6037:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6052:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "6052:6:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6068:3:3",
																								"nodeType": "YulLiteral",
																								"src": "6068:3:3",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6073:1:3",
																								"nodeType": "YulLiteral",
																								"src": "6073:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6064:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "6064:3:3"
																						},
																						"nativeSrc": "6064:11:3",
																						"nodeType": "YulFunctionCall",
																						"src": "6064:11:3"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6077:1:3",
																						"nodeType": "YulLiteral",
																						"src": "6077:1:3",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6060:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "6060:3:3"
																				},
																				"nativeSrc": "6060:19:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6060:19:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6048:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6048:3:3"
																		},
																		"nativeSrc": "6048:32:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6048:32:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6030:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6030:6:3"
																},
																"nativeSrc": "6030:51:3",
																"nodeType": "YulFunctionCall",
																"src": "6030:51:3"
															},
															"nativeSrc": "6030:51:3",
															"nodeType": "YulExpressionStatement",
															"src": "6030:51:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6101:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6101:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6112:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6112:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6097:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6097:3:3"
																		},
																		"nativeSrc": "6097:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6097:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6117:3:3",
																		"nodeType": "YulLiteral",
																		"src": "6117:3:3",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6090:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6090:6:3"
																},
																"nativeSrc": "6090:31:3",
																"nodeType": "YulFunctionCall",
																"src": "6090:31:3"
															},
															"nativeSrc": "6090:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "6090:31:3"
														},
														{
															"nativeSrc": "6130:54:3",
															"nodeType": "YulAssignment",
															"src": "6130:54:3",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6156:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "6156:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6168:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6168:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6179:3:3",
																				"nodeType": "YulLiteral",
																				"src": "6179:3:3",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6164:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6164:3:3"
																		},
																		"nativeSrc": "6164:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6164:19:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "6138:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "6138:17:3"
																},
																"nativeSrc": "6138:46:3",
																"nodeType": "YulFunctionCall",
																"src": "6138:46:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6130:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6130:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6204:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6204:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6215:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6215:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6200:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6200:3:3"
																		},
																		"nativeSrc": "6200:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6200:18:3"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "6220:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "6220:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6193:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6193:6:3"
																},
																"nativeSrc": "6193:34:3",
																"nodeType": "YulFunctionCall",
																"src": "6193:34:3"
															},
															"nativeSrc": "6193:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "6193:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6247:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6247:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6258:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6258:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6243:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6243:3:3"
																		},
																		"nativeSrc": "6243:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6243:18:3"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "6263:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "6263:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6236:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6236:6:3"
																},
																"nativeSrc": "6236:34:3",
																"nodeType": "YulFunctionCall",
																"src": "6236:34:3"
															},
															"nativeSrc": "6236:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "6236:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6290:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6290:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6301:3:3",
																				"nodeType": "YulLiteral",
																				"src": "6301:3:3",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6286:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6286:3:3"
																		},
																		"nativeSrc": "6286:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6286:19:3"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "6307:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "6307:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6279:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6279:6:3"
																},
																"nativeSrc": "6279:35:3",
																"nodeType": "YulFunctionCall",
																"src": "6279:35:3"
															},
															"nativeSrc": "6279:35:3",
															"nodeType": "YulExpressionStatement",
															"src": "6279:35:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6334:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6334:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6345:3:3",
																				"nodeType": "YulLiteral",
																				"src": "6345:3:3",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6330:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6330:3:3"
																		},
																		"nativeSrc": "6330:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6330:19:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value5",
																						"nativeSrc": "6365:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "6365:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6358:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "6358:6:3"
																				},
																				"nativeSrc": "6358:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "6358:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6351:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "6351:6:3"
																		},
																		"nativeSrc": "6351:22:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6351:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6323:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6323:6:3"
																},
																"nativeSrc": "6323:51:3",
																"nodeType": "YulFunctionCall",
																"src": "6323:51:3"
															},
															"nativeSrc": "6323:51:3",
															"nodeType": "YulExpressionStatement",
															"src": "6323:51:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6394:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6394:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6405:3:3",
																				"nodeType": "YulLiteral",
																				"src": "6405:3:3",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6390:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6390:3:3"
																		},
																		"nativeSrc": "6390:19:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6390:19:3"
																	},
																	{
																		"name": "value6",
																		"nativeSrc": "6411:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "6411:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6383:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6383:6:3"
																},
																"nativeSrc": "6383:35:3",
																"nodeType": "YulFunctionCall",
																"src": "6383:35:3"
															},
															"nativeSrc": "6383:35:3",
															"nodeType": "YulExpressionStatement",
															"src": "6383:35:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed",
												"nativeSrc": "5737:687:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5941:9:3",
														"nodeType": "YulTypedName",
														"src": "5941:9:3",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "5952:6:3",
														"nodeType": "YulTypedName",
														"src": "5952:6:3",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "5960:6:3",
														"nodeType": "YulTypedName",
														"src": "5960:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5968:6:3",
														"nodeType": "YulTypedName",
														"src": "5968:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5976:6:3",
														"nodeType": "YulTypedName",
														"src": "5976:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5984:6:3",
														"nodeType": "YulTypedName",
														"src": "5984:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5992:6:3",
														"nodeType": "YulTypedName",
														"src": "5992:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6000:6:3",
														"nodeType": "YulTypedName",
														"src": "6000:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6011:4:3",
														"nodeType": "YulTypedName",
														"src": "6011:4:3",
														"type": ""
													}
												],
												"src": "5737:687:3"
											},
											{
												"body": {
													"nativeSrc": "6603:166:3",
													"nodeType": "YulBlock",
													"src": "6603:166:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6620:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6620:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6631:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6631:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6613:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6613:6:3"
																},
																"nativeSrc": "6613:21:3",
																"nodeType": "YulFunctionCall",
																"src": "6613:21:3"
															},
															"nativeSrc": "6613:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "6613:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6654:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6654:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6665:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6665:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6650:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6650:3:3"
																		},
																		"nativeSrc": "6650:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6650:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6670:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6670:2:3",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6643:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6643:6:3"
																},
																"nativeSrc": "6643:30:3",
																"nodeType": "YulFunctionCall",
																"src": "6643:30:3"
															},
															"nativeSrc": "6643:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "6643:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6693:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "6693:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6704:2:3",
																				"nodeType": "YulLiteral",
																				"src": "6704:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6689:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6689:3:3"
																		},
																		"nativeSrc": "6689:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6689:18:3"
																	},
																	{
																		"hexValue": "496e76616c6964206173736574204944",
																		"kind": "string",
																		"nativeSrc": "6709:18:3",
																		"nodeType": "YulLiteral",
																		"src": "6709:18:3",
																		"type": "",
																		"value": "Invalid asset ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6682:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6682:6:3"
																},
																"nativeSrc": "6682:46:3",
																"nodeType": "YulFunctionCall",
																"src": "6682:46:3"
															},
															"nativeSrc": "6682:46:3",
															"nodeType": "YulExpressionStatement",
															"src": "6682:46:3"
														},
														{
															"nativeSrc": "6737:26:3",
															"nodeType": "YulAssignment",
															"src": "6737:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6749:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "6749:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6760:2:3",
																		"nodeType": "YulLiteral",
																		"src": "6760:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6745:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "6745:3:3"
																},
																"nativeSrc": "6745:18:3",
																"nodeType": "YulFunctionCall",
																"src": "6745:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6737:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "6737:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2f302c4a317eeeaa66ff142a8019be7f7a17e4f751a3204fdf93094743ebab94__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6429:340:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6580:9:3",
														"nodeType": "YulTypedName",
														"src": "6580:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6594:4:3",
														"nodeType": "YulTypedName",
														"src": "6594:4:3",
														"type": ""
													}
												],
												"src": "6429:340:3"
											},
											{
												"body": {
													"nativeSrc": "6806:95:3",
													"nodeType": "YulBlock",
													"src": "6806:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6823:1:3",
																		"nodeType": "YulLiteral",
																		"src": "6823:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6830:3:3",
																				"nodeType": "YulLiteral",
																				"src": "6830:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6835:10:3",
																				"nodeType": "YulLiteral",
																				"src": "6835:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6826:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "6826:3:3"
																		},
																		"nativeSrc": "6826:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "6826:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6816:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6816:6:3"
																},
																"nativeSrc": "6816:31:3",
																"nodeType": "YulFunctionCall",
																"src": "6816:31:3"
															},
															"nativeSrc": "6816:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "6816:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6863:1:3",
																		"nodeType": "YulLiteral",
																		"src": "6863:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6866:4:3",
																		"nodeType": "YulLiteral",
																		"src": "6866:4:3",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6856:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6856:6:3"
																},
																"nativeSrc": "6856:15:3",
																"nodeType": "YulFunctionCall",
																"src": "6856:15:3"
															},
															"nativeSrc": "6856:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "6856:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6887:1:3",
																		"nodeType": "YulLiteral",
																		"src": "6887:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6890:4:3",
																		"nodeType": "YulLiteral",
																		"src": "6890:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6880:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "6880:6:3"
																},
																"nativeSrc": "6880:15:3",
																"nodeType": "YulFunctionCall",
																"src": "6880:15:3"
															},
															"nativeSrc": "6880:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "6880:15:3"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "6774:127:3",
												"nodeType": "YulFunctionDefinition",
												"src": "6774:127:3"
											},
											{
												"body": {
													"nativeSrc": "7080:162:3",
													"nodeType": "YulBlock",
													"src": "7080:162:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7097:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "7097:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7108:2:3",
																		"nodeType": "YulLiteral",
																		"src": "7108:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7090:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7090:6:3"
																},
																"nativeSrc": "7090:21:3",
																"nodeType": "YulFunctionCall",
																"src": "7090:21:3"
															},
															"nativeSrc": "7090:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "7090:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7131:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7131:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7142:2:3",
																				"nodeType": "YulLiteral",
																				"src": "7142:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7127:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7127:3:3"
																		},
																		"nativeSrc": "7127:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7127:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7147:2:3",
																		"nodeType": "YulLiteral",
																		"src": "7147:2:3",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7120:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7120:6:3"
																},
																"nativeSrc": "7120:30:3",
																"nodeType": "YulFunctionCall",
																"src": "7120:30:3"
															},
															"nativeSrc": "7120:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "7120:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7170:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7170:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7181:2:3",
																				"nodeType": "YulLiteral",
																				"src": "7181:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7166:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7166:3:3"
																		},
																		"nativeSrc": "7166:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7166:18:3"
																	},
																	{
																		"hexValue": "556e617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "7186:14:3",
																		"nodeType": "YulLiteral",
																		"src": "7186:14:3",
																		"type": "",
																		"value": "Unauthorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7159:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:3"
																},
																"nativeSrc": "7159:42:3",
																"nodeType": "YulFunctionCall",
																"src": "7159:42:3"
															},
															"nativeSrc": "7159:42:3",
															"nodeType": "YulExpressionStatement",
															"src": "7159:42:3"
														},
														{
															"nativeSrc": "7210:26:3",
															"nodeType": "YulAssignment",
															"src": "7210:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7222:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "7222:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7233:2:3",
																		"nodeType": "YulLiteral",
																		"src": "7233:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7218:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7218:3:3"
																},
																"nativeSrc": "7218:18:3",
																"nodeType": "YulFunctionCall",
																"src": "7218:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7210:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "7210:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6906:336:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7057:9:3",
														"nodeType": "YulTypedName",
														"src": "7057:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7071:4:3",
														"nodeType": "YulTypedName",
														"src": "7071:4:3",
														"type": ""
													}
												],
												"src": "6906:336:3"
											},
											{
												"body": {
													"nativeSrc": "7421:172:3",
													"nodeType": "YulBlock",
													"src": "7421:172:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7438:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "7438:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7449:2:3",
																		"nodeType": "YulLiteral",
																		"src": "7449:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7431:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7431:6:3"
																},
																"nativeSrc": "7431:21:3",
																"nodeType": "YulFunctionCall",
																"src": "7431:21:3"
															},
															"nativeSrc": "7431:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "7431:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7472:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7472:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7483:2:3",
																				"nodeType": "YulLiteral",
																				"src": "7483:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7468:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7468:3:3"
																		},
																		"nativeSrc": "7468:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7468:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7488:2:3",
																		"nodeType": "YulLiteral",
																		"src": "7488:2:3",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7461:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7461:6:3"
																},
																"nativeSrc": "7461:30:3",
																"nodeType": "YulFunctionCall",
																"src": "7461:30:3"
															},
															"nativeSrc": "7461:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "7461:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7511:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7511:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7522:2:3",
																				"nodeType": "YulLiteral",
																				"src": "7522:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7507:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7507:3:3"
																		},
																		"nativeSrc": "7507:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7507:18:3"
																	},
																	{
																		"hexValue": "42696464696e6720616c726561647920636c6f736564",
																		"kind": "string",
																		"nativeSrc": "7527:24:3",
																		"nodeType": "YulLiteral",
																		"src": "7527:24:3",
																		"type": "",
																		"value": "Bidding already closed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7500:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7500:6:3"
																},
																"nativeSrc": "7500:52:3",
																"nodeType": "YulFunctionCall",
																"src": "7500:52:3"
															},
															"nativeSrc": "7500:52:3",
															"nodeType": "YulExpressionStatement",
															"src": "7500:52:3"
														},
														{
															"nativeSrc": "7561:26:3",
															"nodeType": "YulAssignment",
															"src": "7561:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7573:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "7573:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7584:2:3",
																		"nodeType": "YulLiteral",
																		"src": "7584:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7569:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7569:3:3"
																},
																"nativeSrc": "7569:18:3",
																"nodeType": "YulFunctionCall",
																"src": "7569:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7561:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "7561:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9e942198a9acdea3654333ae329526f4a71c67a256810bd427f0a4d17a278f95__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7247:346:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7398:9:3",
														"nodeType": "YulTypedName",
														"src": "7398:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7412:4:3",
														"nodeType": "YulTypedName",
														"src": "7412:4:3",
														"type": ""
													}
												],
												"src": "7247:346:3"
											},
											{
												"body": {
													"nativeSrc": "7721:135:3",
													"nodeType": "YulBlock",
													"src": "7721:135:3",
													"statements": [
														{
															"nativeSrc": "7731:26:3",
															"nodeType": "YulAssignment",
															"src": "7731:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7743:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "7743:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7754:2:3",
																		"nodeType": "YulLiteral",
																		"src": "7754:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7739:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "7739:3:3"
																},
																"nativeSrc": "7739:18:3",
																"nodeType": "YulFunctionCall",
																"src": "7739:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7731:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "7731:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7773:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "7773:9:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "7798:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "7798:6:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7791:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "7791:6:3"
																				},
																				"nativeSrc": "7791:14:3",
																				"nodeType": "YulFunctionCall",
																				"src": "7791:14:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "7784:6:3",
																			"nodeType": "YulIdentifier",
																			"src": "7784:6:3"
																		},
																		"nativeSrc": "7784:22:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7784:22:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7766:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7766:6:3"
																},
																"nativeSrc": "7766:41:3",
																"nodeType": "YulFunctionCall",
																"src": "7766:41:3"
															},
															"nativeSrc": "7766:41:3",
															"nodeType": "YulExpressionStatement",
															"src": "7766:41:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7827:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "7827:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7838:2:3",
																				"nodeType": "YulLiteral",
																				"src": "7838:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7823:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "7823:3:3"
																		},
																		"nativeSrc": "7823:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "7823:18:3"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7843:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "7843:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7816:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "7816:6:3"
																},
																"nativeSrc": "7816:34:3",
																"nodeType": "YulFunctionCall",
																"src": "7816:34:3"
															},
															"nativeSrc": "7816:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "7816:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed",
												"nativeSrc": "7598:258:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7682:9:3",
														"nodeType": "YulTypedName",
														"src": "7682:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7693:6:3",
														"nodeType": "YulTypedName",
														"src": "7693:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7701:6:3",
														"nodeType": "YulTypedName",
														"src": "7701:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7712:4:3",
														"nodeType": "YulTypedName",
														"src": "7712:4:3",
														"type": ""
													}
												],
												"src": "7598:258:3"
											},
											{
												"body": {
													"nativeSrc": "8035:169:3",
													"nodeType": "YulBlock",
													"src": "8035:169:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8052:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "8052:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8063:2:3",
																		"nodeType": "YulLiteral",
																		"src": "8063:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8045:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8045:6:3"
																},
																"nativeSrc": "8045:21:3",
																"nodeType": "YulFunctionCall",
																"src": "8045:21:3"
															},
															"nativeSrc": "8045:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "8045:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8086:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8086:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8097:2:3",
																				"nodeType": "YulLiteral",
																				"src": "8097:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8082:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8082:3:3"
																		},
																		"nativeSrc": "8082:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8082:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8102:2:3",
																		"nodeType": "YulLiteral",
																		"src": "8102:2:3",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8075:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8075:6:3"
																},
																"nativeSrc": "8075:30:3",
																"nodeType": "YulFunctionCall",
																"src": "8075:30:3"
															},
															"nativeSrc": "8075:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "8075:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8125:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8125:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8136:2:3",
																				"nodeType": "YulLiteral",
																				"src": "8136:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8121:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8121:3:3"
																		},
																		"nativeSrc": "8121:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8121:18:3"
																	},
																	{
																		"hexValue": "496e76616c696420736861726520636f756e74",
																		"kind": "string",
																		"nativeSrc": "8141:21:3",
																		"nodeType": "YulLiteral",
																		"src": "8141:21:3",
																		"type": "",
																		"value": "Invalid share count"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8114:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8114:6:3"
																},
																"nativeSrc": "8114:49:3",
																"nodeType": "YulFunctionCall",
																"src": "8114:49:3"
															},
															"nativeSrc": "8114:49:3",
															"nodeType": "YulExpressionStatement",
															"src": "8114:49:3"
														},
														{
															"nativeSrc": "8172:26:3",
															"nodeType": "YulAssignment",
															"src": "8172:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8184:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "8184:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8195:2:3",
																		"nodeType": "YulLiteral",
																		"src": "8195:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8180:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8180:3:3"
																},
																"nativeSrc": "8180:18:3",
																"nodeType": "YulFunctionCall",
																"src": "8180:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8172:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "8172:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_de457caaba2cd98cb8dedbc6d33667526c4ecb91f62ade29eeaee1391f7fa60f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7861:343:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8012:9:3",
														"nodeType": "YulTypedName",
														"src": "8012:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8026:4:3",
														"nodeType": "YulTypedName",
														"src": "8026:4:3",
														"type": ""
													}
												],
												"src": "7861:343:3"
											},
											{
												"body": {
													"nativeSrc": "8383:181:3",
													"nodeType": "YulBlock",
													"src": "8383:181:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8400:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "8400:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8411:2:3",
																		"nodeType": "YulLiteral",
																		"src": "8411:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8393:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8393:6:3"
																},
																"nativeSrc": "8393:21:3",
																"nodeType": "YulFunctionCall",
																"src": "8393:21:3"
															},
															"nativeSrc": "8393:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "8393:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8434:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8434:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8445:2:3",
																				"nodeType": "YulLiteral",
																				"src": "8445:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8430:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8430:3:3"
																		},
																		"nativeSrc": "8430:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8430:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8450:2:3",
																		"nodeType": "YulLiteral",
																		"src": "8450:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8423:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8423:6:3"
																},
																"nativeSrc": "8423:30:3",
																"nodeType": "YulFunctionCall",
																"src": "8423:30:3"
															},
															"nativeSrc": "8423:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "8423:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8473:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8473:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8484:2:3",
																				"nodeType": "YulLiteral",
																				"src": "8484:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8469:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8469:3:3"
																		},
																		"nativeSrc": "8469:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8469:18:3"
																	},
																	{
																		"hexValue": "496e76616c6964206d696e696d756d20707269636520706572207368617265",
																		"kind": "string",
																		"nativeSrc": "8489:33:3",
																		"nodeType": "YulLiteral",
																		"src": "8489:33:3",
																		"type": "",
																		"value": "Invalid minimum price per share"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8462:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8462:6:3"
																},
																"nativeSrc": "8462:61:3",
																"nodeType": "YulFunctionCall",
																"src": "8462:61:3"
															},
															"nativeSrc": "8462:61:3",
															"nodeType": "YulExpressionStatement",
															"src": "8462:61:3"
														},
														{
															"nativeSrc": "8532:26:3",
															"nodeType": "YulAssignment",
															"src": "8532:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8544:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "8544:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8555:2:3",
																		"nodeType": "YulLiteral",
																		"src": "8555:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8540:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8540:3:3"
																},
																"nativeSrc": "8540:18:3",
																"nodeType": "YulFunctionCall",
																"src": "8540:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8532:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "8532:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8c1cad1af2254206997ae1c3d22293c820984c676cba92a0d2942294ac246808__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8209:355:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8360:9:3",
														"nodeType": "YulTypedName",
														"src": "8360:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8374:4:3",
														"nodeType": "YulTypedName",
														"src": "8374:4:3",
														"type": ""
													}
												],
												"src": "8209:355:3"
											},
											{
												"body": {
													"nativeSrc": "8743:177:3",
													"nodeType": "YulBlock",
													"src": "8743:177:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8760:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "8760:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8771:2:3",
																		"nodeType": "YulLiteral",
																		"src": "8771:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8753:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8753:6:3"
																},
																"nativeSrc": "8753:21:3",
																"nodeType": "YulFunctionCall",
																"src": "8753:21:3"
															},
															"nativeSrc": "8753:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "8753:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8794:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8794:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8805:2:3",
																				"nodeType": "YulLiteral",
																				"src": "8805:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8790:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8790:3:3"
																		},
																		"nativeSrc": "8790:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8790:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8810:2:3",
																		"nodeType": "YulLiteral",
																		"src": "8810:2:3",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8783:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8783:6:3"
																},
																"nativeSrc": "8783:30:3",
																"nodeType": "YulFunctionCall",
																"src": "8783:30:3"
															},
															"nativeSrc": "8783:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "8783:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8833:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "8833:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8844:2:3",
																				"nodeType": "YulLiteral",
																				"src": "8844:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8829:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "8829:3:3"
																		},
																		"nativeSrc": "8829:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "8829:18:3"
																	},
																	{
																		"hexValue": "496e76616c6964206d696e696d756d20746f74616c207072696365",
																		"kind": "string",
																		"nativeSrc": "8849:29:3",
																		"nodeType": "YulLiteral",
																		"src": "8849:29:3",
																		"type": "",
																		"value": "Invalid minimum total price"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8822:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "8822:6:3"
																},
																"nativeSrc": "8822:57:3",
																"nodeType": "YulFunctionCall",
																"src": "8822:57:3"
															},
															"nativeSrc": "8822:57:3",
															"nodeType": "YulExpressionStatement",
															"src": "8822:57:3"
														},
														{
															"nativeSrc": "8888:26:3",
															"nodeType": "YulAssignment",
															"src": "8888:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8900:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "8900:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8911:2:3",
																		"nodeType": "YulLiteral",
																		"src": "8911:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8896:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "8896:3:3"
																},
																"nativeSrc": "8896:18:3",
																"nodeType": "YulFunctionCall",
																"src": "8896:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8888:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "8888:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2660f134c570050d07081949ab61b8e2ef1ea86f2b1188677e00a97048789cae__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8569:351:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8720:9:3",
														"nodeType": "YulTypedName",
														"src": "8720:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8734:4:3",
														"nodeType": "YulTypedName",
														"src": "8734:4:3",
														"type": ""
													}
												],
												"src": "8569:351:3"
											},
											{
												"body": {
													"nativeSrc": "9099:170:3",
													"nodeType": "YulBlock",
													"src": "9099:170:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9116:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "9116:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9127:2:3",
																		"nodeType": "YulLiteral",
																		"src": "9127:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9109:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "9109:6:3"
																},
																"nativeSrc": "9109:21:3",
																"nodeType": "YulFunctionCall",
																"src": "9109:21:3"
															},
															"nativeSrc": "9109:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "9109:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9150:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "9150:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9161:2:3",
																				"nodeType": "YulLiteral",
																				"src": "9161:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9146:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "9146:3:3"
																		},
																		"nativeSrc": "9146:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9146:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9166:2:3",
																		"nodeType": "YulLiteral",
																		"src": "9166:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9139:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "9139:6:3"
																},
																"nativeSrc": "9139:30:3",
																"nodeType": "YulFunctionCall",
																"src": "9139:30:3"
															},
															"nativeSrc": "9139:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "9139:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9189:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "9189:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9200:2:3",
																				"nodeType": "YulLiteral",
																				"src": "9200:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9185:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:3"
																		},
																		"nativeSrc": "9185:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9185:18:3"
																	},
																	{
																		"hexValue": "4e616d652063616e6e6f7420626520656d707479",
																		"kind": "string",
																		"nativeSrc": "9205:22:3",
																		"nodeType": "YulLiteral",
																		"src": "9205:22:3",
																		"type": "",
																		"value": "Name cannot be empty"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9178:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "9178:6:3"
																},
																"nativeSrc": "9178:50:3",
																"nodeType": "YulFunctionCall",
																"src": "9178:50:3"
															},
															"nativeSrc": "9178:50:3",
															"nodeType": "YulExpressionStatement",
															"src": "9178:50:3"
														},
														{
															"nativeSrc": "9237:26:3",
															"nodeType": "YulAssignment",
															"src": "9237:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9249:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "9249:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9260:2:3",
																		"nodeType": "YulLiteral",
																		"src": "9260:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9245:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "9245:3:3"
																},
																"nativeSrc": "9245:18:3",
																"nodeType": "YulFunctionCall",
																"src": "9245:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9237:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "9237:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8925:344:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9076:9:3",
														"nodeType": "YulTypedName",
														"src": "9076:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9090:4:3",
														"nodeType": "YulTypedName",
														"src": "9090:4:3",
														"type": ""
													}
												],
												"src": "8925:344:3"
											},
											{
												"body": {
													"nativeSrc": "9306:95:3",
													"nodeType": "YulBlock",
													"src": "9306:95:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9323:1:3",
																		"nodeType": "YulLiteral",
																		"src": "9323:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9330:3:3",
																				"nodeType": "YulLiteral",
																				"src": "9330:3:3",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9335:10:3",
																				"nodeType": "YulLiteral",
																				"src": "9335:10:3",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9326:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "9326:3:3"
																		},
																		"nativeSrc": "9326:20:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9326:20:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9316:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "9316:6:3"
																},
																"nativeSrc": "9316:31:3",
																"nodeType": "YulFunctionCall",
																"src": "9316:31:3"
															},
															"nativeSrc": "9316:31:3",
															"nodeType": "YulExpressionStatement",
															"src": "9316:31:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9363:1:3",
																		"nodeType": "YulLiteral",
																		"src": "9363:1:3",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9366:4:3",
																		"nodeType": "YulLiteral",
																		"src": "9366:4:3",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9356:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "9356:6:3"
																},
																"nativeSrc": "9356:15:3",
																"nodeType": "YulFunctionCall",
																"src": "9356:15:3"
															},
															"nativeSrc": "9356:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "9356:15:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9387:1:3",
																		"nodeType": "YulLiteral",
																		"src": "9387:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9390:4:3",
																		"nodeType": "YulLiteral",
																		"src": "9390:4:3",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9380:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "9380:6:3"
																},
																"nativeSrc": "9380:15:3",
																"nodeType": "YulFunctionCall",
																"src": "9380:15:3"
															},
															"nativeSrc": "9380:15:3",
															"nodeType": "YulExpressionStatement",
															"src": "9380:15:3"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9274:127:3",
												"nodeType": "YulFunctionDefinition",
												"src": "9274:127:3"
											},
											{
												"body": {
													"nativeSrc": "9453:88:3",
													"nodeType": "YulBlock",
													"src": "9453:88:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "9484:22:3",
																"nodeType": "YulBlock",
																"src": "9484:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9486:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "9486:16:3"
																			},
																			"nativeSrc": "9486:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "9486:18:3"
																		},
																		"nativeSrc": "9486:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "9486:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9469:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "9469:5:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9480:1:3",
																				"nodeType": "YulLiteral",
																				"src": "9480:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "9476:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "9476:3:3"
																		},
																		"nativeSrc": "9476:6:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9476:6:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9466:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "9466:2:3"
																},
																"nativeSrc": "9466:17:3",
																"nodeType": "YulFunctionCall",
																"src": "9466:17:3"
															},
															"nativeSrc": "9463:43:3",
															"nodeType": "YulIf",
															"src": "9463:43:3"
														},
														{
															"nativeSrc": "9515:20:3",
															"nodeType": "YulAssignment",
															"src": "9515:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9526:5:3",
																		"nodeType": "YulIdentifier",
																		"src": "9526:5:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9533:1:3",
																		"nodeType": "YulLiteral",
																		"src": "9533:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9522:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "9522:3:3"
																},
																"nativeSrc": "9522:13:3",
																"nodeType": "YulFunctionCall",
																"src": "9522:13:3"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9515:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "9515:3:3"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "9406:135:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9435:5:3",
														"nodeType": "YulTypedName",
														"src": "9435:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9445:3:3",
														"nodeType": "YulTypedName",
														"src": "9445:3:3",
														"type": ""
													}
												],
												"src": "9406:135:3"
											},
											{
												"body": {
													"nativeSrc": "9601:325:3",
													"nodeType": "YulBlock",
													"src": "9601:325:3",
													"statements": [
														{
															"nativeSrc": "9611:22:3",
															"nodeType": "YulAssignment",
															"src": "9611:22:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9625:1:3",
																		"nodeType": "YulLiteral",
																		"src": "9625:1:3",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "9628:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "9628:4:3"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "9621:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "9621:3:3"
																},
																"nativeSrc": "9621:12:3",
																"nodeType": "YulFunctionCall",
																"src": "9621:12:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9611:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "9611:6:3"
																}
															]
														},
														{
															"nativeSrc": "9642:38:3",
															"nodeType": "YulVariableDeclaration",
															"src": "9642:38:3",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9672:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "9672:4:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9678:1:3",
																		"nodeType": "YulLiteral",
																		"src": "9678:1:3",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9668:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "9668:3:3"
																},
																"nativeSrc": "9668:12:3",
																"nodeType": "YulFunctionCall",
																"src": "9668:12:3"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9646:18:3",
																	"nodeType": "YulTypedName",
																	"src": "9646:18:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9719:31:3",
																"nodeType": "YulBlock",
																"src": "9719:31:3",
																"statements": [
																	{
																		"nativeSrc": "9721:27:3",
																		"nodeType": "YulAssignment",
																		"src": "9721:27:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9735:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "9735:6:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9743:4:3",
																					"nodeType": "YulLiteral",
																					"src": "9743:4:3",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9731:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "9731:3:3"
																			},
																			"nativeSrc": "9731:17:3",
																			"nodeType": "YulFunctionCall",
																			"src": "9731:17:3"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9721:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "9721:6:3"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9699:18:3",
																		"nodeType": "YulIdentifier",
																		"src": "9699:18:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9692:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "9692:6:3"
																},
																"nativeSrc": "9692:26:3",
																"nodeType": "YulFunctionCall",
																"src": "9692:26:3"
															},
															"nativeSrc": "9689:61:3",
															"nodeType": "YulIf",
															"src": "9689:61:3"
														},
														{
															"body": {
																"nativeSrc": "9809:111:3",
																"nodeType": "YulBlock",
																"src": "9809:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9830:1:3",
																					"nodeType": "YulLiteral",
																					"src": "9830:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9837:3:3",
																							"nodeType": "YulLiteral",
																							"src": "9837:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9842:10:3",
																							"nodeType": "YulLiteral",
																							"src": "9842:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "9833:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "9833:3:3"
																					},
																					"nativeSrc": "9833:20:3",
																					"nodeType": "YulFunctionCall",
																					"src": "9833:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9823:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "9823:6:3"
																			},
																			"nativeSrc": "9823:31:3",
																			"nodeType": "YulFunctionCall",
																			"src": "9823:31:3"
																		},
																		"nativeSrc": "9823:31:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "9823:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9874:1:3",
																					"nodeType": "YulLiteral",
																					"src": "9874:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9877:4:3",
																					"nodeType": "YulLiteral",
																					"src": "9877:4:3",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9867:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "9867:6:3"
																			},
																			"nativeSrc": "9867:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "9867:15:3"
																		},
																		"nativeSrc": "9867:15:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "9867:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9902:1:3",
																					"nodeType": "YulLiteral",
																					"src": "9902:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9905:4:3",
																					"nodeType": "YulLiteral",
																					"src": "9905:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9895:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "9895:6:3"
																			},
																			"nativeSrc": "9895:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "9895:15:3"
																		},
																		"nativeSrc": "9895:15:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "9895:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9765:18:3",
																		"nodeType": "YulIdentifier",
																		"src": "9765:18:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9788:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "9788:6:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9796:2:3",
																				"nodeType": "YulLiteral",
																				"src": "9796:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9785:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "9785:2:3"
																		},
																		"nativeSrc": "9785:14:3",
																		"nodeType": "YulFunctionCall",
																		"src": "9785:14:3"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9762:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "9762:2:3"
																},
																"nativeSrc": "9762:38:3",
																"nodeType": "YulFunctionCall",
																"src": "9762:38:3"
															},
															"nativeSrc": "9759:161:3",
															"nodeType": "YulIf",
															"src": "9759:161:3"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9546:380:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9581:4:3",
														"nodeType": "YulTypedName",
														"src": "9581:4:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9590:6:3",
														"nodeType": "YulTypedName",
														"src": "9590:6:3",
														"type": ""
													}
												],
												"src": "9546:380:3"
											},
											{
												"body": {
													"nativeSrc": "9987:65:3",
													"nodeType": "YulBlock",
													"src": "9987:65:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10004:1:3",
																		"nodeType": "YulLiteral",
																		"src": "10004:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "10007:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "10007:3:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9997:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "9997:6:3"
																},
																"nativeSrc": "9997:14:3",
																"nodeType": "YulFunctionCall",
																"src": "9997:14:3"
															},
															"nativeSrc": "9997:14:3",
															"nodeType": "YulExpressionStatement",
															"src": "9997:14:3"
														},
														{
															"nativeSrc": "10020:26:3",
															"nodeType": "YulAssignment",
															"src": "10020:26:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10038:1:3",
																		"nodeType": "YulLiteral",
																		"src": "10038:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10041:4:3",
																		"nodeType": "YulLiteral",
																		"src": "10041:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "10028:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "10028:9:3"
																},
																"nativeSrc": "10028:18:3",
																"nodeType": "YulFunctionCall",
																"src": "10028:18:3"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "10020:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "10020:4:3"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "9931:121:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9970:3:3",
														"nodeType": "YulTypedName",
														"src": "9970:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "9978:4:3",
														"nodeType": "YulTypedName",
														"src": "9978:4:3",
														"type": ""
													}
												],
												"src": "9931:121:3"
											},
											{
												"body": {
													"nativeSrc": "10138:437:3",
													"nodeType": "YulBlock",
													"src": "10138:437:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "10171:398:3",
																"nodeType": "YulBlock",
																"src": "10171:398:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10192:1:3",
																					"nodeType": "YulLiteral",
																					"src": "10192:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "10195:5:3",
																					"nodeType": "YulIdentifier",
																					"src": "10195:5:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10185:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "10185:6:3"
																			},
																			"nativeSrc": "10185:16:3",
																			"nodeType": "YulFunctionCall",
																			"src": "10185:16:3"
																		},
																		"nativeSrc": "10185:16:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "10185:16:3"
																	},
																	{
																		"nativeSrc": "10214:30:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10214:30:3",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10236:1:3",
																					"nodeType": "YulLiteral",
																					"src": "10236:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10239:4:3",
																					"nodeType": "YulLiteral",
																					"src": "10239:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "10226:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "10226:9:3"
																			},
																			"nativeSrc": "10226:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "10226:18:3"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "10218:4:3",
																				"nodeType": "YulTypedName",
																				"src": "10218:4:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "10257:57:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10257:57:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "10280:4:3",
																					"nodeType": "YulIdentifier",
																					"src": "10280:4:3"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10290:1:3",
																							"nodeType": "YulLiteral",
																							"src": "10290:1:3",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "10297:10:3",
																									"nodeType": "YulIdentifier",
																									"src": "10297:10:3"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "10309:2:3",
																									"nodeType": "YulLiteral",
																									"src": "10309:2:3",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "10293:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "10293:3:3"
																							},
																							"nativeSrc": "10293:19:3",
																							"nodeType": "YulFunctionCall",
																							"src": "10293:19:3"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "10286:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "10286:3:3"
																					},
																					"nativeSrc": "10286:27:3",
																					"nodeType": "YulFunctionCall",
																					"src": "10286:27:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10276:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "10276:3:3"
																			},
																			"nativeSrc": "10276:38:3",
																			"nodeType": "YulFunctionCall",
																			"src": "10276:38:3"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "10261:11:3",
																				"nodeType": "YulTypedName",
																				"src": "10261:11:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "10351:23:3",
																			"nodeType": "YulBlock",
																			"src": "10351:23:3",
																			"statements": [
																				{
																					"nativeSrc": "10353:19:3",
																					"nodeType": "YulAssignment",
																					"src": "10353:19:3",
																					"value": {
																						"name": "data",
																						"nativeSrc": "10368:4:3",
																						"nodeType": "YulIdentifier",
																						"src": "10368:4:3"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "10353:11:3",
																							"nodeType": "YulIdentifier",
																							"src": "10353:11:3"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "10333:10:3",
																					"nodeType": "YulIdentifier",
																					"src": "10333:10:3"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10345:4:3",
																					"nodeType": "YulLiteral",
																					"src": "10345:4:3",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "10330:2:3",
																				"nodeType": "YulIdentifier",
																				"src": "10330:2:3"
																			},
																			"nativeSrc": "10330:20:3",
																			"nodeType": "YulFunctionCall",
																			"src": "10330:20:3"
																		},
																		"nativeSrc": "10327:47:3",
																		"nodeType": "YulIf",
																		"src": "10327:47:3"
																	},
																	{
																		"nativeSrc": "10387:41:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10387:41:3",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "10401:4:3",
																					"nodeType": "YulIdentifier",
																					"src": "10401:4:3"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10411:1:3",
																							"nodeType": "YulLiteral",
																							"src": "10411:1:3",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "10418:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "10418:3:3"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "10423:2:3",
																									"nodeType": "YulLiteral",
																									"src": "10423:2:3",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "10414:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "10414:3:3"
																							},
																							"nativeSrc": "10414:12:3",
																							"nodeType": "YulFunctionCall",
																							"src": "10414:12:3"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "10407:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "10407:3:3"
																					},
																					"nativeSrc": "10407:20:3",
																					"nodeType": "YulFunctionCall",
																					"src": "10407:20:3"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10397:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "10397:3:3"
																			},
																			"nativeSrc": "10397:31:3",
																			"nodeType": "YulFunctionCall",
																			"src": "10397:31:3"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "10391:2:3",
																				"nodeType": "YulTypedName",
																				"src": "10391:2:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "10441:24:3",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10441:24:3",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "10454:11:3",
																			"nodeType": "YulIdentifier",
																			"src": "10454:11:3"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "10445:5:3",
																				"nodeType": "YulTypedName",
																				"src": "10445:5:3",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "10539:20:3",
																			"nodeType": "YulBlock",
																			"src": "10539:20:3",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "10548:5:3",
																								"nodeType": "YulIdentifier",
																								"src": "10548:5:3"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10555:1:3",
																								"nodeType": "YulLiteral",
																								"src": "10555:1:3",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "10541:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "10541:6:3"
																						},
																						"nativeSrc": "10541:16:3",
																						"nodeType": "YulFunctionCall",
																						"src": "10541:16:3"
																					},
																					"nativeSrc": "10541:16:3",
																					"nodeType": "YulExpressionStatement",
																					"src": "10541:16:3"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "10489:5:3",
																					"nodeType": "YulIdentifier",
																					"src": "10489:5:3"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "10496:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "10496:2:3"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "10486:2:3",
																				"nodeType": "YulIdentifier",
																				"src": "10486:2:3"
																			},
																			"nativeSrc": "10486:13:3",
																			"nodeType": "YulFunctionCall",
																			"src": "10486:13:3"
																		},
																		"nativeSrc": "10478:81:3",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "10500:26:3",
																			"nodeType": "YulBlock",
																			"src": "10500:26:3",
																			"statements": [
																				{
																					"nativeSrc": "10502:22:3",
																					"nodeType": "YulAssignment",
																					"src": "10502:22:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "10515:5:3",
																								"nodeType": "YulIdentifier",
																								"src": "10515:5:3"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10522:1:3",
																								"nodeType": "YulLiteral",
																								"src": "10522:1:3",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "10511:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "10511:3:3"
																						},
																						"nativeSrc": "10511:13:3",
																						"nodeType": "YulFunctionCall",
																						"src": "10511:13:3"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "10502:5:3",
																							"nodeType": "YulIdentifier",
																							"src": "10502:5:3"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "10482:3:3",
																			"nodeType": "YulBlock",
																			"src": "10482:3:3",
																			"statements": []
																		},
																		"src": "10478:81:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "10154:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "10154:3:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10159:2:3",
																		"nodeType": "YulLiteral",
																		"src": "10159:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10151:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "10151:2:3"
																},
																"nativeSrc": "10151:11:3",
																"nodeType": "YulFunctionCall",
																"src": "10151:11:3"
															},
															"nativeSrc": "10148:421:3",
															"nodeType": "YulIf",
															"src": "10148:421:3"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "10057:518:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "10110:5:3",
														"nodeType": "YulTypedName",
														"src": "10110:5:3",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "10117:3:3",
														"nodeType": "YulTypedName",
														"src": "10117:3:3",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "10122:10:3",
														"nodeType": "YulTypedName",
														"src": "10122:10:3",
														"type": ""
													}
												],
												"src": "10057:518:3"
											},
											{
												"body": {
													"nativeSrc": "10665:81:3",
													"nodeType": "YulBlock",
													"src": "10665:81:3",
													"statements": [
														{
															"nativeSrc": "10675:65:3",
															"nodeType": "YulAssignment",
															"src": "10675:65:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "10690:4:3",
																				"nodeType": "YulIdentifier",
																				"src": "10690:4:3"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "10708:1:3",
																										"nodeType": "YulLiteral",
																										"src": "10708:1:3",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "10711:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "10711:3:3"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "10704:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "10704:3:3"
																								},
																								"nativeSrc": "10704:11:3",
																								"nodeType": "YulFunctionCall",
																								"src": "10704:11:3"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "10721:1:3",
																										"nodeType": "YulLiteral",
																										"src": "10721:1:3",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "10717:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "10717:3:3"
																								},
																								"nativeSrc": "10717:6:3",
																								"nodeType": "YulFunctionCall",
																								"src": "10717:6:3"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "10700:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "10700:3:3"
																						},
																						"nativeSrc": "10700:24:3",
																						"nodeType": "YulFunctionCall",
																						"src": "10700:24:3"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "10696:3:3",
																					"nodeType": "YulIdentifier",
																					"src": "10696:3:3"
																				},
																				"nativeSrc": "10696:29:3",
																				"nodeType": "YulFunctionCall",
																				"src": "10696:29:3"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "10686:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "10686:3:3"
																		},
																		"nativeSrc": "10686:40:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10686:40:3"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "10732:1:3",
																				"nodeType": "YulLiteral",
																				"src": "10732:1:3",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "10735:3:3",
																				"nodeType": "YulIdentifier",
																				"src": "10735:3:3"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "10728:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "10728:3:3"
																		},
																		"nativeSrc": "10728:11:3",
																		"nodeType": "YulFunctionCall",
																		"src": "10728:11:3"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10683:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "10683:2:3"
																},
																"nativeSrc": "10683:57:3",
																"nodeType": "YulFunctionCall",
																"src": "10683:57:3"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "10675:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "10675:4:3"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "10580:166:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10642:4:3",
														"nodeType": "YulTypedName",
														"src": "10642:4:3",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "10648:3:3",
														"nodeType": "YulTypedName",
														"src": "10648:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "10656:4:3",
														"nodeType": "YulTypedName",
														"src": "10656:4:3",
														"type": ""
													}
												],
												"src": "10580:166:3"
											},
											{
												"body": {
													"nativeSrc": "10847:1203:3",
													"nodeType": "YulBlock",
													"src": "10847:1203:3",
													"statements": [
														{
															"nativeSrc": "10857:24:3",
															"nodeType": "YulVariableDeclaration",
															"src": "10857:24:3",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "10877:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "10877:3:3"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "10871:5:3",
																	"nodeType": "YulIdentifier",
																	"src": "10871:5:3"
																},
																"nativeSrc": "10871:10:3",
																"nodeType": "YulFunctionCall",
																"src": "10871:10:3"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "10861:6:3",
																	"nodeType": "YulTypedName",
																	"src": "10861:6:3",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10924:22:3",
																"nodeType": "YulBlock",
																"src": "10924:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10926:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "10926:16:3"
																			},
																			"nativeSrc": "10926:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "10926:18:3"
																		},
																		"nativeSrc": "10926:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "10926:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "10896:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "10896:6:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10904:18:3",
																		"nodeType": "YulLiteral",
																		"src": "10904:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10893:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "10893:2:3"
																},
																"nativeSrc": "10893:30:3",
																"nodeType": "YulFunctionCall",
																"src": "10893:30:3"
															},
															"nativeSrc": "10890:56:3",
															"nodeType": "YulIf",
															"src": "10890:56:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "10999:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "10999:4:3"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "11037:4:3",
																						"nodeType": "YulIdentifier",
																						"src": "11037:4:3"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "11031:5:3",
																					"nodeType": "YulIdentifier",
																					"src": "11031:5:3"
																				},
																				"nativeSrc": "11031:11:3",
																				"nodeType": "YulFunctionCall",
																				"src": "11031:11:3"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "11005:25:3",
																			"nodeType": "YulIdentifier",
																			"src": "11005:25:3"
																		},
																		"nativeSrc": "11005:38:3",
																		"nodeType": "YulFunctionCall",
																		"src": "11005:38:3"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "11045:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "11045:6:3"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "10955:43:3",
																	"nodeType": "YulIdentifier",
																	"src": "10955:43:3"
																},
																"nativeSrc": "10955:97:3",
																"nodeType": "YulFunctionCall",
																"src": "10955:97:3"
															},
															"nativeSrc": "10955:97:3",
															"nodeType": "YulExpressionStatement",
															"src": "10955:97:3"
														},
														{
															"nativeSrc": "11061:18:3",
															"nodeType": "YulVariableDeclaration",
															"src": "11061:18:3",
															"value": {
																"kind": "number",
																"nativeSrc": "11078:1:3",
																"nodeType": "YulLiteral",
																"src": "11078:1:3",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "11065:9:3",
																	"nodeType": "YulTypedName",
																	"src": "11065:9:3",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11088:17:3",
															"nodeType": "YulAssignment",
															"src": "11088:17:3",
															"value": {
																"kind": "number",
																"nativeSrc": "11101:4:3",
																"nodeType": "YulLiteral",
																"src": "11101:4:3",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "11088:9:3",
																	"nodeType": "YulIdentifier",
																	"src": "11088:9:3"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "11151:642:3",
																		"nodeType": "YulBlock",
																		"src": "11151:642:3",
																		"statements": [
																			{
																				"nativeSrc": "11165:35:3",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11165:35:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "11184:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "11184:6:3"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "11196:2:3",
																									"nodeType": "YulLiteral",
																									"src": "11196:2:3",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "11192:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "11192:3:3"
																							},
																							"nativeSrc": "11192:7:3",
																							"nodeType": "YulFunctionCall",
																							"src": "11192:7:3"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "11180:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "11180:3:3"
																					},
																					"nativeSrc": "11180:20:3",
																					"nodeType": "YulFunctionCall",
																					"src": "11180:20:3"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "11169:7:3",
																						"nodeType": "YulTypedName",
																						"src": "11169:7:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "11213:49:3",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11213:49:3",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "11257:4:3",
																							"nodeType": "YulIdentifier",
																							"src": "11257:4:3"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "11227:29:3",
																						"nodeType": "YulIdentifier",
																						"src": "11227:29:3"
																					},
																					"nativeSrc": "11227:35:3",
																					"nodeType": "YulFunctionCall",
																					"src": "11227:35:3"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "11217:6:3",
																						"nodeType": "YulTypedName",
																						"src": "11217:6:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "11275:10:3",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11275:10:3",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "11284:1:3",
																					"nodeType": "YulLiteral",
																					"src": "11284:1:3",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "11279:1:3",
																						"nodeType": "YulTypedName",
																						"src": "11279:1:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "11355:165:3",
																					"nodeType": "YulBlock",
																					"src": "11355:165:3",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "11380:6:3",
																										"nodeType": "YulIdentifier",
																										"src": "11380:6:3"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "11398:3:3",
																														"nodeType": "YulIdentifier",
																														"src": "11398:3:3"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "11403:9:3",
																														"nodeType": "YulIdentifier",
																														"src": "11403:9:3"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "11394:3:3",
																													"nodeType": "YulIdentifier",
																													"src": "11394:3:3"
																												},
																												"nativeSrc": "11394:19:3",
																												"nodeType": "YulFunctionCall",
																												"src": "11394:19:3"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "11388:5:3",
																											"nodeType": "YulIdentifier",
																											"src": "11388:5:3"
																										},
																										"nativeSrc": "11388:26:3",
																										"nodeType": "YulFunctionCall",
																										"src": "11388:26:3"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "11373:6:3",
																									"nodeType": "YulIdentifier",
																									"src": "11373:6:3"
																								},
																								"nativeSrc": "11373:42:3",
																								"nodeType": "YulFunctionCall",
																								"src": "11373:42:3"
																							},
																							"nativeSrc": "11373:42:3",
																							"nodeType": "YulExpressionStatement",
																							"src": "11373:42:3"
																						},
																						{
																							"nativeSrc": "11432:24:3",
																							"nodeType": "YulAssignment",
																							"src": "11432:24:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "11446:6:3",
																										"nodeType": "YulIdentifier",
																										"src": "11446:6:3"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "11454:1:3",
																										"nodeType": "YulLiteral",
																										"src": "11454:1:3",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "11442:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "11442:3:3"
																								},
																								"nativeSrc": "11442:14:3",
																								"nodeType": "YulFunctionCall",
																								"src": "11442:14:3"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "11432:6:3",
																									"nodeType": "YulIdentifier",
																									"src": "11432:6:3"
																								}
																							]
																						},
																						{
																							"nativeSrc": "11473:33:3",
																							"nodeType": "YulAssignment",
																							"src": "11473:33:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "11490:9:3",
																										"nodeType": "YulIdentifier",
																										"src": "11490:9:3"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "11501:4:3",
																										"nodeType": "YulLiteral",
																										"src": "11501:4:3",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "11486:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "11486:3:3"
																								},
																								"nativeSrc": "11486:20:3",
																								"nodeType": "YulFunctionCall",
																								"src": "11486:20:3"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "11473:9:3",
																									"nodeType": "YulIdentifier",
																									"src": "11473:9:3"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "11309:1:3",
																							"nodeType": "YulIdentifier",
																							"src": "11309:1:3"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "11312:7:3",
																							"nodeType": "YulIdentifier",
																							"src": "11312:7:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "11306:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "11306:2:3"
																					},
																					"nativeSrc": "11306:14:3",
																					"nodeType": "YulFunctionCall",
																					"src": "11306:14:3"
																				},
																				"nativeSrc": "11298:222:3",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "11321:21:3",
																					"nodeType": "YulBlock",
																					"src": "11321:21:3",
																					"statements": [
																						{
																							"nativeSrc": "11323:17:3",
																							"nodeType": "YulAssignment",
																							"src": "11323:17:3",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "11332:1:3",
																										"nodeType": "YulIdentifier",
																										"src": "11332:1:3"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "11335:4:3",
																										"nodeType": "YulLiteral",
																										"src": "11335:4:3",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "11328:3:3",
																									"nodeType": "YulIdentifier",
																									"src": "11328:3:3"
																								},
																								"nativeSrc": "11328:12:3",
																								"nodeType": "YulFunctionCall",
																								"src": "11328:12:3"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "11323:1:3",
																									"nodeType": "YulIdentifier",
																									"src": "11323:1:3"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "11302:3:3",
																					"nodeType": "YulBlock",
																					"src": "11302:3:3",
																					"statements": []
																				},
																				"src": "11298:222:3"
																			},
																			{
																				"body": {
																					"nativeSrc": "11568:166:3",
																					"nodeType": "YulBlock",
																					"src": "11568:166:3",
																					"statements": [
																						{
																							"nativeSrc": "11586:43:3",
																							"nodeType": "YulVariableDeclaration",
																							"src": "11586:43:3",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "11613:3:3",
																												"nodeType": "YulIdentifier",
																												"src": "11613:3:3"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "11618:9:3",
																												"nodeType": "YulIdentifier",
																												"src": "11618:9:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "11609:3:3",
																											"nodeType": "YulIdentifier",
																											"src": "11609:3:3"
																										},
																										"nativeSrc": "11609:19:3",
																										"nodeType": "YulFunctionCall",
																										"src": "11609:19:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "11603:5:3",
																									"nodeType": "YulIdentifier",
																									"src": "11603:5:3"
																								},
																								"nativeSrc": "11603:26:3",
																								"nodeType": "YulFunctionCall",
																								"src": "11603:26:3"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "11590:9:3",
																									"nodeType": "YulTypedName",
																									"src": "11590:9:3",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "11653:6:3",
																										"nodeType": "YulIdentifier",
																										"src": "11653:6:3"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "11665:9:3",
																												"nodeType": "YulIdentifier",
																												"src": "11665:9:3"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "11692:1:3",
																																				"nodeType": "YulLiteral",
																																				"src": "11692:1:3",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "11695:6:3",
																																				"nodeType": "YulIdentifier",
																																				"src": "11695:6:3"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "11688:3:3",
																																			"nodeType": "YulIdentifier",
																																			"src": "11688:3:3"
																																		},
																																		"nativeSrc": "11688:14:3",
																																		"nodeType": "YulFunctionCall",
																																		"src": "11688:14:3"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "11704:3:3",
																																		"nodeType": "YulLiteral",
																																		"src": "11704:3:3",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "11684:3:3",
																																	"nodeType": "YulIdentifier",
																																	"src": "11684:3:3"
																																},
																																"nativeSrc": "11684:24:3",
																																"nodeType": "YulFunctionCall",
																																"src": "11684:24:3"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "11714:1:3",
																																		"nodeType": "YulLiteral",
																																		"src": "11714:1:3",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "11710:3:3",
																																	"nodeType": "YulIdentifier",
																																	"src": "11710:3:3"
																																},
																																"nativeSrc": "11710:6:3",
																																"nodeType": "YulFunctionCall",
																																"src": "11710:6:3"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "11680:3:3",
																															"nodeType": "YulIdentifier",
																															"src": "11680:3:3"
																														},
																														"nativeSrc": "11680:37:3",
																														"nodeType": "YulFunctionCall",
																														"src": "11680:37:3"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "11676:3:3",
																													"nodeType": "YulIdentifier",
																													"src": "11676:3:3"
																												},
																												"nativeSrc": "11676:42:3",
																												"nodeType": "YulFunctionCall",
																												"src": "11676:42:3"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "11661:3:3",
																											"nodeType": "YulIdentifier",
																											"src": "11661:3:3"
																										},
																										"nativeSrc": "11661:58:3",
																										"nodeType": "YulFunctionCall",
																										"src": "11661:58:3"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "11646:6:3",
																									"nodeType": "YulIdentifier",
																									"src": "11646:6:3"
																								},
																								"nativeSrc": "11646:74:3",
																								"nodeType": "YulFunctionCall",
																								"src": "11646:74:3"
																							},
																							"nativeSrc": "11646:74:3",
																							"nodeType": "YulExpressionStatement",
																							"src": "11646:74:3"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "11539:7:3",
																							"nodeType": "YulIdentifier",
																							"src": "11539:7:3"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "11548:6:3",
																							"nodeType": "YulIdentifier",
																							"src": "11548:6:3"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "11536:2:3",
																						"nodeType": "YulIdentifier",
																						"src": "11536:2:3"
																					},
																					"nativeSrc": "11536:19:3",
																					"nodeType": "YulFunctionCall",
																					"src": "11536:19:3"
																				},
																				"nativeSrc": "11533:201:3",
																				"nodeType": "YulIf",
																				"src": "11533:201:3"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "11754:4:3",
																							"nodeType": "YulIdentifier",
																							"src": "11754:4:3"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "11768:1:3",
																											"nodeType": "YulLiteral",
																											"src": "11768:1:3",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "11771:6:3",
																											"nodeType": "YulIdentifier",
																											"src": "11771:6:3"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "11764:3:3",
																										"nodeType": "YulIdentifier",
																										"src": "11764:3:3"
																									},
																									"nativeSrc": "11764:14:3",
																									"nodeType": "YulFunctionCall",
																									"src": "11764:14:3"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "11780:1:3",
																									"nodeType": "YulLiteral",
																									"src": "11780:1:3",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "11760:3:3",
																								"nodeType": "YulIdentifier",
																								"src": "11760:3:3"
																							},
																							"nativeSrc": "11760:22:3",
																							"nodeType": "YulFunctionCall",
																							"src": "11760:22:3"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "11747:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "11747:6:3"
																					},
																					"nativeSrc": "11747:36:3",
																					"nodeType": "YulFunctionCall",
																					"src": "11747:36:3"
																				},
																				"nativeSrc": "11747:36:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "11747:36:3"
																			}
																		]
																	},
																	"nativeSrc": "11144:649:3",
																	"nodeType": "YulCase",
																	"src": "11144:649:3",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11149:1:3",
																		"nodeType": "YulLiteral",
																		"src": "11149:1:3",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "11810:234:3",
																		"nodeType": "YulBlock",
																		"src": "11810:234:3",
																		"statements": [
																			{
																				"nativeSrc": "11824:14:3",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11824:14:3",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "11837:1:3",
																					"nodeType": "YulLiteral",
																					"src": "11837:1:3",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "11828:5:3",
																						"nodeType": "YulTypedName",
																						"src": "11828:5:3",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "11873:67:3",
																					"nodeType": "YulBlock",
																					"src": "11873:67:3",
																					"statements": [
																						{
																							"nativeSrc": "11891:35:3",
																							"nodeType": "YulAssignment",
																							"src": "11891:35:3",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "11910:3:3",
																												"nodeType": "YulIdentifier",
																												"src": "11910:3:3"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "11915:9:3",
																												"nodeType": "YulIdentifier",
																												"src": "11915:9:3"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "11906:3:3",
																											"nodeType": "YulIdentifier",
																											"src": "11906:3:3"
																										},
																										"nativeSrc": "11906:19:3",
																										"nodeType": "YulFunctionCall",
																										"src": "11906:19:3"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "11900:5:3",
																									"nodeType": "YulIdentifier",
																									"src": "11900:5:3"
																								},
																								"nativeSrc": "11900:26:3",
																								"nodeType": "YulFunctionCall",
																								"src": "11900:26:3"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "11891:5:3",
																									"nodeType": "YulIdentifier",
																									"src": "11891:5:3"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "11854:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "11854:6:3"
																				},
																				"nativeSrc": "11851:89:3",
																				"nodeType": "YulIf",
																				"src": "11851:89:3"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "11960:4:3",
																							"nodeType": "YulIdentifier",
																							"src": "11960:4:3"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "12019:5:3",
																									"nodeType": "YulIdentifier",
																									"src": "12019:5:3"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "12026:6:3",
																									"nodeType": "YulIdentifier",
																									"src": "12026:6:3"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "11966:52:3",
																								"nodeType": "YulIdentifier",
																								"src": "11966:52:3"
																							},
																							"nativeSrc": "11966:67:3",
																							"nodeType": "YulFunctionCall",
																							"src": "11966:67:3"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "11953:6:3",
																						"nodeType": "YulIdentifier",
																						"src": "11953:6:3"
																					},
																					"nativeSrc": "11953:81:3",
																					"nodeType": "YulFunctionCall",
																					"src": "11953:81:3"
																				},
																				"nativeSrc": "11953:81:3",
																				"nodeType": "YulExpressionStatement",
																				"src": "11953:81:3"
																			}
																		]
																	},
																	"nativeSrc": "11802:242:3",
																	"nodeType": "YulCase",
																	"src": "11802:242:3",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "11124:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "11124:6:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11132:2:3",
																		"nodeType": "YulLiteral",
																		"src": "11132:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11121:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "11121:2:3"
																},
																"nativeSrc": "11121:14:3",
																"nodeType": "YulFunctionCall",
																"src": "11121:14:3"
															},
															"nativeSrc": "11114:930:3",
															"nodeType": "YulSwitch",
															"src": "11114:930:3"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "10751:1299:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "10832:4:3",
														"nodeType": "YulTypedName",
														"src": "10832:4:3",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "10838:3:3",
														"nodeType": "YulTypedName",
														"src": "10838:3:3",
														"type": ""
													}
												],
												"src": "10751:1299:3"
											},
											{
												"body": {
													"nativeSrc": "12103:77:3",
													"nodeType": "YulBlock",
													"src": "12103:77:3",
													"statements": [
														{
															"nativeSrc": "12113:16:3",
															"nodeType": "YulAssignment",
															"src": "12113:16:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12124:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "12124:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12127:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "12127:1:3"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12120:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "12120:3:3"
																},
																"nativeSrc": "12120:9:3",
																"nodeType": "YulFunctionCall",
																"src": "12120:9:3"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "12113:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "12113:3:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12152:22:3",
																"nodeType": "YulBlock",
																"src": "12152:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12154:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "12154:16:3"
																			},
																			"nativeSrc": "12154:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "12154:18:3"
																		},
																		"nativeSrc": "12154:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "12154:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12144:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "12144:1:3"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "12147:3:3",
																		"nodeType": "YulIdentifier",
																		"src": "12147:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12141:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "12141:2:3"
																},
																"nativeSrc": "12141:10:3",
																"nodeType": "YulFunctionCall",
																"src": "12141:10:3"
															},
															"nativeSrc": "12138:36:3",
															"nodeType": "YulIf",
															"src": "12138:36:3"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "12055:125:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12086:1:3",
														"nodeType": "YulTypedName",
														"src": "12086:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12089:1:3",
														"nodeType": "YulTypedName",
														"src": "12089:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "12095:3:3",
														"nodeType": "YulTypedName",
														"src": "12095:3:3",
														"type": ""
													}
												],
												"src": "12055:125:3"
											},
											{
												"body": {
													"nativeSrc": "12362:185:3",
													"nodeType": "YulBlock",
													"src": "12362:185:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12379:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "12379:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12390:2:3",
																		"nodeType": "YulLiteral",
																		"src": "12390:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12372:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "12372:6:3"
																},
																"nativeSrc": "12372:21:3",
																"nodeType": "YulFunctionCall",
																"src": "12372:21:3"
															},
															"nativeSrc": "12372:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "12372:21:3"
														},
														{
															"nativeSrc": "12402:53:3",
															"nodeType": "YulAssignment",
															"src": "12402:53:3",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12428:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "12428:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12440:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "12440:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12451:2:3",
																				"nodeType": "YulLiteral",
																				"src": "12451:2:3",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12436:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "12436:3:3"
																		},
																		"nativeSrc": "12436:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "12436:18:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "12410:17:3",
																	"nodeType": "YulIdentifier",
																	"src": "12410:17:3"
																},
																"nativeSrc": "12410:45:3",
																"nodeType": "YulFunctionCall",
																"src": "12410:45:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12402:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "12402:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12475:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "12475:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12486:2:3",
																				"nodeType": "YulLiteral",
																				"src": "12486:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12471:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "12471:3:3"
																		},
																		"nativeSrc": "12471:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "12471:18:3"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "12491:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "12491:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12464:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "12464:6:3"
																},
																"nativeSrc": "12464:34:3",
																"nodeType": "YulFunctionCall",
																"src": "12464:34:3"
															},
															"nativeSrc": "12464:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "12464:34:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12518:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "12518:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12529:2:3",
																				"nodeType": "YulLiteral",
																				"src": "12529:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12514:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "12514:3:3"
																		},
																		"nativeSrc": "12514:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "12514:18:3"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "12534:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "12534:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12507:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "12507:6:3"
																},
																"nativeSrc": "12507:34:3",
																"nodeType": "YulFunctionCall",
																"src": "12507:34:3"
															},
															"nativeSrc": "12507:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "12507:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12185:362:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12315:9:3",
														"nodeType": "YulTypedName",
														"src": "12315:9:3",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12326:6:3",
														"nodeType": "YulTypedName",
														"src": "12326:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12334:6:3",
														"nodeType": "YulTypedName",
														"src": "12334:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12342:6:3",
														"nodeType": "YulTypedName",
														"src": "12342:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12353:4:3",
														"nodeType": "YulTypedName",
														"src": "12353:4:3",
														"type": ""
													}
												],
												"src": "12185:362:3"
											},
											{
												"body": {
													"nativeSrc": "12726:164:3",
													"nodeType": "YulBlock",
													"src": "12726:164:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12743:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "12743:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12754:2:3",
																		"nodeType": "YulLiteral",
																		"src": "12754:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12736:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "12736:6:3"
																},
																"nativeSrc": "12736:21:3",
																"nodeType": "YulFunctionCall",
																"src": "12736:21:3"
															},
															"nativeSrc": "12736:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "12736:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12777:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "12777:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12788:2:3",
																				"nodeType": "YulLiteral",
																				"src": "12788:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12773:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "12773:3:3"
																		},
																		"nativeSrc": "12773:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "12773:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12793:2:3",
																		"nodeType": "YulLiteral",
																		"src": "12793:2:3",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12766:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "12766:6:3"
																},
																"nativeSrc": "12766:30:3",
																"nodeType": "YulFunctionCall",
																"src": "12766:30:3"
															},
															"nativeSrc": "12766:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "12766:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12816:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "12816:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12827:2:3",
																				"nodeType": "YulLiteral",
																				"src": "12827:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12812:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "12812:3:3"
																		},
																		"nativeSrc": "12812:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "12812:18:3"
																	},
																	{
																		"hexValue": "42696464696e6720636c6f736564",
																		"kind": "string",
																		"nativeSrc": "12832:16:3",
																		"nodeType": "YulLiteral",
																		"src": "12832:16:3",
																		"type": "",
																		"value": "Bidding closed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12805:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "12805:6:3"
																},
																"nativeSrc": "12805:44:3",
																"nodeType": "YulFunctionCall",
																"src": "12805:44:3"
															},
															"nativeSrc": "12805:44:3",
															"nodeType": "YulExpressionStatement",
															"src": "12805:44:3"
														},
														{
															"nativeSrc": "12858:26:3",
															"nodeType": "YulAssignment",
															"src": "12858:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12870:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "12870:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12881:2:3",
																		"nodeType": "YulLiteral",
																		"src": "12881:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12866:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "12866:3:3"
																},
																"nativeSrc": "12866:18:3",
																"nodeType": "YulFunctionCall",
																"src": "12866:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12858:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "12858:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_119a2f4ad272726f690e20370d39e55ca3ab5b4c8e68a193f694062fe42aa1ce__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12552:338:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12703:9:3",
														"nodeType": "YulTypedName",
														"src": "12703:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12717:4:3",
														"nodeType": "YulTypedName",
														"src": "12717:4:3",
														"type": ""
													}
												],
												"src": "12552:338:3"
											},
											{
												"body": {
													"nativeSrc": "13069:170:3",
													"nodeType": "YulBlock",
													"src": "13069:170:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13086:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "13086:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13097:2:3",
																		"nodeType": "YulLiteral",
																		"src": "13097:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13079:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "13079:6:3"
																},
																"nativeSrc": "13079:21:3",
																"nodeType": "YulFunctionCall",
																"src": "13079:21:3"
															},
															"nativeSrc": "13079:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "13079:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13120:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "13120:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13131:2:3",
																				"nodeType": "YulLiteral",
																				"src": "13131:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13116:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "13116:3:3"
																		},
																		"nativeSrc": "13116:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "13116:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13136:2:3",
																		"nodeType": "YulLiteral",
																		"src": "13136:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13109:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "13109:6:3"
																},
																"nativeSrc": "13109:30:3",
																"nodeType": "YulFunctionCall",
																"src": "13109:30:3"
															},
															"nativeSrc": "13109:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "13109:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13159:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "13159:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13170:2:3",
																				"nodeType": "YulLiteral",
																				"src": "13170:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13155:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "13155:3:3"
																		},
																		"nativeSrc": "13155:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "13155:18:3"
																	},
																	{
																		"hexValue": "42696464696e6720706572696f6420656e646564",
																		"kind": "string",
																		"nativeSrc": "13175:22:3",
																		"nodeType": "YulLiteral",
																		"src": "13175:22:3",
																		"type": "",
																		"value": "Bidding period ended"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13148:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "13148:6:3"
																},
																"nativeSrc": "13148:50:3",
																"nodeType": "YulFunctionCall",
																"src": "13148:50:3"
															},
															"nativeSrc": "13148:50:3",
															"nodeType": "YulExpressionStatement",
															"src": "13148:50:3"
														},
														{
															"nativeSrc": "13207:26:3",
															"nodeType": "YulAssignment",
															"src": "13207:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13219:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "13219:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13230:2:3",
																		"nodeType": "YulLiteral",
																		"src": "13230:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13215:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "13215:3:3"
																},
																"nativeSrc": "13215:18:3",
																"nodeType": "YulFunctionCall",
																"src": "13215:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13207:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "13207:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_57592abfbda94eb909abef2196f77385e01da573d6304a2883cd72451377302b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12895:344:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13046:9:3",
														"nodeType": "YulTypedName",
														"src": "13046:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13060:4:3",
														"nodeType": "YulTypedName",
														"src": "13060:4:3",
														"type": ""
													}
												],
												"src": "12895:344:3"
											},
											{
												"body": {
													"nativeSrc": "13418:170:3",
													"nodeType": "YulBlock",
													"src": "13418:170:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13435:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "13435:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13446:2:3",
																		"nodeType": "YulLiteral",
																		"src": "13446:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13428:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "13428:6:3"
																},
																"nativeSrc": "13428:21:3",
																"nodeType": "YulFunctionCall",
																"src": "13428:21:3"
															},
															"nativeSrc": "13428:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "13428:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13469:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "13469:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13480:2:3",
																				"nodeType": "YulLiteral",
																				"src": "13480:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13465:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "13465:3:3"
																		},
																		"nativeSrc": "13465:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "13465:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13485:2:3",
																		"nodeType": "YulLiteral",
																		"src": "13485:2:3",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13458:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "13458:6:3"
																},
																"nativeSrc": "13458:30:3",
																"nodeType": "YulFunctionCall",
																"src": "13458:30:3"
															},
															"nativeSrc": "13458:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "13458:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13508:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "13508:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13519:2:3",
																				"nodeType": "YulLiteral",
																				"src": "13519:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13504:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "13504:3:3"
																		},
																		"nativeSrc": "13504:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "13504:18:3"
																	},
																	{
																		"hexValue": "496e76616c696420736861726520616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "13524:22:3",
																		"nodeType": "YulLiteral",
																		"src": "13524:22:3",
																		"type": "",
																		"value": "Invalid share amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13497:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "13497:6:3"
																},
																"nativeSrc": "13497:50:3",
																"nodeType": "YulFunctionCall",
																"src": "13497:50:3"
															},
															"nativeSrc": "13497:50:3",
															"nodeType": "YulExpressionStatement",
															"src": "13497:50:3"
														},
														{
															"nativeSrc": "13556:26:3",
															"nodeType": "YulAssignment",
															"src": "13556:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13568:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "13568:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13579:2:3",
																		"nodeType": "YulLiteral",
																		"src": "13579:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13564:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "13564:3:3"
																},
																"nativeSrc": "13564:18:3",
																"nodeType": "YulFunctionCall",
																"src": "13564:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13556:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "13556:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13244:344:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13395:9:3",
														"nodeType": "YulTypedName",
														"src": "13395:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13409:4:3",
														"nodeType": "YulTypedName",
														"src": "13409:4:3",
														"type": ""
													}
												],
												"src": "13244:344:3"
											},
											{
												"body": {
													"nativeSrc": "13722:119:3",
													"nodeType": "YulBlock",
													"src": "13722:119:3",
													"statements": [
														{
															"nativeSrc": "13732:26:3",
															"nodeType": "YulAssignment",
															"src": "13732:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13744:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "13744:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13755:2:3",
																		"nodeType": "YulLiteral",
																		"src": "13755:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13740:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "13740:3:3"
																},
																"nativeSrc": "13740:18:3",
																"nodeType": "YulFunctionCall",
																"src": "13740:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13732:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "13732:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13774:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "13774:9:3"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "13785:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "13785:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13767:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "13767:6:3"
																},
																"nativeSrc": "13767:25:3",
																"nodeType": "YulFunctionCall",
																"src": "13767:25:3"
															},
															"nativeSrc": "13767:25:3",
															"nodeType": "YulExpressionStatement",
															"src": "13767:25:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13812:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "13812:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13823:2:3",
																				"nodeType": "YulLiteral",
																				"src": "13823:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13808:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "13808:3:3"
																		},
																		"nativeSrc": "13808:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "13808:18:3"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "13828:6:3",
																		"nodeType": "YulIdentifier",
																		"src": "13828:6:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13801:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "13801:6:3"
																},
																"nativeSrc": "13801:34:3",
																"nodeType": "YulFunctionCall",
																"src": "13801:34:3"
															},
															"nativeSrc": "13801:34:3",
															"nodeType": "YulExpressionStatement",
															"src": "13801:34:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13593:248:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13683:9:3",
														"nodeType": "YulTypedName",
														"src": "13683:9:3",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13694:6:3",
														"nodeType": "YulTypedName",
														"src": "13694:6:3",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13702:6:3",
														"nodeType": "YulTypedName",
														"src": "13702:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13713:4:3",
														"nodeType": "YulTypedName",
														"src": "13713:4:3",
														"type": ""
													}
												],
												"src": "13593:248:3"
											},
											{
												"body": {
													"nativeSrc": "14020:172:3",
													"nodeType": "YulBlock",
													"src": "14020:172:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14037:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "14037:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14048:2:3",
																		"nodeType": "YulLiteral",
																		"src": "14048:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14030:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "14030:6:3"
																},
																"nativeSrc": "14030:21:3",
																"nodeType": "YulFunctionCall",
																"src": "14030:21:3"
															},
															"nativeSrc": "14030:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "14030:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14071:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "14071:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14082:2:3",
																				"nodeType": "YulLiteral",
																				"src": "14082:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14067:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "14067:3:3"
																		},
																		"nativeSrc": "14067:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "14067:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14087:2:3",
																		"nodeType": "YulLiteral",
																		"src": "14087:2:3",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14060:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "14060:6:3"
																},
																"nativeSrc": "14060:30:3",
																"nodeType": "YulFunctionCall",
																"src": "14060:30:3"
															},
															"nativeSrc": "14060:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "14060:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14110:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "14110:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14121:2:3",
																				"nodeType": "YulLiteral",
																				"src": "14121:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14106:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "14106:3:3"
																		},
																		"nativeSrc": "14106:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "14106:18:3"
																	},
																	{
																		"hexValue": "42696464696e6720706572696f64206f6e676f696e67",
																		"kind": "string",
																		"nativeSrc": "14126:24:3",
																		"nodeType": "YulLiteral",
																		"src": "14126:24:3",
																		"type": "",
																		"value": "Bidding period ongoing"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14099:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "14099:6:3"
																},
																"nativeSrc": "14099:52:3",
																"nodeType": "YulFunctionCall",
																"src": "14099:52:3"
															},
															"nativeSrc": "14099:52:3",
															"nodeType": "YulExpressionStatement",
															"src": "14099:52:3"
														},
														{
															"nativeSrc": "14160:26:3",
															"nodeType": "YulAssignment",
															"src": "14160:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14172:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "14172:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14183:2:3",
																		"nodeType": "YulLiteral",
																		"src": "14183:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14168:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "14168:3:3"
																},
																"nativeSrc": "14168:18:3",
																"nodeType": "YulFunctionCall",
																"src": "14168:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14160:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "14160:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cec8607ff74902d73895ca204adfd06f34d0ecf19ec1c9aa31f2c5b658f0327c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13846:346:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13997:9:3",
														"nodeType": "YulTypedName",
														"src": "13997:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14011:4:3",
														"nodeType": "YulTypedName",
														"src": "14011:4:3",
														"type": ""
													}
												],
												"src": "13846:346:3"
											},
											{
												"body": {
													"nativeSrc": "14371:181:3",
													"nodeType": "YulBlock",
													"src": "14371:181:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14388:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "14388:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14399:2:3",
																		"nodeType": "YulLiteral",
																		"src": "14399:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14381:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "14381:6:3"
																},
																"nativeSrc": "14381:21:3",
																"nodeType": "YulFunctionCall",
																"src": "14381:21:3"
															},
															"nativeSrc": "14381:21:3",
															"nodeType": "YulExpressionStatement",
															"src": "14381:21:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14422:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "14422:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14433:2:3",
																				"nodeType": "YulLiteral",
																				"src": "14433:2:3",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14418:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "14418:3:3"
																		},
																		"nativeSrc": "14418:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "14418:18:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14438:2:3",
																		"nodeType": "YulLiteral",
																		"src": "14438:2:3",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14411:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "14411:6:3"
																},
																"nativeSrc": "14411:30:3",
																"nodeType": "YulFunctionCall",
																"src": "14411:30:3"
															},
															"nativeSrc": "14411:30:3",
															"nodeType": "YulExpressionStatement",
															"src": "14411:30:3"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14461:9:3",
																				"nodeType": "YulIdentifier",
																				"src": "14461:9:3"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14472:2:3",
																				"nodeType": "YulLiteral",
																				"src": "14472:2:3",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14457:3:3",
																			"nodeType": "YulIdentifier",
																			"src": "14457:3:3"
																		},
																		"nativeSrc": "14457:18:3",
																		"nodeType": "YulFunctionCall",
																		"src": "14457:18:3"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "14477:33:3",
																		"nodeType": "YulLiteral",
																		"src": "14477:33:3",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14450:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "14450:6:3"
																},
																"nativeSrc": "14450:61:3",
																"nodeType": "YulFunctionCall",
																"src": "14450:61:3"
															},
															"nativeSrc": "14450:61:3",
															"nodeType": "YulExpressionStatement",
															"src": "14450:61:3"
														},
														{
															"nativeSrc": "14520:26:3",
															"nodeType": "YulAssignment",
															"src": "14520:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14532:9:3",
																		"nodeType": "YulIdentifier",
																		"src": "14532:9:3"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14543:2:3",
																		"nodeType": "YulLiteral",
																		"src": "14543:2:3",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14528:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "14528:3:3"
																},
																"nativeSrc": "14528:18:3",
																"nodeType": "YulFunctionCall",
																"src": "14528:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14520:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "14520:4:3"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14197:355:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14348:9:3",
														"nodeType": "YulTypedName",
														"src": "14348:9:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14362:4:3",
														"nodeType": "YulTypedName",
														"src": "14362:4:3",
														"type": ""
													}
												],
												"src": "14197:355:3"
											},
											{
												"body": {
													"nativeSrc": "14603:171:3",
													"nodeType": "YulBlock",
													"src": "14603:171:3",
													"statements": [
														{
															"body": {
																"nativeSrc": "14634:111:3",
																"nodeType": "YulBlock",
																"src": "14634:111:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14655:1:3",
																					"nodeType": "YulLiteral",
																					"src": "14655:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "14662:3:3",
																							"nodeType": "YulLiteral",
																							"src": "14662:3:3",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "14667:10:3",
																							"nodeType": "YulLiteral",
																							"src": "14667:10:3",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "14658:3:3",
																						"nodeType": "YulIdentifier",
																						"src": "14658:3:3"
																					},
																					"nativeSrc": "14658:20:3",
																					"nodeType": "YulFunctionCall",
																					"src": "14658:20:3"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "14648:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "14648:6:3"
																			},
																			"nativeSrc": "14648:31:3",
																			"nodeType": "YulFunctionCall",
																			"src": "14648:31:3"
																		},
																		"nativeSrc": "14648:31:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "14648:31:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14699:1:3",
																					"nodeType": "YulLiteral",
																					"src": "14699:1:3",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14702:4:3",
																					"nodeType": "YulLiteral",
																					"src": "14702:4:3",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "14692:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "14692:6:3"
																			},
																			"nativeSrc": "14692:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "14692:15:3"
																		},
																		"nativeSrc": "14692:15:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "14692:15:3"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14727:1:3",
																					"nodeType": "YulLiteral",
																					"src": "14727:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14730:4:3",
																					"nodeType": "YulLiteral",
																					"src": "14730:4:3",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14720:6:3",
																				"nodeType": "YulIdentifier",
																				"src": "14720:6:3"
																			},
																			"nativeSrc": "14720:15:3",
																			"nodeType": "YulFunctionCall",
																			"src": "14720:15:3"
																		},
																		"nativeSrc": "14720:15:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "14720:15:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14623:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "14623:1:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14616:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "14616:6:3"
																},
																"nativeSrc": "14616:9:3",
																"nodeType": "YulFunctionCall",
																"src": "14616:9:3"
															},
															"nativeSrc": "14613:132:3",
															"nodeType": "YulIf",
															"src": "14613:132:3"
														},
														{
															"nativeSrc": "14754:14:3",
															"nodeType": "YulAssignment",
															"src": "14754:14:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14763:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "14763:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14766:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "14766:1:3"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "14759:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "14759:3:3"
																},
																"nativeSrc": "14759:9:3",
																"nodeType": "YulFunctionCall",
																"src": "14759:9:3"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "14754:1:3",
																	"nodeType": "YulIdentifier",
																	"src": "14754:1:3"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14557:217:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14588:1:3",
														"nodeType": "YulTypedName",
														"src": "14588:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14591:1:3",
														"nodeType": "YulTypedName",
														"src": "14591:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14597:1:3",
														"nodeType": "YulTypedName",
														"src": "14597:1:3",
														"type": ""
													}
												],
												"src": "14557:217:3"
											},
											{
												"body": {
													"nativeSrc": "14831:116:3",
													"nodeType": "YulBlock",
													"src": "14831:116:3",
													"statements": [
														{
															"nativeSrc": "14841:20:3",
															"nodeType": "YulAssignment",
															"src": "14841:20:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14856:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "14856:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14859:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "14859:1:3"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14852:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "14852:3:3"
																},
																"nativeSrc": "14852:9:3",
																"nodeType": "YulFunctionCall",
																"src": "14852:9:3"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "14841:7:3",
																	"nodeType": "YulIdentifier",
																	"src": "14841:7:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14919:22:3",
																"nodeType": "YulBlock",
																"src": "14919:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14921:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "14921:16:3"
																			},
																			"nativeSrc": "14921:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "14921:18:3"
																		},
																		"nativeSrc": "14921:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "14921:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "14890:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "14890:1:3"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "14883:6:3",
																					"nodeType": "YulIdentifier",
																					"src": "14883:6:3"
																				},
																				"nativeSrc": "14883:9:3",
																				"nodeType": "YulFunctionCall",
																				"src": "14883:9:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "14897:1:3",
																						"nodeType": "YulIdentifier",
																						"src": "14897:1:3"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "14904:7:3",
																								"nodeType": "YulIdentifier",
																								"src": "14904:7:3"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "14913:1:3",
																								"nodeType": "YulIdentifier",
																								"src": "14913:1:3"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "14900:3:3",
																							"nodeType": "YulIdentifier",
																							"src": "14900:3:3"
																						},
																						"nativeSrc": "14900:15:3",
																						"nodeType": "YulFunctionCall",
																						"src": "14900:15:3"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "14894:2:3",
																					"nodeType": "YulIdentifier",
																					"src": "14894:2:3"
																				},
																				"nativeSrc": "14894:22:3",
																				"nodeType": "YulFunctionCall",
																				"src": "14894:22:3"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "14880:2:3",
																			"nodeType": "YulIdentifier",
																			"src": "14880:2:3"
																		},
																		"nativeSrc": "14880:37:3",
																		"nodeType": "YulFunctionCall",
																		"src": "14880:37:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14873:6:3",
																	"nodeType": "YulIdentifier",
																	"src": "14873:6:3"
																},
																"nativeSrc": "14873:45:3",
																"nodeType": "YulFunctionCall",
																"src": "14873:45:3"
															},
															"nativeSrc": "14870:71:3",
															"nodeType": "YulIf",
															"src": "14870:71:3"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "14779:168:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14810:1:3",
														"nodeType": "YulTypedName",
														"src": "14810:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14813:1:3",
														"nodeType": "YulTypedName",
														"src": "14813:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "14819:7:3",
														"nodeType": "YulTypedName",
														"src": "14819:7:3",
														"type": ""
													}
												],
												"src": "14779:168:3"
											},
											{
												"body": {
													"nativeSrc": "15001:79:3",
													"nodeType": "YulBlock",
													"src": "15001:79:3",
													"statements": [
														{
															"nativeSrc": "15011:17:3",
															"nodeType": "YulAssignment",
															"src": "15011:17:3",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15023:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "15023:1:3"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15026:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "15026:1:3"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "15019:3:3",
																	"nodeType": "YulIdentifier",
																	"src": "15019:3:3"
																},
																"nativeSrc": "15019:9:3",
																"nodeType": "YulFunctionCall",
																"src": "15019:9:3"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "15011:4:3",
																	"nodeType": "YulIdentifier",
																	"src": "15011:4:3"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15052:22:3",
																"nodeType": "YulBlock",
																"src": "15052:22:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15054:16:3",
																				"nodeType": "YulIdentifier",
																				"src": "15054:16:3"
																			},
																			"nativeSrc": "15054:18:3",
																			"nodeType": "YulFunctionCall",
																			"src": "15054:18:3"
																		},
																		"nativeSrc": "15054:18:3",
																		"nodeType": "YulExpressionStatement",
																		"src": "15054:18:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "15043:4:3",
																		"nodeType": "YulIdentifier",
																		"src": "15043:4:3"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "15049:1:3",
																		"nodeType": "YulIdentifier",
																		"src": "15049:1:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15040:2:3",
																	"nodeType": "YulIdentifier",
																	"src": "15040:2:3"
																},
																"nativeSrc": "15040:11:3",
																"nodeType": "YulFunctionCall",
																"src": "15040:11:3"
															},
															"nativeSrc": "15037:37:3",
															"nodeType": "YulIf",
															"src": "15037:37:3"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "14952:128:3",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14983:1:3",
														"nodeType": "YulTypedName",
														"src": "14983:1:3",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14986:1:3",
														"nodeType": "YulTypedName",
														"src": "14986:1:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14992:4:3",
														"nodeType": "YulTypedName",
														"src": "14992:4:3",
														"type": ""
													}
												],
												"src": "14952:128:3"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, 0x20)\n            srcPtr := add(srcPtr, 0x20)\n        }\n        end := pos\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        pos := add(pos, 0x20)\n        let srcPtr := add(value, 0x20)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, 0x20)\n            srcPtr := add(srcPtr, 0x20)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bool_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_bool_$dyn_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_array_address_dyn(value0, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value1, tail_1)\n        mstore(add(headStart, 64), sub(tail_2, headStart))\n        let tail_3 := abi_encode_array_uint256_dyn(value2, tail_2)\n        mstore(add(headStart, 96), sub(tail_3, headStart))\n        let pos := tail_3\n        let length := mload(value3)\n        mstore(tail_3, length)\n        pos := add(tail_3, 32)\n        let srcPtr := add(value3, 32)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, iszero(iszero(mload(srcPtr))))\n            pos := add(pos, 32)\n            srcPtr := add(srcPtr, 32)\n        }\n        tail := pos\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 0x20), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(_1, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        value0 := memPtr\n        let value := 0\n        value := calldataload(add(headStart, 0x20))\n        value1 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 64))\n        value2 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 96))\n        value3 := value_2\n        let value_3 := 0\n        value_3 := calldataload(add(headStart, 128))\n        value4 := value_3\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_address_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_bool__to_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(pos, i), 0x20), mload(add(add(value, i), 0x20)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__to_t_address_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_bool_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 224)\n        tail := abi_encode_string(value1, add(headStart, 224))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_stringliteral_2f302c4a317eeeaa66ff142a8019be7f7a17e4f751a3204fdf93094743ebab94__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Invalid asset ID\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Unauthorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9e942198a9acdea3654333ae329526f4a71c67a256810bd427f0a4d17a278f95__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Bidding already closed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bool_t_uint256__to_t_bool_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_de457caaba2cd98cb8dedbc6d33667526c4ecb91f62ade29eeaee1391f7fa60f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid share count\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8c1cad1af2254206997ae1c3d22293c820984c676cba92a0d2942294ac246808__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Invalid minimum price per share\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2660f134c570050d07081949ab61b8e2ef1ea86f2b1188677e00a97048789cae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Invalid minimum total price\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Name cannot be empty\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_uint256_t_uint256__to_t_string_memory_ptr_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 96)\n        tail := abi_encode_string(value0, add(headStart, 96))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_119a2f4ad272726f690e20370d39e55ca3ab5b4c8e68a193f694062fe42aa1ce__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Bidding closed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_57592abfbda94eb909abef2196f77385e01da573d6304a2883cd72451377302b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Bidding period ended\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Invalid share amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_cec8607ff74902d73895ca204adfd06f34d0ecf19ec1c9aa31f2c5b658f0327c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Bidding period ongoing\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n}",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x9C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x686735C5 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x686735C5 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xA3D5F1E5 EQ PUSH2 0x17C JUMPI DUP1 PUSH4 0xB18CC358 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xB468E0B0 EQ PUSH2 0x1FB JUMPI DUP1 PUSH4 0xCF35BDD0 EQ PUSH2 0x21B JUMPI DUP1 PUSH4 0xEAFE7A74 EQ PUSH2 0x23B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x392CC45 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0x93755AD EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0x47582610 EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x503E0578 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x57C90DE5 EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC1 PUSH2 0xBC CALLDATASIZE PUSH1 0x4 PUSH2 0x191F JUMP JUMPDEST PUSH2 0x251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFA PUSH2 0xF5 CALLDATASIZE PUSH1 0x4 PUSH2 0x191F JUMP JUMPDEST PUSH2 0x505 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xD1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x127 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFA PUSH2 0x136 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A47 JUMP JUMPDEST PUSH2 0x5E4 JUMP JUMPDEST PUSH2 0xFA PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0x8D2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E PUSH2 0x169 CALLDATASIZE PUSH1 0x4 PUSH2 0x191F JUMP JUMPDEST PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP3 SWAP2 SWAP1 PUSH2 0x1B3C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x188 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19C PUSH2 0x197 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B1A JUMP JUMPDEST PUSH2 0xC4C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP6 AND DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xD1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x191F JUMP JUMPDEST PUSH2 0xC9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD1 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BB0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x207 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xFA PUSH2 0x216 CALLDATASIZE PUSH1 0x4 PUSH2 0x191F JUMP JUMPDEST PUSH2 0xDC5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x227 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x236 CALLDATASIZE PUSH1 0x4 PUSH2 0x191F JUMP JUMPDEST PUSH2 0xE76 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10D PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x60 DUP1 PUSH1 0x0 DUP6 GT DUP1 ISZERO PUSH2 0x269 JUMPI POP PUSH1 0x3 SLOAD DUP6 GT ISZERO JUMPDEST PUSH2 0x28E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2B6 JUMPI PUSH2 0x2B6 PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2DF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP6 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2FA JUMPI PUSH2 0x2FA PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x323 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP5 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x33E JUMPI PUSH2 0x33E PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x367 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x382 JUMPI PUSH2 0x382 PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3AB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4FB JUMPI DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x3CB JUMPI PUSH2 0x3CB PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD DUP8 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP9 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x3FC JUMPI PUSH2 0x3FC PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x42E JUMPI PUSH2 0x42E PUSH2 0x1C2A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x452 JUMPI PUSH2 0x452 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x470 JUMPI PUSH2 0x470 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD SLOAD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x494 JUMPI PUSH2 0x494 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x4B2 JUMPI PUSH2 0x4B2 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4E3 JUMPI PUSH2 0x4E3 PUSH2 0x1C2A JUMP JUMPDEST SWAP2 ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH1 0x1 ADD PUSH2 0x3B1 JUMP JUMPDEST POP POP POP SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH2 0x50D PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x544 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285 SWAP1 PUSH2 0x1C66 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x59A JUMPI PUSH2 0x595 DUP3 PUSH2 0xFA2 JUMP JUMPDEST PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE DUP4 SWAP2 PUSH32 0x4D7A5E450395FB8FB6B67C4751F80F057CD5A74550929306EFF2CAC7F0ECC188 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP PUSH2 0x5E1 PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x62A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A59081CDA185C994818DBDD5B9D PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x285 JUMP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x67A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206D696E696D756D2070726963652070657220736861726500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x285 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x6CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206D696E696D756D20746F74616C2070726963650000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x285 JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD GT PUSH2 0x712 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E616D652063616E6E6F7420626520656D707479 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x285 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x722 DUP4 PUSH2 0x1CAC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR DUP2 SSTORE SWAP1 DUP2 ADD PUSH2 0x758 DUP8 DUP3 PUSH2 0x1D4D JUMP JUMPDEST POP PUSH1 0x2 DUP2 ADD DUP6 SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP6 SWAP1 SSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 SSTORE PUSH1 0x5 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH2 0x784 DUP3 TIMESTAMP PUSH2 0x1E0B JUMP JUMPDEST PUSH1 0x6 DUP3 ADD SSTORE PUSH1 0x7 DUP2 ADD DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 KECCAK256 SWAP1 SWAP3 ADD DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP4 DUP2 MSTORE DUP1 DUP7 ADD DUP13 DUP2 MSTORE DUP2 DUP4 ADD DUP7 DUP2 MSTORE DUP6 DUP10 MSTORE PUSH1 0x8 DUP11 ADD SWAP1 SWAP8 MSTORE SWAP7 DUP3 SWAP1 KECCAK256 SWAP1 MLOAD DUP2 SLOAD SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR DUP3 SSTORE SWAP5 MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 MLOAD PUSH1 0x2 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x3 SLOAD SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x1B72BEABFA8420E9B47A1C3D6764A97E2044C51B3368B66B161A5FC8CEEBCCF SWAP1 PUSH2 0x84E SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP10 SWAP1 PUSH2 0x1E1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD DUP7 DUP2 MSTORE CALLER SWAP2 SWAP1 PUSH32 0x25AF9E0275ABBB4DE910D2062F5DCCA6D4C47F1313066083DD9D7077608A7A54 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH32 0xDBAD7356874FB84060A1E809F3B9F73D977DA5F6E62D52682C065D51D15435C6 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH2 0x8C2 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x8DA PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x92E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x109A59191A5B99C818DB1BDCD959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x285 JUMP JUMPDEST DUP1 PUSH1 0x6 ADD SLOAD TIMESTAMP LT PUSH2 0x978 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x109A59191A5B99C81C195C9A5BD908195B991959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x285 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x9BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A59081CDA185C9948185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x285 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE CALLER DUP2 MSTORE SWAP2 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 DUP2 ADD PUSH2 0x9EF CALLVALUE DUP7 PUSH2 0x1548 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP2 DUP3 ADD DUP2 SWAP1 MSTORE DUP4 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP7 SSTORE SWAP5 DUP3 MSTORE SWAP1 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x4 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP1 DUP3 ADD MLOAD SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP4 ADD SSTORE PUSH1 0x60 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE CALLER DUP4 PUSH32 0x51DB8E23B3F4479B162FD48823B8402895442B8F6CFD94F66239391881EC7B6F DUP5 PUSH2 0xA8B CALLVALUE DUP3 PUSH2 0x1548 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0xAAE PUSH1 0x1 PUSH1 0x0 SSTORE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x0 DUP4 GT DUP1 ISZERO PUSH2 0xAC7 JUMPI POP PUSH1 0x3 SLOAD DUP4 GT ISZERO JUMPDEST PUSH2 0xAE3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x7 DUP2 ADD SLOAD DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xB0E JUMPI PUSH2 0xB0E PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB37 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP4 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0xB52 JUMPI PUSH2 0xB52 PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xB7B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP3 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC44 JUMPI PUSH1 0x0 DUP4 PUSH1 0x7 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xBA0 JUMPI PUSH2 0xBA0 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 DUP7 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xBD3 JUMPI PUSH2 0xBD3 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP4 PUSH1 0x8 ADD PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC30 JUMPI PUSH2 0xC30 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP PUSH1 0x1 ADD PUSH2 0xB81 JUMP JUMPDEST POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP5 POP SWAP3 POP PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP9 GT DUP1 ISZERO PUSH2 0xCBC JUMPI POP PUSH1 0x3 SLOAD DUP9 GT ISZERO JUMPDEST PUSH2 0xCD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285 SWAP1 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 DUP5 ADD SLOAD PUSH1 0x5 DUP6 ADD SLOAD PUSH1 0x6 DUP7 ADD SLOAD SWAP7 DUP7 ADD DUP1 SLOAD SWAP7 SWAP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP7 AND SWAP7 SWAP1 SWAP6 PUSH1 0xFF SWAP1 SWAP3 AND SWAP2 SWAP1 DUP7 SWAP1 PUSH2 0xD2B SWAP1 PUSH2 0x1CC5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD57 SWAP1 PUSH2 0x1CC5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xDA4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xD79 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xDA4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD87 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP6 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH2 0xDCD PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE04 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285 SWAP1 PUSH2 0x1C40 JUMP JUMPDEST PUSH1 0x5 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE29 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x285 SWAP1 PUSH2 0x1C66 JUMP JUMPDEST DUP1 PUSH1 0x6 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x569 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x42696464696E6720706572696F64206F6E676F696E67 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x285 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 PUSH2 0xEA3 SWAP1 PUSH2 0x1CC5 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xECF SWAP1 PUSH2 0x1CC5 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF1C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEF1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF1C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xEFF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 DUP5 ADD SLOAD PUSH1 0x4 DUP6 ADD SLOAD PUSH1 0x5 DUP7 ADD SLOAD PUSH1 0x6 SWAP1 SWAP7 ADD SLOAD SWAP5 SWAP6 SWAP3 SWAP5 SWAP2 SWAP4 POP SWAP2 PUSH1 0xFF AND SWAP1 DUP8 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0xF9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x285 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0xFB9 DUP3 PUSH2 0x155D JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 DUP4 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP2 JUMPDEST DUP4 SLOAD DUP2 LT DUP1 ISZERO PUSH2 0xFE1 JUMPI POP PUSH1 0x0 DUP3 GT JUMPDEST ISZERO PUSH2 0x1080 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFFA JUMPI PUSH2 0xFFA PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD PUSH1 0x3 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x1020 JUMPI POP PUSH2 0x106E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP3 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x1034 JUMPI DUP4 PUSH2 0x103A JUMP JUMPDEST DUP2 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH2 0x105D PUSH2 0x1056 DUP4 PUSH1 0x2 ADD SLOAD DUP4 PUSH2 0x1763 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP7 SWAP1 PUSH2 0x176F JUMP JUMPDEST SWAP5 POP PUSH2 0x1069 DUP5 DUP3 PUSH2 0x177B JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST DUP1 PUSH2 0x1078 DUP2 PUSH2 0x1CAC JUMP JUMPDEST SWAP2 POP POP PUSH2 0xFD1 JUMP JUMPDEST POP PUSH1 0x4 DUP5 ADD SLOAD DUP3 LT DUP1 ISZERO SWAP1 PUSH2 0x14FB JUMPI PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SSTORE PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP7 ADD SLOAD DUP2 LT ISZERO PUSH2 0x10F6 JUMPI PUSH1 0x0 DUP7 PUSH1 0x7 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x10BF JUMPI PUSH2 0x10BF PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 MSTORE PUSH1 0x8 DUP10 ADD SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x1 SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 SSTORE SWAP2 SWAP1 SWAP2 ADD SWAP1 POP PUSH2 0x109C JUMP JUMPDEST POP PUSH2 0x1105 PUSH1 0x7 DUP7 ADD PUSH1 0x0 PUSH2 0x18ED JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 SLOAD DUP2 LT ISZERO PUSH2 0x14F5 JUMPI PUSH1 0x3 DUP7 ADD SLOAD ISZERO PUSH2 0x14F5 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x112F JUMPI PUSH2 0x112F PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD PUSH1 0x3 DUP2 ADD SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0x1155 JUMPI POP PUSH2 0x14ED JUMP JUMPDEST PUSH1 0x0 DUP8 PUSH1 0x3 ADD SLOAD DUP3 PUSH1 0x1 ADD SLOAD GT ISZERO PUSH2 0x1171 JUMPI DUP8 PUSH1 0x3 ADD SLOAD PUSH2 0x1177 JUMP JUMPDEST DUP2 PUSH1 0x1 ADD SLOAD JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1192 DUP4 PUSH1 0x2 ADD SLOAD DUP4 PUSH2 0x1763 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x11BB DUP3 PUSH2 0x11B5 DUP7 PUSH1 0x2 ADD SLOAD DUP8 PUSH1 0x1 ADD SLOAD PUSH2 0x1763 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x177B JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x1466 JUMPI DUP10 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x11FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x3 DUP11 ADD SLOAD PUSH2 0x120C SWAP1 DUP5 PUSH2 0x177B JUMP JUMPDEST PUSH1 0x3 DUP1 DUP13 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP5 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 DUP12 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1385 JUMPI DUP10 PUSH1 0x7 ADD DUP5 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP DUP11 PUSH1 0x8 ADD PUSH1 0x0 DUP7 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x13CE JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 DUP12 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x13AE SWAP1 DUP5 PUSH2 0x176F JUMP JUMPDEST DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 DUP13 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SSTORE JUMPDEST DUP4 SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP14 SWAP2 PUSH32 0x46D3C445B404E9DE2C80E1C0489CC92F23DFD5462CE7C6B3A1A54B3F0F70BCFC SWAP2 PUSH2 0x141A SWAP2 DUP9 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP4 SLOAD PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP13 SWAP1 PUSH32 0x25AF9E0275ABBB4DE910D2062F5DCCA6D4C47F1313066083DD9D7077608A7A54 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST DUP1 ISZERO PUSH2 0x14E8 JUMPI DUP4 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x14A5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP4 SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0xA171B6942063C6F2800CE40A780EDCE37BAA2B618571B11EEDD1E69E626E7D76 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1108 JUMP JUMPDEST POP PUSH2 0x1504 JUMP JUMPDEST PUSH2 0x1504 DUP7 PUSH2 0x1787 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 ISZERO ISZERO DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE DUP8 SWAP2 PUSH32 0x4D7A5E450395FB8FB6B67C4751F80F057CD5A74550929306EFF2CAC7F0ECC188 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1554 DUP3 DUP5 PUSH2 0x1E43 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x175E JUMPI PUSH1 0x0 PUSH2 0x1583 DUP3 PUSH1 0x1 PUSH2 0x1E0B JUMP JUMPDEST SWAP1 POP JUMPDEST DUP3 SLOAD DUP2 LT ISZERO PUSH2 0x1755 JUMPI DUP3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x15A1 JUMPI PUSH2 0x15A1 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD SLOAD DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x15C5 JUMPI PUSH2 0x15C5 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x174D JUMPI PUSH1 0x0 DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x15F1 JUMPI PUSH2 0x15F1 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x4 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x2 DUP4 ADD SLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x3 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE DUP5 SLOAD SWAP1 SWAP2 POP DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x1657 JUMPI PUSH2 0x1657 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD DUP5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1677 JUMPI PUSH2 0x1677 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 DUP3 SLOAD PUSH1 0x4 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE PUSH1 0x1 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x2 DUP1 DUP4 ADD SLOAD SWAP1 DUP3 ADD SSTORE PUSH1 0x3 SWAP2 DUP3 ADD SLOAD SWAP2 ADD DUP1 SLOAD PUSH1 0xFF SWAP1 SWAP3 AND ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 SLOAD DUP2 SWAP1 DUP6 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x16ED JUMPI PUSH2 0x16ED PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x4 SWAP3 SWAP1 SWAP3 MUL ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR DUP2 SSTORE SWAP1 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1586 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x156D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1554 DUP3 DUP5 PUSH2 0x1E65 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1554 DUP3 DUP5 PUSH2 0x1E0B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1554 DUP3 DUP5 PUSH2 0x1E7C JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 LT ISZERO PUSH2 0x175E JUMPI DUP2 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x17B2 JUMPI PUSH2 0x17B2 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x4 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND PUSH2 0x18E5 JUMPI PUSH1 0x0 PUSH2 0x1828 DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x17E4 JUMPI PUSH2 0x17E4 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD SLOAD DUP5 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1808 JUMPI PUSH2 0x1808 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x1 ADD SLOAD PUSH2 0x1763 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x183C JUMPI PUSH2 0x183C PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1881 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP3 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1894 JUMPI PUSH2 0x1894 PUSH2 0x1C2A JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x40 MLOAD DUP4 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 PUSH32 0xA171B6942063C6F2800CE40A780EDCE37BAA2B618571B11EEDD1E69E626E7D76 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST PUSH1 0x1 ADD PUSH2 0x1797 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5E1 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x191B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1907 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1931 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1973 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x194C JUMP JUMPDEST POP SWAP4 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH1 0x20 DUP4 ADD PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1973 JUMPI DUP2 MLOAD DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1991 JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH1 0x0 PUSH2 0x19C2 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x1938 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x19D4 DUP2 DUP8 PUSH2 0x197D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x19E8 DUP2 DUP7 PUSH2 0x197D JUMP JUMPDEST DUP4 DUP2 SUB PUSH1 0x60 DUP6 ADD MSTORE DUP5 MLOAD DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP8 ADD SWAP4 POP SWAP1 SWAP2 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A23 JUMPI DUP4 MLOAD ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1A03 JUMP JUMPDEST POP SWAP1 SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1A5F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1A75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x1A86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1A9F JUMPI PUSH2 0x1A9F PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1ACD JUMPI PUSH2 0x1ACD PUSH2 0x1A31 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP11 LT ISZERO PUSH2 0x1AE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 SWAP3 DUP3 ADD DUP4 ADD MSTORE SWAP10 SWAP1 DUP9 ADD CALLDATALOAD SWAP9 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP8 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP8 POP PUSH1 0x80 ADD CALLDATALOAD SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1B4F PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1938 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1B61 DUP2 DUP6 PUSH2 0x197D JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1B90 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1B74 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP2 MSTORE PUSH1 0xE0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1BD4 SWAP1 DUP4 ADD DUP10 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP8 SWAP1 SWAP8 MSTORE POP PUSH1 0x60 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x80 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x125B9D985B1A5908185CDCD95D081251 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x155B985D5D1A1BDC9A5E9959 PUSH1 0xA2 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x109A59191A5B99C8185B1C9958591E4818DB1BDCD959 PUSH1 0x52 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1CBE JUMPI PUSH2 0x1CBE PUSH2 0x1C96 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1CD9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1CF9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x175E JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1D26 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D46 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D32 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1D66 JUMPI PUSH2 0x1D66 PUSH2 0x1A31 JUMP JUMPDEST PUSH2 0x1D7A DUP2 PUSH2 0x1D74 DUP5 SLOAD PUSH2 0x1CC5 JUMP JUMPDEST DUP5 PUSH2 0x1CFF JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1DAE JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x1D96 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1D46 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1DDE JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1DBE JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1DFC JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1557 JUMPI PUSH2 0x1557 PUSH2 0x1C96 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1E31 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x1B6A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP5 SWAP1 SWAP5 MSTORE POP PUSH1 0x40 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1E60 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1557 JUMPI PUSH2 0x1557 PUSH2 0x1C96 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x1557 JUMPI PUSH2 0x1557 PUSH2 0x1C96 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBE PUSH28 0x34FF116E59147E9F73FA4041F7918791D42501B74360E5A0F1E0BE57 0xB9 PUSH30 0x64736F6C634300081D003300000000000000000000000000000000000000 ",
							"sourceMap": "179:12994:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5931:928;;;;;;;;;;-1:-1:-1;5931:928:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;6894:546;;;;;;;;;;-1:-1:-1;6894:546:2;;;;;:::i;:::-;;:::i;:::-;;3363:97;;;;;;;;;;-1:-1:-1;3443:10:2;;3363:97;;;2475:25:3;;;2463:2;2448:18;3363:97:2;2329:177:3;1848:1475:2;;;;;;;;;;-1:-1:-1;1848:1475:2;;;;;:::i;:::-;;:::i;5092:796::-;;;;;;:::i;:::-;;:::i;4309:745::-;;;;;;;;;;-1:-1:-1;4309:745:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1057:42::-;;;;;;;;;;-1:-1:-1;1057:42:2;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;5143:32:3;;;5125:51;;5207:2;5192:18;;5185:34;;;;5235:18;;;5228:34;5305:14;5298:22;5293:2;5278:18;;5271:50;5112:3;5097:19;1057:42:2;4900:427:3;3501:764:2;;;;;;;;;;-1:-1:-1;3501:764:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;7484:634::-;;;;;;;;;;-1:-1:-1;7484:634:2;;;;;:::i;:::-;;:::i;1012:39::-;;;;;;;;;;-1:-1:-1;1012:39:2;;;;;:::i;:::-;;:::i;1105:25::-;;;;;;;;;;;;;;;;5931:928;6003:24;6037:29;6076:31;6117:23;6176:1;6165:8;:12;:38;;;;;6193:10;;6181:8;:22;;6165:38;6157:67;;;;-1:-1:-1;;;6157:67:2;;;;;;;:::i;:::-;;;;;;;;;6243:18;6264:19;;;:9;:19;;;;;6312:11;;;-1:-1:-1;;;;;6352:23:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6352:23:2;;6342:33;;6414:8;-1:-1:-1;;;;;6400:23:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6400:23:2;;6385:38;;6464:8;-1:-1:-1;;;;;6450:23:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6450:23:2;;6433:40;;6506:8;-1:-1:-1;;;;;6495:20:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6495:20:2;;6483:32;;6539:9;6534:243;6558:8;6554:1;:12;6534:243;;;6600:4;6605:1;6600:7;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:14;6587:10;;-1:-1:-1;;;;;6600:14:2;;;;6587:7;;6595:1;;6587:10;;;;;;:::i;:::-;;;;;;:27;-1:-1:-1;;;;;6587:27:2;;;-1:-1:-1;;;;;6587:27:2;;;;;6646:4;6651:1;6646:7;;;;;;;;:::i;:::-;;;;;;;;;;;:19;;;6628:12;6641:1;6628:15;;;;;;;;:::i;:::-;;;;;;:37;;;;;6699:4;6704:1;6699:7;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;6679:14;6694:1;6679:17;;;;;;;;:::i;:::-;;;;;;:41;;;;;6749:4;6754:1;6749:7;;;;;;;;:::i;:::-;;;;;;;;;;;:17;;;;;;;;;;;;6734:9;6744:1;6734:12;;;;;;;;:::i;:::-;:32;;;:12;;;;;;;;;;;:32;6568:3;;6534:243;;;;6795:57;;5931:928;;;;;:::o;6894:546::-;2261:21:0;:19;:21::i;:::-;6964:19:2::1;6986:16:::0;;;:6:::1;:16;::::0;;;;7034:19;;-1:-1:-1;;;;;7034:19:2::1;7020:10;:33;7012:58;;;;-1:-1:-1::0;;;7012:58:2::1;;;;;;;:::i;:::-;7089:19;::::0;::::1;::::0;::::1;;7088:20;7080:55;;;;-1:-1:-1::0;;;7080:55:2::1;;;;;;;:::i;:::-;7188:19;::::0;::::1;:26:::0;;-1:-1:-1;;7188:26:2::1;7210:4;7188:26;::::0;;:19:::1;7273::::0;;;:9:::1;:19;::::0;;;;:26;:30;7270:164:::1;;7319:22;7332:8;7319:12;:22::i;:::-;7270:164;;;7377:46;::::0;;7400:5:::1;7766:41:3::0;;7407:15:2::1;7838:2:3::0;7823:18;;7816:34;7390:8:2;;7377:46:::1;::::0;7739:18:3;7377:46:2::1;;;;;;;7270:164;6954:486;2303:20:0::0;1716:1;2809:7;:22;2629:209;2303:20;6894:546:2;:::o;1848:1475::-;2089:1;2074:12;:16;2066:48;;;;-1:-1:-1;;;2066:48:2;;8063:2:3;2066:48:2;;;8045:21:3;8102:2;8082:18;;;8075:30;-1:-1:-1;;;8121:18:3;;;8114:49;8180:18;;2066:48:2;7861:343:3;2066:48:2;2152:1;2132:17;:21;2124:65;;;;-1:-1:-1;;;2124:65:2;;8411:2:3;2124:65:2;;;8393:21:3;8450:2;8430:18;;;8423:30;8489:33;8469:18;;;8462:61;8540:18;;2124:65:2;8209:355:3;2124:65:2;2228:1;2207:18;:22;2199:62;;;;-1:-1:-1;;;2199:62:2;;8771:2:3;2199:62:2;;;8753:21:3;8810:2;8790:18;;;8783:30;8849:29;8829:18;;;8822:57;8896:18;;2199:62:2;8569:351:3;2199:62:2;2301:1;2285:5;2279:19;:23;2271:56;;;;-1:-1:-1;;;2271:56:2;;9127:2:3;2271:56:2;;;9109:21:3;9166:2;9146:18;;;9139:30;-1:-1:-1;;;9185:18:3;;;9178:50;9245:18;;2271:56:2;8925:344:3;2271:56:2;2346:10;:12;;;:10;:12;;;:::i;:::-;;;;-1:-1:-1;;2409:10:2;;2377:22;2402:18;;;:6;:18;;;;;;;;2430:35;;-1:-1:-1;;;;;;2430:35:2;2455:10;2430:35;;;2402:18;2475:13;;:21;2491:5;2475:13;:21;:::i;:::-;-1:-1:-1;2506:20:2;;;:35;;;2551:24;;;:39;;;2658:26;;;:47;;;2715:22;;;:30;;-1:-1:-1;;2715:30:2;;;2781:34;2799:16;2781:15;:34;:::i;:::-;2755:23;;;:60;2908:23;;;:40;;;;;;;;-1:-1:-1;2908:40:2;;;;;;;;;;;;2937:10;-1:-1:-1;;;;;;2908:40:2;;;;;;;;2988:120;;;;;;;;;;;;;;;;;;;;;;;2958:27;;;:15;;;:27;;;;;;;:150;;;;;;;-1:-1:-1;;;;;2958:150:2;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2958:150:2;;;;;;;;;;3145:10;;3132:77;;2937:10;;3145;3132:77;;;;3169:5;;2988:120;;3190:18;;3132:77;:::i;:::-;;;;;;;;3235:10;;3224:48;;2475:25:3;;;3247:10:2;;3235;3224:48;;2463:2:3;2448:18;3224:48:2;;;;;;;3287:29;3305:10;;3287:29;;;;2475:25:3;;2463:2;2448:18;;2329:177;3287:29:2;;;;;;;;2056:1267;1848:1475;;;;;:::o;5092:796::-;2261:21:0;:19;:21::i;:::-;5190:19:2::1;5212:16:::0;;;:6:::1;:16;::::0;;;;5247:19:::1;::::0;::::1;::::0;::::1;;5246:20;5238:47;;;::::0;-1:-1:-1;;;5238:47:2;;12754:2:3;5238:47:2::1;::::0;::::1;12736:21:3::0;12793:2;12773:18;;;12766:30;-1:-1:-1;;;12812:18:3;;;12805:44;12866:18;;5238:47:2::1;12552:338:3::0;5238:47:2::1;5321:5;:20;;;5303:15;:38;5295:71;;;::::0;-1:-1:-1;;;5295:71:2;;13097:2:3;5295:71:2::1;::::0;::::1;13079:21:3::0;13136:2;13116:18;;;13109:30;-1:-1:-1;;;13155:18:3;;;13148:50;13215:18;;5295:71:2::1;12895:344:3::0;5295:71:2::1;5399:1;5384:12;:16;5376:49;;;::::0;-1:-1:-1;;;5376:49:2;;13446:2:3;5376:49:2::1;::::0;::::1;13428:21:3::0;13485:2;13465:18;;;13458:30;-1:-1:-1;;;13504:18:3;;;13497:50;13564:18;;5376:49:2::1;13244:344:3::0;5376:49:2::1;5585:19;::::0;;;:9:::1;:19;::::0;;;;;;;;5610:172;;::::1;::::0;::::1;::::0;;5636:10:::1;5610:172:::0;;;;::::1;::::0;;;5585:19;5610:172;;5714:27:::1;:9;5673:12:::0;5714:13:::1;:27::i;:::-;5610:172:::0;;5766:5:::1;5610:172;::::0;;::::1;::::0;;;5585:198;;5610:172;5585:198;;::::1;::::0;;;;;;;;;;;::::1;::::0;;::::1;;::::0;;-1:-1:-1;;;;;;5585:198:2::1;-1:-1:-1::0;;;;;5585:198:2;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;5585:198:2::1;::::0;::::1;;::::0;;;::::1;::::0;;5827:10:::1;5817:8:::0;5807:74:::1;5839:12:::0;5853:27:::1;:9;5839:12:::0;5853:13:::1;:27::i;:::-;5807:74;::::0;;13767:25:3;;;13823:2;13808:18;;13801:34;;;;13740:18;5807:74:2::1;;;;;;;5180:708;2303:20:0::0;1716:1;2809:7;:22;2629:209;2303:20;5092:796:2;;:::o;4309:745::-;4383:31;4424:28;4488:1;4477:8;:12;:38;;;;;4505:10;;4493:8;:22;;4477:38;4469:67;;;;-1:-1:-1;;;4469:67:2;;;;;;;:::i;:::-;4546:19;4568:16;;;:6;:16;;;;;4624:20;;;:27;;-1:-1:-1;;;;;4678:25:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4678:25:2;;4661:42;;4741:10;-1:-1:-1;;;;;4727:25:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4727:25:2;;4713:39;;4776:9;4771:222;4795:10;4791:1;:14;4771:222;;;4826:20;4849:5;:20;;4870:1;4849:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4849:23:2;4826:46;;4906:12;4886:14;4901:1;4886:17;;;;;;;;:::i;:::-;;;;;;:32;-1:-1:-1;;;;;4886:32:2;;;-1:-1:-1;;;;;4886:32:2;;;;;4949:5;:12;;:26;4962:12;-1:-1:-1;;;;;4949:26:2;-1:-1:-1;;;;;4949:26:2;;;;;;;;;;;;:33;;;4932:11;4944:1;4932:14;;;;;;;;:::i;:::-;;;;;;;;;;:50;-1:-1:-1;4807:3:2;;4771:222;;;;5011:36;;4309:745;;;:::o;1057:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1057:42:2;;;;-1:-1:-1;1057:42:2;-1:-1:-1;1057:42:2;;;:::o;3501:764::-;3581:21;3612:18;3640:19;3669:23;3739:25;3774:18;3802:22;3860:1;3849:8;:12;:38;;;;;3877:10;;3865:8;:22;;3849:38;3841:67;;;;-1:-1:-1;;;3841:67:2;;;;;;;:::i;:::-;3918:19;3940:16;;;:6;:16;;;;;;;;3996:19;;4053:17;;;;4084:21;;;;4158:23;;;;4195:19;;;;4228:20;;;;4029:10;;;3975:283;;3940:16;;-1:-1:-1;;;;;3996:19:2;;;;4029:10;;4195:19;;;;;4228:20;4029:10;;3975:283;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3501:764;;;;;;;;;:::o;7484:634::-;2261:21:0;:19;:21::i;:::-;7558:19:2::1;7580:16:::0;;;:6:::1;:16;::::0;;;;7628:19;;-1:-1:-1;;;;;7628:19:2::1;7614:10;:33;7606:58;;;;-1:-1:-1::0;;;7606:58:2::1;;;;;;;:::i;:::-;7683:19;::::0;::::1;::::0;::::1;;7682:20;7674:55;;;;-1:-1:-1::0;;;7674:55:2::1;;;;;;;:::i;:::-;7766:5;:20;;;7747:15;:39;;7739:74;;;::::0;-1:-1:-1;;;7739:74:2;;14048:2:3;7739:74:2::1;::::0;::::1;14030:21:3::0;14087:2;14067:18;;;14060:30;-1:-1:-1;;;14106:18:3;;;14099:52;14168:18;;7739:74:2::1;13846:346:3::0;1012:39:2;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1012:39:2;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1012:39:2;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1012:39:2;;;;;:::o;2336:287:0:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:0;;14399:2:3;2460:63:0;;;14381:21:3;14438:2;14418:18;;;14411:30;14477:33;14457:18;;;14450:61;14528:18;;2460:63:0;14197:355:3;2460:63:0;1759:1;2598:7;:18;2336:287::o;8169:4000:2:-;8228:19;8250:16;;;:6;:16;;;;;8335:19;8257:8;8335:9;:19::i;:::-;8373:18;8394:19;;;:9;:19;;;;;8583:21;;;;8394:19;;8373:18;;8623:496;8646:11;;8642:15;;:39;;;;;8680:1;8661:16;:20;8642:39;8623:496;;;8702:15;8720:4;8725:1;8720:7;;;;;;;;:::i;:::-;;;;;;;;;;;;;;8744:13;;;;8720:7;;-1:-1:-1;8744:13:2;;8741:26;;;8759:8;;;8741:26;8794:25;8842:16;8823:3;:15;;;:35;;8822:108;;8914:16;8822:108;;;8879:3;:15;;;8822:108;8794:136;;8977:59;8995:40;9017:3;:17;;;8995;:21;;:40;;;;:::i;:::-;8977:13;;:17;:59::i;:::-;8961:75;-1:-1:-1;9069:39:2;:16;9090:17;9069:20;:39::i;:::-;9050:58;;8688:431;;8623:496;8683:3;;;;:::i;:::-;;;;8623:496;;;-1:-1:-1;9238:23:2;;;;9221:40;;;;;9280:2808;;9404:17;;;;9380:21;;;:41;-1:-1:-1;9502:192:2;9526:20;;;:27;9522:31;;9502:192;;;9578:20;9601:5;:20;;9622:1;9601:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;9601:23:2;9642:26;;:12;;;:26;;;;;9601:23;9642:33;;;:37;;;;9555:3;;;;;-1:-1:-1;9502:192:2;;;-1:-1:-1;9752:27:2;9759:20;;;;9752:27;:::i;:::-;9855:9;9851:2125;9874:11;;9870:15;;9851:2125;;;9913:21;;;;9910:36;9941:5;9910:36;9981:15;9999:4;10004:1;9999:7;;;;;;;;:::i;:::-;;;;;;;;;;;;;;10027:13;;;;9999:7;;-1:-1:-1;10027:13:2;;10024:26;;;10042:8;;;10024:26;10085:25;10133:5;:21;;;10114:3;:15;;;:40;;10113:126;;10218:5;:21;;;10113:126;;;10179:3;:15;;;10113:126;10085:154;;10338:23;10364:40;10386:3;:17;;;10364;:21;;:40;;;;:::i;:::-;10338:66;;10422:20;10445:59;10488:15;10445:38;10465:3;:17;;;10445:3;:15;;;:19;;:38;;;;:::i;:::-;:42;;:59::i;:::-;10422:82;-1:-1:-1;10542:21:2;;10539:1174;;10653:19;;10645:54;;-1:-1:-1;;;;;10653:19:2;;;;10645:54;;;;;10683:15;;10653:19;10645:54;10653:19;10645:54;10683:15;10653:19;10645:54;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10813:21:2;;;;:44;;10839:17;10813:25;:44::i;:::-;10789:21;;;;:68;;;;10879:13;;:20;;-1:-1:-1;;10879:20:2;10895:4;10879:20;;;11003:10;;-1:-1:-1;;;;;11003:10:2;10879:13;10990:24;;;:12;;;:24;;;;;:31;;;10879:20;10990:31;10985:509;;11049:5;:20;;11075:3;:10;;;;;;;;;;-1:-1:-1;;;;;11075:10:2;11049:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;11049:37:2;;;;;-1:-1:-1;;;;;11049:37:2;;;;;;11139:189;;;;;;;;11194:3;:10;;;;;;;;;;-1:-1:-1;;;;;11194:10:2;-1:-1:-1;;;;;11139:189:2;;;;;11242:17;11139:189;;;;11297:4;11139:189;;;;;11112:5;:12;;:24;11125:3;:10;;;;;;;;;;-1:-1:-1;;;;;11125:10:2;-1:-1:-1;;;;;11112:24:2;-1:-1:-1;;;;;11112:24:2;;;;;;;;;;;;:216;;;;;;;;;;;;;-1:-1:-1;;;;;11112:216:2;;;;;-1:-1:-1;;;;;11112:216:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10985:509;;;11430:10;;-1:-1:-1;;;;;11430:10:2;11417:24;;;;:12;;;:24;;;;;11430:10;11417:31;;:54;;11453:17;11417:35;:54::i;:::-;11396:10;;-1:-1:-1;;;;;11396:10:2;11383:24;;;;:12;;;:24;;;;;11396:10;11383:31;:88;10985:509;11567:10;;11598:17;;;;11541:75;;-1:-1:-1;;;;;11567:10:2;;;;11557:8;;11541:75;;;;11579:17;13767:25:3;;13823:2;13808:18;;13801:34;13755:2;13740:18;;13593:248;11541:75:2;;;;;;;;11664:10;;11643:51;;2475:25:3;;;-1:-1:-1;;;;;11664:10:2;;;;11654:8;;11643:51;;2463:2:3;2448:18;11643:51:2;;;;;;;10539:1174;11796:16;;11793:169;;11844:10;;11836:42;;-1:-1:-1;;;;;11844:10:2;;;;11836:42;;;;;11865:12;;11844:10;11836:42;11844:10;11836:42;11865:12;11844:10;11836:42;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11918:10:2;;11905:38;;2475:25:3;;;-1:-1:-1;;;;;11918:10:2;;;;11905:38;;2463:2:3;2448:18;11905:38:2;;;;;;;11793:169;9892:2084;;;;9851:2125;9887:3;;9851:2125;;;;9280:2808;;;12053:24;12068:8;12053:14;:24::i;:::-;12111:51;;;7791:14:3;;7784:22;7766:41;;12146:15:2;7838:2:3;7823:18;;7816:34;12124:8:2;;12111:51;;7739:18:3;12111:51:2;;;;;;;8218:3951;;;;;8169:4000;:::o;3850:96:1:-;3908:7;3934:5;3938:1;3934;:5;:::i;:::-;3927:12;;3850:96;;;;;:::o;12217:443:2:-;12273:18;12294:19;;;:9;:19;;;;;;12323:331;12346:11;;12342:15;;12323:331;;;12382:9;12394:3;:1;12396;12394:3;:::i;:::-;12382:15;;12378:266;12403:11;;12399:15;;12378:266;;;12466:4;12471:1;12466:7;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;12442:4;12447:1;12442:7;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;:45;12439:191;;;12511:15;12529:4;12534:1;12529:7;;;;;;;;:::i;:::-;;;;;;;;;;12511:25;;;;;;;;12529:7;;;;;;;12511:25;;-1:-1:-1;;;;;12511:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12568:7;;12511:25;;-1:-1:-1;12568:4:2;;12573:1;;12568:7;;;;;;:::i;:::-;;;;;;;;;;;12558:4;12563:1;12558:7;;;;;;;;:::i;:::-;;;;;;;;;:17;;:7;;;;;:17;;-1:-1:-1;;;;;;12558:17:2;-1:-1:-1;;;;;12558:17:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12558:17:2;;;;;;;;;12597:7;;12607:4;;12597;;12602:1;;12597:7;;;;;;:::i;:::-;;;;;;;;;;:14;;:7;;;;;;:14;;-1:-1:-1;;;;;;12597:14:2;-1:-1:-1;;;;;12597:14:2;;;;;;;;;;;;;-1:-1:-1;12597:14:2;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;12597:14:2;;;;;;;;;;-1:-1:-1;12439:191:2;12416:3;;12378:266;;;-1:-1:-1;12359:3:2;;12323:331;;;;12263:397;12217:443;:::o;3465:96:1:-;3523:7;3549:5;3553:1;3549;:5;:::i;2755:96::-;2813:7;2839:5;2843:1;2839;:5;:::i;3122:96::-;3180:7;3206:5;3210:1;3206;:5;:::i;12735:436:2:-;12796:18;12817:19;;;:9;:19;;;;;;12846:319;12869:11;;12865:15;;12846:319;;;12905:4;12910:1;12905:7;;;;;;;;:::i;:::-;;;;;;;;;:17;:7;;;;;:17;;;;12901:254;;12942:20;12965:46;12989:4;12994:1;12989:7;;;;;;;;:::i;:::-;;;;;;;;;;;:21;;;12965:4;12970:1;12965:7;;;;;;;;:::i;:::-;;;;;;;;;;;:19;;;:23;;:46;;;;:::i;:::-;12942:69;;13037:4;13042:1;13037:7;;;;;;;;:::i;:::-;;;;;;;;;;;;;:14;13029:46;;-1:-1:-1;;;;;13037:14:2;;;;13029:46;;;;;13062:12;;13029:46;13037:7;13029:46;13062:12;13037:14;13029:46;;;;;;;;;;;;;;;;;;;;;13111:4;13116:1;13111:7;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:14;13098:42;;2475:25:3;;;-1:-1:-1;;;;;13111:14:2;;;;13098:42;;2448:18:3;13098:42:2;;;;;;;12924:231;12901:254;12882:3;;12846:319;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:226:3:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;187:23:3;;14:226;-1:-1:-1;14:226:3:o;245:446::-;298:3;336:5;330:12;363:6;358:3;351:19;395:4;390:3;386:14;379:21;;434:4;427:5;423:16;457:1;467:199;481:6;478:1;475:13;467:199;;;546:13;;-1:-1:-1;;;;;542:39:3;530:52;;611:4;602:14;;;;639:17;;;;578:1;496:9;467:199;;;-1:-1:-1;682:3:3;;245:446;-1:-1:-1;;;;245:446:3:o;696:420::-;749:3;787:5;781:12;814:6;809:3;802:19;846:4;841:3;837:14;830:21;;885:4;878:5;874:16;908:1;918:173;932:6;929:1;926:13;918:173;;;993:13;;981:26;;1036:4;1027:14;;;;1064:17;;;;954:1;947:9;918:173;;1121:1203;1528:3;1517:9;1510:22;1491:4;1555:57;1607:3;1596:9;1592:19;1584:6;1555:57;:::i;:::-;1660:9;1652:6;1648:22;1643:2;1632:9;1628:18;1621:50;1694:44;1731:6;1723;1694:44;:::i;:::-;1680:58;;1786:9;1778:6;1774:22;1769:2;1758:9;1754:18;1747:50;1820:44;1857:6;1849;1820:44;:::i;:::-;1900:22;;;1895:2;1880:18;;1873:50;1972:13;;1994:22;;;2044:2;2070:15;;;;-1:-1:-1;2032:15:3;;;;2103:1;2113:185;2127:6;2124:1;2121:13;2113:185;;;2202:13;;2195:21;2188:29;2176:42;;2247:2;2273:15;;;;2238:12;;;;2149:1;2142:9;2113:185;;;-1:-1:-1;2315:3:3;;1121:1203;-1:-1:-1;;;;;;;;1121:1203:3:o;2511:127::-;2572:10;2567:3;2563:20;2560:1;2553:31;2603:4;2600:1;2593:15;2627:4;2624:1;2617:15;2643:1431;2748:6;2756;2764;2772;2780;2833:3;2821:9;2812:7;2808:23;2804:33;2801:53;;;2850:1;2847;2840:12;2801:53;2890:9;2877:23;-1:-1:-1;;;;;2915:6:3;2912:30;2909:50;;;2955:1;2952;2945:12;2909:50;2978:22;;3031:4;3023:13;;3019:27;-1:-1:-1;3009:55:3;;3060:1;3057;3050:12;3009:55;3100:2;3087:16;-1:-1:-1;;;;;3118:6:3;3115:30;3112:56;;;3148:18;;:::i;:::-;3197:2;3191:9;3289:2;3251:17;;-1:-1:-1;;3247:31:3;;;3280:2;3243:40;3239:54;3227:67;;-1:-1:-1;;;;;3309:34:3;;3345:22;;;3306:62;3303:88;;;3371:18;;:::i;:::-;3407:2;3400:22;3431;;;3472:15;;;3489:4;3468:26;3465:39;-1:-1:-1;3462:59:3;;;3517:1;3514;3507:12;3462:59;3577:6;3570:4;3566:2;3562:13;3555:4;3547:6;3543:17;3530:54;3632:1;3625:4;3604:19;;;3600:30;;3593:41;3604:19;3713:20;;;3700:34;;-1:-1:-1;3831:2:3;3816:18;;3803:32;;3934:2;3919:18;;3906:32;;-1:-1:-1;4037:3:3;4022:19;4009:33;;-1:-1:-1;3608:6:3;-1:-1:-1;;;;2643:1431:3:o;4079:346::-;4147:6;4155;4208:2;4196:9;4187:7;4183:23;4179:32;4176:52;;;4224:1;4221;4214:12;4176:52;-1:-1:-1;;4269:23:3;;;4389:2;4374:18;;;4361:32;;-1:-1:-1;4079:346:3:o;4430:465::-;4687:2;4676:9;4669:21;4650:4;4713:56;4765:2;4754:9;4750:18;4742:6;4713:56;:::i;:::-;4817:9;4809:6;4805:22;4800:2;4789:9;4785:18;4778:50;4845:44;4882:6;4874;4845:44;:::i;:::-;4837:52;4430:465;-1:-1:-1;;;;;4430:465:3:o;5332:400::-;5374:3;5412:5;5406:12;5439:6;5434:3;5427:19;5464:1;5474:139;5488:6;5485:1;5482:13;5474:139;;;5596:4;5581:13;;;5577:24;;5571:31;5551:11;;;5547:22;;5540:63;5503:12;5474:139;;;5478:3;5658:1;5651:4;5642:6;5637:3;5633:16;5629:27;5622:38;5721:4;5714:2;5710:7;5705:2;5697:6;5693:15;5689:29;5684:3;5680:39;5676:50;5669:57;;;5332:400;;;;:::o;5737:687::-;-1:-1:-1;;;;;6048:32:3;;6030:51;;6117:3;6112:2;6097:18;;6090:31;;;-1:-1:-1;;6138:46:3;;6164:19;;6156:6;6138:46;:::i;:::-;6215:2;6200:18;;6193:34;;;;-1:-1:-1;6258:2:3;6243:18;;6236:34;;;;6301:3;6286:19;;6279:35;;;;6358:14;6351:22;6345:3;6330:19;;6323:51;6405:3;6390:19;;;6383:35;6130:54;5737:687;-1:-1:-1;;5737:687:3:o;6429:340::-;6631:2;6613:21;;;6670:2;6650:18;;;6643:30;-1:-1:-1;;;6704:2:3;6689:18;;6682:46;6760:2;6745:18;;6429:340::o;6774:127::-;6835:10;6830:3;6826:20;6823:1;6816:31;6866:4;6863:1;6856:15;6890:4;6887:1;6880:15;6906:336;7108:2;7090:21;;;7147:2;7127:18;;;7120:30;-1:-1:-1;;;7181:2:3;7166:18;;7159:42;7233:2;7218:18;;6906:336::o;7247:346::-;7449:2;7431:21;;;7488:2;7468:18;;;7461:30;-1:-1:-1;;;7522:2:3;7507:18;;7500:52;7584:2;7569:18;;7247:346::o;9274:127::-;9335:10;9330:3;9326:20;9323:1;9316:31;9366:4;9363:1;9356:15;9390:4;9387:1;9380:15;9406:135;9445:3;9466:17;;;9463:43;;9486:18;;:::i;:::-;-1:-1:-1;9533:1:3;9522:13;;9406:135::o;9546:380::-;9625:1;9621:12;;;;9668;;;9689:61;;9743:4;9735:6;9731:17;9721:27;;9689:61;9796:2;9788:6;9785:14;9765:18;9762:38;9759:161;;9842:10;9837:3;9833:20;9830:1;9823:31;9877:4;9874:1;9867:15;9905:4;9902:1;9895:15;9759:161;;9546:380;;;:::o;10057:518::-;10159:2;10154:3;10151:11;10148:421;;;10195:5;10192:1;10185:16;10239:4;10236:1;10226:18;10309:2;10297:10;10293:19;10290:1;10286:27;10280:4;10276:38;10345:4;10333:10;10330:20;10327:47;;;-1:-1:-1;10368:4:3;10327:47;10423:2;10418:3;10414:12;10411:1;10407:20;10401:4;10397:31;10387:41;;10478:81;10496:2;10489:5;10486:13;10478:81;;;10555:1;10541:16;;10522:1;10511:13;10478:81;;;10482:3;;10057:518;;;:::o;10751:1299::-;10877:3;10871:10;-1:-1:-1;;;;;10896:6:3;10893:30;10890:56;;;10926:18;;:::i;:::-;10955:97;11045:6;11005:38;11037:4;11031:11;11005:38;:::i;:::-;10999:4;10955:97;:::i;:::-;11101:4;11132:2;11121:14;;11149:1;11144:649;;;;11837:1;11854:6;11851:89;;;-1:-1:-1;11906:19:3;;;11900:26;11851:89;-1:-1:-1;;10708:1:3;10704:11;;;10700:24;10696:29;10686:40;10732:1;10728:11;;;10683:57;11953:81;;11114:930;;11144:649;10004:1;9997:14;;;10041:4;10028:18;;-1:-1:-1;;11180:20:3;;;11298:222;11312:7;11309:1;11306:14;11298:222;;;11394:19;;;11388:26;11373:42;;11501:4;11486:20;;;;11454:1;11442:14;;;;11328:12;11298:222;;;11302:3;11548:6;11539:7;11536:19;11533:201;;;11609:19;;;11603:26;-1:-1:-1;;11692:1:3;11688:14;;;11704:3;11684:24;11680:37;11676:42;11661:58;11646:74;;11533:201;-1:-1:-1;;;;11780:1:3;11764:14;;;11760:22;11747:36;;-1:-1:-1;10751:1299:3:o;12055:125::-;12120:9;;;12141:10;;;12138:36;;;12154:18;;:::i;12185:362::-;12390:2;12379:9;12372:21;12353:4;12410:45;12451:2;12440:9;12436:18;12428:6;12410:45;:::i;:::-;12486:2;12471:18;;12464:34;;;;-1:-1:-1;12529:2:3;12514:18;12507:34;12402:53;12185:362;-1:-1:-1;12185:362:3:o;14557:217::-;14597:1;14623;14613:132;;14667:10;14662:3;14658:20;14655:1;14648:31;14702:4;14699:1;14692:15;14730:4;14727:1;14720:15;14613:132;-1:-1:-1;14759:9:3;;14557:217::o;14779:168::-;14852:9;;;14883;;14900:15;;;14894:22;;14880:37;14870:71;;14921:18;;:::i;14952:128::-;15019:9;;;15040:11;;;15037:37;;;15054:18;;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1575400",
								"executionCost": "23758",
								"totalCost": "1599158"
							},
							"external": {
								"assetBids(uint256,uint256)": "11149",
								"assetCount()": "2405",
								"assets(uint256)": "infinite",
								"createAssetOffering(string,uint256,uint256,uint256,uint256)": "infinite",
								"endBidding(uint256)": "infinite",
								"executeBidding(uint256)": "infinite",
								"getAssetBasicDetails(uint256)": "infinite",
								"getAssetBids(uint256)": "infinite",
								"getAssetOwners(uint256)": "infinite",
								"getLatestAssetCount()": "2326",
								"placeBid(uint256,uint256)": "infinite"
							},
							"internal": {
								"_processBids(uint256)": "infinite",
								"_refundAllBids(uint256)": "infinite",
								"_sortBids(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 13173,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 179,
									"end": 13173,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 179,
									"end": 13173,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 179,
									"end": 13173,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 179,
									"end": 13173,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 179,
									"end": 13173,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 179,
									"end": 13173,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 13173,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 179,
									"end": 13173,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 13173,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 179,
									"end": 13173,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 179,
									"end": 13173,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 13173,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 179,
									"end": 13173,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 13173,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 179,
									"end": 13173,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 13173,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 13173,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 179,
									"end": 13173,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 13173,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220be7b34ff116e59147e9f73fa4041f7918791d42501b74360e5a0f1e0be57b97d64736f6c634300081d0033",
									".code": [
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH",
											"source": 2,
											"value": "686735C5"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH",
											"source": 2,
											"value": "686735C5"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH",
											"source": 2,
											"value": "A3D5F1E5"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH",
											"source": 2,
											"value": "B18CC358"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH",
											"source": 2,
											"value": "B468E0B0"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH",
											"source": 2,
											"value": "CF35BDD0"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH",
											"source": 2,
											"value": "EAFE7A74"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH",
											"source": 2,
											"value": "392CC45"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH",
											"source": 2,
											"value": "93755AD"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH",
											"source": 2,
											"value": "47582610"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH",
											"source": 2,
											"value": "503E0578"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH",
											"source": 2,
											"value": "57C90DE5"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 179,
											"end": 13173,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 5931,
											"end": 6859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 5931,
											"end": 6859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5931,
											"end": 6859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 6894,
											"end": 7440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6894,
											"end": 7440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3460,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3363,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3460,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3460,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3460,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3363,
											"end": 3460,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3460,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3363,
											"end": 3460,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3460,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3460,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3363,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3443,
											"end": 3453,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3443,
											"end": 3453,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3460,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 3363,
											"end": 3460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3363,
											"end": 3460,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3363,
											"end": 3460,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2465,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3363,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2329,
											"end": 2506,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 1848,
											"end": 3323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1848,
											"end": 3323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5092,
											"end": 5888,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5092,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5092,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 5092,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5092,
											"end": 5888,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5092,
											"end": 5888,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5092,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5092,
											"end": 5888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5092,
											"end": 5888,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5092,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5092,
											"end": 5888,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5092,
											"end": 5888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 4309,
											"end": 5054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4309,
											"end": 5054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4309,
											"end": 5054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1057,
											"end": 1099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1057,
											"end": 1099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5143,
											"end": 5175,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5143,
											"end": 5175,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 5143,
											"end": 5175,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5125,
											"end": 5176,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5125,
											"end": 5176,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5207,
											"end": 5209,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5192,
											"end": 5210,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5192,
											"end": 5210,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 5185,
											"end": 5219,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5235,
											"end": 5253,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5235,
											"end": 5253,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5235,
											"end": 5253,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5228,
											"end": 5262,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5305,
											"end": 5319,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5298,
											"end": 5320,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5293,
											"end": 5295,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 5278,
											"end": 5296,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5278,
											"end": 5296,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5271,
											"end": 5321,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5112,
											"end": 5115,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 5097,
											"end": 5116,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 4900,
											"end": 5327,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 3501,
											"end": 4265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3501,
											"end": 4265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 3501,
											"end": 4265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7484,
											"end": 8118,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 7484,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7484,
											"end": 8118,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7484,
											"end": 8118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7484,
											"end": 8118,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7484,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 7484,
											"end": 8118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7484,
											"end": 8118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7484,
											"end": 8118,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7484,
											"end": 8118,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7484,
											"end": 8118,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 7484,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7484,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 7484,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 7484,
											"end": 8118,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 7484,
											"end": 8118,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7484,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 7484,
											"end": 8118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7484,
											"end": 8118,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 7484,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7484,
											"end": 8118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7484,
											"end": 8118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1012,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1012,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1130,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1105,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1130,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1130,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1105,
											"end": 1130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1105,
											"end": 1130,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1130,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1130,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1105,
											"end": 1130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1130,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 1105,
											"end": 1130,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1105,
											"end": 1130,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1130,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1105,
											"end": 1130,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6003,
											"end": 6027,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6037,
											"end": 6066,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6076,
											"end": 6107,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 6117,
											"end": 6140,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6176,
											"end": 6177,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6165,
											"end": 6173,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6165,
											"end": 6177,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6165,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6165,
											"end": 6203,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6165,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 6165,
											"end": 6203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6165,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6193,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6193,
											"end": 6203,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6181,
											"end": 6189,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6181,
											"end": 6203,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6181,
											"end": 6203,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6165,
											"end": 6203,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 6165,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 6157,
											"end": 6224,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6157,
											"end": 6224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6157,
											"end": 6224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6224,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6157,
											"end": 6224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 6157,
											"end": 6224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6224,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 6157,
											"end": 6224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6224,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 6157,
											"end": 6224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6157,
											"end": 6224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6224,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6157,
											"end": 6224,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 6157,
											"end": 6224,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6243,
											"end": 6261,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6264,
											"end": 6283,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6264,
											"end": 6283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6264,
											"end": 6283,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6264,
											"end": 6273,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6264,
											"end": 6283,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6264,
											"end": 6283,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6264,
											"end": 6283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6264,
											"end": 6283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6264,
											"end": 6283,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6323,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6323,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 6352,
											"end": 6375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6342,
											"end": 6375,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 6342,
											"end": 6375,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6414,
											"end": 6422,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 6400,
											"end": 6423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6400,
											"end": 6423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6385,
											"end": 6423,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 6385,
											"end": 6423,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6464,
											"end": 6472,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 6450,
											"end": 6473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6450,
											"end": 6473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6433,
											"end": 6473,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6433,
											"end": 6473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6506,
											"end": 6514,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 6495,
											"end": 6515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6495,
											"end": 6515,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6483,
											"end": 6515,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6483,
											"end": 6515,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6539,
											"end": 6548,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6534,
											"end": 6777,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6534,
											"end": 6777,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6558,
											"end": 6566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6554,
											"end": 6555,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6554,
											"end": 6566,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6777,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 6534,
											"end": 6777,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6605,
											"end": 6606,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 6600,
											"end": 6607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6607,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6614,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6587,
											"end": 6597,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 6587,
											"end": 6597,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6600,
											"end": 6614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6614,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6614,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6600,
											"end": 6614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6587,
											"end": 6594,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 6587,
											"end": 6594,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6595,
											"end": 6596,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6595,
											"end": 6596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6587,
											"end": 6597,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6587,
											"end": 6597,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6587,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 6587,
											"end": 6597,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6587,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 6587,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 6587,
											"end": 6597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6587,
											"end": 6597,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 6587,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6587,
											"end": 6597,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6587,
											"end": 6597,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6587,
											"end": 6597,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6587,
											"end": 6597,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6587,
											"end": 6597,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6587,
											"end": 6614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6587,
											"end": 6614,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6587,
											"end": 6614,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6587,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6587,
											"end": 6614,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6587,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6587,
											"end": 6614,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6587,
											"end": 6614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6587,
											"end": 6614,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6650,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6651,
											"end": 6652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 6646,
											"end": 6653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6653,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6665,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6646,
											"end": 6665,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6646,
											"end": 6665,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6640,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6641,
											"end": 6642,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6643,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6643,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 6628,
											"end": 6643,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 6628,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 6628,
											"end": 6643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6643,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 6628,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6643,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6628,
											"end": 6643,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6643,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6628,
											"end": 6643,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6643,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6665,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6665,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6628,
											"end": 6665,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6704,
											"end": 6705,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6706,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6706,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6706,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6706,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 6699,
											"end": 6706,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 6699,
											"end": 6706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 6699,
											"end": 6706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6706,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 6699,
											"end": 6706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 6706,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6706,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6699,
											"end": 6706,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6699,
											"end": 6706,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6706,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6699,
											"end": 6706,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6706,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6720,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6699,
											"end": 6720,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6699,
											"end": 6720,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6679,
											"end": 6693,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6694,
											"end": 6695,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6679,
											"end": 6696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6679,
											"end": 6696,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6679,
											"end": 6696,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6679,
											"end": 6696,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6679,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 6679,
											"end": 6696,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6679,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 6679,
											"end": 6696,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 6679,
											"end": 6696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6679,
											"end": 6696,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 6679,
											"end": 6696,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6679,
											"end": 6696,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6679,
											"end": 6696,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6679,
											"end": 6696,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6679,
											"end": 6696,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6679,
											"end": 6696,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6679,
											"end": 6720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6679,
											"end": 6720,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6679,
											"end": 6720,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6679,
											"end": 6720,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6679,
											"end": 6720,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6753,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6754,
											"end": 6755,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6756,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6756,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6756,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6756,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 6749,
											"end": 6756,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 6749,
											"end": 6756,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 6749,
											"end": 6756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6756,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 6749,
											"end": 6756,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6749,
											"end": 6756,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6756,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6749,
											"end": 6756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6749,
											"end": 6756,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6756,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6756,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6749,
											"end": 6756,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6756,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6766,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 6749,
											"end": 6766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6749,
											"end": 6766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6766,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6766,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6749,
											"end": 6766,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6766,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 6749,
											"end": 6766,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 6749,
											"end": 6766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6743,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 6744,
											"end": 6745,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 6734,
											"end": 6746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6766,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6766,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6766,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6746,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6734,
											"end": 6766,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6568,
											"end": 6571,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6568,
											"end": 6571,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6777,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 6534,
											"end": 6777,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6777,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 6534,
											"end": 6777,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6777,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6795,
											"end": 6852,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6795,
											"end": 6852,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5931,
											"end": 6859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6964,
											"end": 6983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6986,
											"end": 7002,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6986,
											"end": 7002,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6986,
											"end": 7002,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6986,
											"end": 6992,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6986,
											"end": 7002,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6986,
											"end": 7002,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6986,
											"end": 7002,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6986,
											"end": 7002,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6986,
											"end": 7002,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7034,
											"end": 7053,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7034,
											"end": 7053,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7034,
											"end": 7053,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7020,
											"end": 7030,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7020,
											"end": 7053,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7012,
											"end": 7070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 7012,
											"end": 7070,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7012,
											"end": 7070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7012,
											"end": 7070,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7012,
											"end": 7070,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7012,
											"end": 7070,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7012,
											"end": 7070,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7012,
											"end": 7070,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7012,
											"end": 7070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 7012,
											"end": 7070,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7012,
											"end": 7070,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 7012,
											"end": 7070,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7012,
											"end": 7070,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 7012,
											"end": 7070,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 7089,
											"end": 7108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7108,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7108,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 7089,
											"end": 7108,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7088,
											"end": 7108,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7080,
											"end": 7135,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 7080,
											"end": 7135,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7080,
											"end": 7135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7080,
											"end": 7135,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7080,
											"end": 7135,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7080,
											"end": 7135,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7080,
											"end": 7135,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7080,
											"end": 7135,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7080,
											"end": 7135,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 7080,
											"end": 7135,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7080,
											"end": 7135,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 7080,
											"end": 7135,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7080,
											"end": 7135,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 7080,
											"end": 7135,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7188,
											"end": 7207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 7188,
											"end": 7207,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7188,
											"end": 7207,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7188,
											"end": 7214,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7188,
											"end": 7214,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7188,
											"end": 7214,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7210,
											"end": 7214,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7188,
											"end": 7214,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 7188,
											"end": 7214,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7188,
											"end": 7214,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7188,
											"end": 7207,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7273,
											"end": 7292,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7273,
											"end": 7292,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7273,
											"end": 7292,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7273,
											"end": 7282,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7273,
											"end": 7292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7273,
											"end": 7292,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7273,
											"end": 7292,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7273,
											"end": 7292,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7273,
											"end": 7292,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7273,
											"end": 7299,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7273,
											"end": 7303,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7270,
											"end": 7434,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 7270,
											"end": 7434,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7319,
											"end": 7341,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 7332,
											"end": 7340,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7319,
											"end": 7331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 7319,
											"end": 7341,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7319,
											"end": 7341,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 7319,
											"end": 7341,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7270,
											"end": 7434,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 7270,
											"end": 7434,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7270,
											"end": 7434,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 7270,
											"end": 7434,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7377,
											"end": 7423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7377,
											"end": 7423,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7377,
											"end": 7423,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7400,
											"end": 7405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7766,
											"end": 7807,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7766,
											"end": 7807,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7407,
											"end": 7422,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 7838,
											"end": 7840,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7823,
											"end": 7841,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7841,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7816,
											"end": 7850,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7390,
											"end": 7398,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7390,
											"end": 7398,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7377,
											"end": 7423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4D7A5E450395FB8FB6B67C4751F80F057CD5A74550929306EFF2CAC7F0ECC188"
										},
										{
											"begin": 7377,
											"end": 7423,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7739,
											"end": 7757,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7377,
											"end": 7423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7377,
											"end": 7423,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7377,
											"end": 7423,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7377,
											"end": 7423,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7377,
											"end": 7423,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7377,
											"end": 7423,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7377,
											"end": 7423,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 7270,
											"end": 7434,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 7270,
											"end": 7434,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6954,
											"end": 7440,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6894,
											"end": 7440,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6894,
											"end": 7440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2089,
											"end": 2090,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2074,
											"end": 2086,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2090,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2066,
											"end": 2114,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2114,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2066,
											"end": 2114,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2066,
											"end": 2114,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2114,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8063,
											"end": 8065,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2066,
											"end": 2114,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2066,
											"end": 2114,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2066,
											"end": 2114,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8045,
											"end": 8066,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8102,
											"end": 8104,
											"name": "PUSH",
											"source": 3,
											"value": "13"
										},
										{
											"begin": 8082,
											"end": 8100,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8082,
											"end": 8100,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8082,
											"end": 8100,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8075,
											"end": 8105,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081CDA185C994818DBDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8121,
											"end": 8139,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8114,
											"end": 8163,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8180,
											"end": 8198,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 8180,
											"end": 8198,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2066,
											"end": 2114,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 7861,
											"end": 8204,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2066,
											"end": 2114,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 2066,
											"end": 2114,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2152,
											"end": 2153,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2132,
											"end": 2149,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2132,
											"end": 2153,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2124,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2124,
											"end": 2189,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2124,
											"end": 2189,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2124,
											"end": 2189,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2124,
											"end": 2189,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2124,
											"end": 2189,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8413,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2124,
											"end": 2189,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2124,
											"end": 2189,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2124,
											"end": 2189,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8393,
											"end": 8414,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8450,
											"end": 8452,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8430,
											"end": 8448,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8423,
											"end": 8453,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8489,
											"end": 8522,
											"name": "PUSH",
											"source": 3,
											"value": "496E76616C6964206D696E696D756D2070726963652070657220736861726500"
										},
										{
											"begin": 8469,
											"end": 8487,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 8469,
											"end": 8487,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8469,
											"end": 8487,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8462,
											"end": 8523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8540,
											"end": 8558,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 8540,
											"end": 8558,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2124,
											"end": 2189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 8209,
											"end": 8564,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2124,
											"end": 2189,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2124,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2229,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2207,
											"end": 2225,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2207,
											"end": 2229,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2199,
											"end": 2261,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2261,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2199,
											"end": 2261,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2199,
											"end": 2261,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2261,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8771,
											"end": 8773,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2199,
											"end": 2261,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2199,
											"end": 2261,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8753,
											"end": 8774,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8810,
											"end": 8812,
											"name": "PUSH",
											"source": 3,
											"value": "1B"
										},
										{
											"begin": 8790,
											"end": 8808,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 8790,
											"end": 8808,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8790,
											"end": 8808,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8783,
											"end": 8813,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8849,
											"end": 8878,
											"name": "PUSH",
											"source": 3,
											"value": "496E76616C6964206D696E696D756D20746F74616C2070726963650000000000"
										},
										{
											"begin": 8829,
											"end": 8847,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 8829,
											"end": 8847,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8829,
											"end": 8847,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 8822,
											"end": 8879,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 8896,
											"end": 8914,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 8896,
											"end": 8914,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 8569,
											"end": 8920,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2199,
											"end": 2261,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 2199,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2301,
											"end": 2302,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2285,
											"end": 2290,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2298,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2279,
											"end": 2302,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2271,
											"end": 2327,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2327,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2271,
											"end": 2327,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2271,
											"end": 2327,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2327,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9127,
											"end": 9129,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2271,
											"end": 2327,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2271,
											"end": 2327,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2271,
											"end": 2327,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9109,
											"end": 9130,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9166,
											"end": 9168,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 9146,
											"end": 9164,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9146,
											"end": 9164,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9146,
											"end": 9164,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9139,
											"end": 9169,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E616D652063616E6E6F7420626520656D707479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9185,
											"end": 9203,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 9185,
											"end": 9203,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9185,
											"end": 9203,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9178,
											"end": 9228,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9245,
											"end": 9263,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 9245,
											"end": 9263,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2271,
											"end": 2327,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 8925,
											"end": 9269,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2271,
											"end": 2327,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2271,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2356,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2356,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 2346,
											"end": 2358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2346,
											"end": 2358,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2409,
											"end": 2419,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2409,
											"end": 2419,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2377,
											"end": 2399,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2420,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2420,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2408,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2402,
											"end": 2420,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2402,
											"end": 2420,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2420,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2420,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2420,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2420,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2465,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2465,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2430,
											"end": 2465,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2465,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2465,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2465,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2430,
											"end": 2465,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2402,
											"end": 2420,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2488,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2491,
											"end": 2496,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2488,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2496,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 2475,
											"end": 2496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2496,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 2475,
											"end": 2496,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2506,
											"end": 2526,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2506,
											"end": 2526,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2526,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2541,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2541,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2506,
											"end": 2541,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2575,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2551,
											"end": 2575,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2575,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2590,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2590,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2551,
											"end": 2590,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2684,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2658,
											"end": 2684,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2684,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2705,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2705,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2737,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2715,
											"end": 2737,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2737,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2745,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2745,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2715,
											"end": 2745,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2715,
											"end": 2745,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2799,
											"end": 2815,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2796,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2815,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 2781,
											"end": 2815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2781,
											"end": 2815,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 2781,
											"end": 2815,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2778,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2755,
											"end": 2778,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2778,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2755,
											"end": 2815,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2931,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2908,
											"end": 2931,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2931,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2947,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2908,
											"end": 2948,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2985,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2985,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2985,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2973,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2985,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2985,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2985,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2985,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2985,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 2985,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2958,
											"end": 3108,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3155,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3145,
											"end": 3155,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3209,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3209,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2947,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2937,
											"end": 2947,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3145,
											"end": 3155,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3209,
											"name": "PUSH",
											"source": 2,
											"value": "1B72BEABFA8420E9B47A1C3D6764A97E2044C51B3368B66B161A5FC8CEEBCCF"
										},
										{
											"begin": 3132,
											"end": 3209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3132,
											"end": 3209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3169,
											"end": 3174,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 3169,
											"end": 3174,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 2988,
											"end": 3108,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3209,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 3132,
											"end": 3209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3209,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 3132,
											"end": 3209,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3209,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3132,
											"end": 3209,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3209,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3209,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3209,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3209,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3132,
											"end": 3209,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3245,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3235,
											"end": 3245,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3224,
											"end": 3272,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3247,
											"end": 3257,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3247,
											"end": 3257,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3235,
											"end": 3245,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3272,
											"name": "PUSH",
											"source": 2,
											"value": "25AF9E0275ABBB4DE910D2062F5DCCA6D4C47F1313066083DD9D7077608A7A54"
										},
										{
											"begin": 3224,
											"end": 3272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2463,
											"end": 2465,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3224,
											"end": 3272,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3224,
											"end": 3272,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3272,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3272,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3224,
											"end": 3272,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3316,
											"name": "PUSH",
											"source": 2,
											"value": "DBAD7356874FB84060A1E809F3B9F73D977DA5F6E62D52682C065D51D15435C6"
										},
										{
											"begin": 3305,
											"end": 3315,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3305,
											"end": 3315,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3316,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3287,
											"end": 3316,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3316,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3287,
											"end": 3316,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2463,
											"end": 2465,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2448,
											"end": 2466,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2329,
											"end": 2506,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3287,
											"end": 3316,
											"name": "tag",
											"source": 2,
											"value": "154"
										},
										{
											"begin": 3287,
											"end": 3316,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3316,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3287,
											"end": 3316,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3316,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3316,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3316,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3316,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3287,
											"end": 3316,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2056,
											"end": 3323,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 3323,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1848,
											"end": 3323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5092,
											"end": 5888,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5092,
											"end": 5888,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5190,
											"end": 5209,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5212,
											"end": 5228,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5212,
											"end": 5228,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5212,
											"end": 5228,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5212,
											"end": 5218,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5212,
											"end": 5228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5212,
											"end": 5228,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5212,
											"end": 5228,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5212,
											"end": 5228,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5212,
											"end": 5228,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5247,
											"end": 5266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 5247,
											"end": 5266,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5247,
											"end": 5266,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5247,
											"end": 5266,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5247,
											"end": 5266,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 5247,
											"end": 5266,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5246,
											"end": 5266,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5238,
											"end": 5285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5238,
											"end": 5285,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5238,
											"end": 5285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5238,
											"end": 5285,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5238,
											"end": 5285,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5238,
											"end": 5285,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12754,
											"end": 12756,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5238,
											"end": 5285,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5238,
											"end": 5285,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5238,
											"end": 5285,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12736,
											"end": 12757,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12793,
											"end": 12795,
											"name": "PUSH",
											"source": 3,
											"value": "E"
										},
										{
											"begin": 12773,
											"end": 12791,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 12773,
											"end": 12791,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12773,
											"end": 12791,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12766,
											"end": 12796,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "109A59191A5B99C818DB1BDCD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12812,
											"end": 12830,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 12812,
											"end": 12830,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12812,
											"end": 12830,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12805,
											"end": 12849,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12866,
											"end": 12884,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 12866,
											"end": 12884,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5238,
											"end": 5285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 12552,
											"end": 12890,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5238,
											"end": 5285,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 5238,
											"end": 5285,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5321,
											"end": 5326,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5321,
											"end": 5341,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5321,
											"end": 5341,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5321,
											"end": 5341,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5318,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 5303,
											"end": 5341,
											"modifierDepth": 1,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 5295,
											"end": 5366,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5295,
											"end": 5366,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5295,
											"end": 5366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5295,
											"end": 5366,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5295,
											"end": 5366,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5295,
											"end": 5366,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13097,
											"end": 13099,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5295,
											"end": 5366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5295,
											"end": 5366,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5295,
											"end": 5366,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13079,
											"end": 13100,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13136,
											"end": 13138,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 13116,
											"end": 13134,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 13116,
											"end": 13134,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13116,
											"end": 13134,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13109,
											"end": 13139,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "109A59191A5B99C81C195C9A5BD908195B991959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13155,
											"end": 13173,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 13155,
											"end": 13173,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13155,
											"end": 13173,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13148,
											"end": 13198,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13215,
											"end": 13233,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 13215,
											"end": 13233,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5366,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 12895,
											"end": 13239,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5295,
											"end": 5366,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 5295,
											"end": 5366,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5399,
											"end": 5400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5396,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5384,
											"end": 5400,
											"modifierDepth": 1,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 5376,
											"end": 5425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5376,
											"end": 5425,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5376,
											"end": 5425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5376,
											"end": 5425,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5376,
											"end": 5425,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5376,
											"end": 5425,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13446,
											"end": 13448,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5376,
											"end": 5425,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5376,
											"end": 5425,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5376,
											"end": 5425,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13428,
											"end": 13449,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13485,
											"end": 13487,
											"name": "PUSH",
											"source": 3,
											"value": "14"
										},
										{
											"begin": 13465,
											"end": 13483,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 13465,
											"end": 13483,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13465,
											"end": 13483,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13458,
											"end": 13488,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081CDA185C9948185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13504,
											"end": 13522,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 13504,
											"end": 13522,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13504,
											"end": 13522,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13497,
											"end": 13547,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13564,
											"end": 13582,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 13564,
											"end": 13582,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5376,
											"end": 5425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 13244,
											"end": 13588,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5376,
											"end": 5425,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 5376,
											"end": 5425,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5585,
											"end": 5604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5585,
											"end": 5604,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5585,
											"end": 5604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5604,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5585,
											"end": 5604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5604,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5610,
											"end": 5782,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5636,
											"end": 5646,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5714,
											"end": 5741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5714,
											"end": 5723,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5673,
											"end": 5685,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5714,
											"end": 5727,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5714,
											"end": 5741,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5714,
											"end": 5741,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 5714,
											"end": 5741,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5766,
											"end": 5771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5782,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5610,
											"end": 5782,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 5610,
											"end": 5782,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5585,
											"end": 5783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 5585,
											"end": 5783,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5585,
											"end": 5783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5585,
											"end": 5783,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5827,
											"end": 5837,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5817,
											"end": 5825,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "51DB8E23B3F4479B162FD48823B8402895442B8F6CFD94F66239391881EC7B6F"
										},
										{
											"begin": 5839,
											"end": 5851,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5853,
											"end": 5880,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 5853,
											"end": 5862,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5839,
											"end": 5851,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5853,
											"end": 5866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 5853,
											"end": 5880,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5853,
											"end": 5880,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 5853,
											"end": 5880,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5807,
											"end": 5881,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5881,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13767,
											"end": 13792,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 13767,
											"end": 13792,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13767,
											"end": 13792,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13823,
											"end": 13825,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13808,
											"end": 13826,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 13808,
											"end": 13826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13801,
											"end": 13835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13801,
											"end": 13835,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13801,
											"end": 13835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 13801,
											"end": 13835,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13740,
											"end": 13758,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5807,
											"end": 5881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5807,
											"end": 5881,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5881,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5881,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5881,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5881,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 5180,
											"end": 5888,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5092,
											"end": 5888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5092,
											"end": 5888,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5092,
											"end": 5888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4383,
											"end": 4414,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4424,
											"end": 4452,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4488,
											"end": 4489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4477,
											"end": 4485,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4477,
											"end": 4489,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4477,
											"end": 4515,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4477,
											"end": 4515,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4477,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 4477,
											"end": 4515,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4477,
											"end": 4515,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4505,
											"end": 4515,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4505,
											"end": 4515,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4493,
											"end": 4501,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4493,
											"end": 4515,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4493,
											"end": 4515,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4477,
											"end": 4515,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 4477,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4469,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 4469,
											"end": 4536,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4469,
											"end": 4536,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4469,
											"end": 4536,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4469,
											"end": 4536,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4469,
											"end": 4536,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4469,
											"end": 4536,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4469,
											"end": 4536,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4469,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4469,
											"end": 4536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4469,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4469,
											"end": 4536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4469,
											"end": 4536,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 4469,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4546,
											"end": 4565,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4568,
											"end": 4584,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4568,
											"end": 4584,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4568,
											"end": 4584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4568,
											"end": 4574,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4568,
											"end": 4584,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4568,
											"end": 4584,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4568,
											"end": 4584,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4568,
											"end": 4584,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4568,
											"end": 4584,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4624,
											"end": 4644,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4624,
											"end": 4644,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4624,
											"end": 4644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4624,
											"end": 4651,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4624,
											"end": 4651,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4678,
											"end": 4703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4678,
											"end": 4703,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4661,
											"end": 4703,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4661,
											"end": 4703,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4741,
											"end": 4751,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 4727,
											"end": 4752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "CALLDATACOPY",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4727,
											"end": 4752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4713,
											"end": 4752,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4713,
											"end": 4752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4776,
											"end": 4785,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4771,
											"end": 4993,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 4771,
											"end": 4993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4795,
											"end": 4805,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4791,
											"end": 4792,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4791,
											"end": 4805,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4993,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 4771,
											"end": 4993,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4826,
											"end": 4846,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4854,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4849,
											"end": 4869,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4849,
											"end": 4869,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4870,
											"end": 4871,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4849,
											"end": 4872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4849,
											"end": 4872,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4826,
											"end": 4872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4826,
											"end": 4872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4906,
											"end": 4918,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4900,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4901,
											"end": 4902,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4903,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4903,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4903,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4903,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 4886,
											"end": 4903,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 4886,
											"end": 4903,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4886,
											"end": 4903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4903,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 4886,
											"end": 4903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4903,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4886,
											"end": 4903,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4903,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4886,
											"end": 4903,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4903,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4886,
											"end": 4918,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4918,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4918,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4886,
											"end": 4918,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4918,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4918,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4886,
											"end": 4918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4954,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4961,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 4949,
											"end": 4961,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4975,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4962,
											"end": 4974,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4949,
											"end": 4975,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4949,
											"end": 4975,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4975,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4975,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4975,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4975,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4975,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4975,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4949,
											"end": 4975,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4975,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4975,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4982,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4982,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4949,
											"end": 4982,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4943,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4944,
											"end": 4945,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 4932,
											"end": 4946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4932,
											"end": 4982,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4807,
											"end": 4810,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4807,
											"end": 4810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 4771,
											"end": 4993,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4993,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 4771,
											"end": 4993,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5047,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5011,
											"end": 5047,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 5054,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4309,
											"end": 5054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1057,
											"end": 1099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3581,
											"end": 3602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3612,
											"end": 3630,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3640,
											"end": 3659,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3692,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3739,
											"end": 3764,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3774,
											"end": 3792,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3802,
											"end": 3824,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3860,
											"end": 3861,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3857,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3861,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3887,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3887,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 3849,
											"end": 3887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3877,
											"end": 3887,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 3877,
											"end": 3887,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3865,
											"end": 3873,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3865,
											"end": 3887,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3865,
											"end": 3887,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3849,
											"end": 3887,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 3849,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3841,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 3841,
											"end": 3908,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3841,
											"end": 3908,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3841,
											"end": 3908,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3841,
											"end": 3908,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3841,
											"end": 3908,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3841,
											"end": 3908,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3841,
											"end": 3908,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3841,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 3841,
											"end": 3908,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3841,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3841,
											"end": 3908,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3841,
											"end": 3908,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 3841,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3918,
											"end": 3937,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3940,
											"end": 3956,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 3940,
											"end": 3956,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3940,
											"end": 3956,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3940,
											"end": 3946,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3940,
											"end": 3956,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3940,
											"end": 3956,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3940,
											"end": 3956,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3940,
											"end": 3956,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3940,
											"end": 3956,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3940,
											"end": 3956,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3940,
											"end": 3956,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3940,
											"end": 3956,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3996,
											"end": 4015,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3996,
											"end": 4015,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4053,
											"end": 4070,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 4053,
											"end": 4070,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4053,
											"end": 4070,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4053,
											"end": 4070,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4105,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 4084,
											"end": 4105,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4105,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4084,
											"end": 4105,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4181,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4181,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4181,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4181,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4195,
											"end": 4214,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4195,
											"end": 4214,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4195,
											"end": 4214,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4195,
											"end": 4214,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4228,
											"end": 4248,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 4228,
											"end": 4248,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4228,
											"end": 4248,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4228,
											"end": 4248,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4039,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4039,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4039,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3940,
											"end": 3956,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 3940,
											"end": 3956,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3996,
											"end": 4015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3996,
											"end": 4015,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 3996,
											"end": 4015,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3996,
											"end": 4015,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4039,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 4195,
											"end": 4214,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 4195,
											"end": 4214,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4195,
											"end": 4214,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4195,
											"end": 4214,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4195,
											"end": 4214,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4228,
											"end": 4248,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4039,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 4029,
											"end": 4039,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 3975,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 3975,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3975,
											"end": 4258,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "SWAP8",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3501,
											"end": 4265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7484,
											"end": 8118,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 7484,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7558,
											"end": 7577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7580,
											"end": 7596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7580,
											"end": 7596,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7580,
											"end": 7596,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7580,
											"end": 7586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7580,
											"end": 7596,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7580,
											"end": 7596,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7580,
											"end": 7596,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7580,
											"end": 7596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7580,
											"end": 7596,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7628,
											"end": 7647,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7628,
											"end": 7647,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7628,
											"end": 7647,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7614,
											"end": 7624,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 7614,
											"end": 7647,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 7606,
											"end": 7664,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7606,
											"end": 7664,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7606,
											"end": 7664,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7664,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7606,
											"end": 7664,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 7606,
											"end": 7664,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 7606,
											"end": 7664,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7606,
											"end": 7664,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 7606,
											"end": 7664,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7683,
											"end": 7702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 7683,
											"end": 7702,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7683,
											"end": 7702,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7683,
											"end": 7702,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7683,
											"end": 7702,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 7683,
											"end": 7702,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7682,
											"end": 7702,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7674,
											"end": 7729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 7674,
											"end": 7729,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7674,
											"end": 7729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7674,
											"end": 7729,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7674,
											"end": 7729,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7674,
											"end": 7729,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7674,
											"end": 7729,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7674,
											"end": 7729,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7674,
											"end": 7729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 7674,
											"end": 7729,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7674,
											"end": 7729,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 7674,
											"end": 7729,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7674,
											"end": 7729,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 7674,
											"end": 7729,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7766,
											"end": 7771,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7766,
											"end": 7786,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 7766,
											"end": 7786,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7766,
											"end": 7786,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7747,
											"end": 7762,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 7747,
											"end": 7786,
											"modifierDepth": 1,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7747,
											"end": 7786,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7739,
											"end": 7813,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 7739,
											"end": 7813,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7739,
											"end": 7813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7739,
											"end": 7813,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7739,
											"end": 7813,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7739,
											"end": 7813,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14048,
											"end": 14050,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7739,
											"end": 7813,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7739,
											"end": 7813,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7739,
											"end": 7813,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14030,
											"end": 14051,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14087,
											"end": 14089,
											"name": "PUSH",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 14067,
											"end": 14085,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 14067,
											"end": 14085,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14067,
											"end": 14085,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14060,
											"end": 14090,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "42696464696E6720706572696F64206F6E676F696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14106,
											"end": 14124,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 14106,
											"end": 14124,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14106,
											"end": 14124,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14099,
											"end": 14151,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14168,
											"end": 14186,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 14168,
											"end": 14186,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7739,
											"end": 7813,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 13846,
											"end": 14192,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 1012,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 1012,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1012,
											"end": 1051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14399,
											"end": 14401,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14381,
											"end": 14402,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14438,
											"end": 14440,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 14418,
											"end": 14436,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 14418,
											"end": 14436,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14418,
											"end": 14436,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14411,
											"end": 14441,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14477,
											"end": 14510,
											"name": "PUSH",
											"source": 3,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14457,
											"end": 14475,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14450,
											"end": 14511,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14528,
											"end": 14546,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 14528,
											"end": 14546,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 14197,
											"end": 14552,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8169,
											"end": 12169,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 8169,
											"end": 12169,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8228,
											"end": 8247,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8250,
											"end": 8266,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8250,
											"end": 8266,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8250,
											"end": 8266,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8250,
											"end": 8256,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8250,
											"end": 8266,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8250,
											"end": 8266,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8250,
											"end": 8266,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8250,
											"end": 8266,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8250,
											"end": 8266,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8354,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 8257,
											"end": 8265,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8344,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 8335,
											"end": 8354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8354,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 8335,
											"end": 8354,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8373,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8394,
											"end": 8413,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8394,
											"end": 8413,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8394,
											"end": 8413,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8394,
											"end": 8403,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 8394,
											"end": 8413,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8394,
											"end": 8413,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8394,
											"end": 8413,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8394,
											"end": 8413,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8394,
											"end": 8413,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8583,
											"end": 8604,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 8583,
											"end": 8604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8583,
											"end": 8604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8583,
											"end": 8604,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8394,
											"end": 8413,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8394,
											"end": 8413,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8373,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8373,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8623,
											"end": 9119,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 8623,
											"end": 9119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8646,
											"end": 8657,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8646,
											"end": 8657,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8642,
											"end": 8657,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8642,
											"end": 8657,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8642,
											"end": 8681,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8642,
											"end": 8681,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8642,
											"end": 8681,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8642,
											"end": 8681,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8642,
											"end": 8681,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8680,
											"end": 8681,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8661,
											"end": 8677,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8661,
											"end": 8681,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8642,
											"end": 8681,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 8642,
											"end": 8681,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8623,
											"end": 9119,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8623,
											"end": 9119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 8623,
											"end": 9119,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8702,
											"end": 8717,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8720,
											"end": 8724,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8725,
											"end": 8726,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 8720,
											"end": 8727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8744,
											"end": 8757,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 8744,
											"end": 8757,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8744,
											"end": 8757,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8744,
											"end": 8757,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8720,
											"end": 8727,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8744,
											"end": 8757,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 8744,
											"end": 8757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8741,
											"end": 8767,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8741,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 8741,
											"end": 8767,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8759,
											"end": 8767,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8759,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8759,
											"end": 8767,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8741,
											"end": 8767,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 8741,
											"end": 8767,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8819,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8842,
											"end": 8858,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8826,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8838,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8823,
											"end": 8838,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8838,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8858,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 8823,
											"end": 8858,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8822,
											"end": 8930,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 8822,
											"end": 8930,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8914,
											"end": 8930,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8822,
											"end": 8930,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 8822,
											"end": 8930,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8822,
											"end": 8930,
											"name": "tag",
											"source": 2,
											"value": "241"
										},
										{
											"begin": 8822,
											"end": 8930,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8879,
											"end": 8882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8879,
											"end": 8894,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 8879,
											"end": 8894,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8879,
											"end": 8894,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8822,
											"end": 8930,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 8822,
											"end": 8930,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8930,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8794,
											"end": 8930,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8977,
											"end": 9036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 8995,
											"end": 9035,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 9017,
											"end": 9020,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9017,
											"end": 9034,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9017,
											"end": 9034,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9017,
											"end": 9034,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8995,
											"end": 9012,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8995,
											"end": 9016,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 8995,
											"end": 9016,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8995,
											"end": 9035,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8995,
											"end": 9035,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8995,
											"end": 9035,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8995,
											"end": 9035,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8995,
											"end": 9035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8995,
											"end": 9035,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 8995,
											"end": 9035,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8977,
											"end": 8990,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 8977,
											"end": 8990,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8977,
											"end": 8994,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 8977,
											"end": 9036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8977,
											"end": 9036,
											"name": "tag",
											"source": 2,
											"value": "243"
										},
										{
											"begin": 8977,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8961,
											"end": 9036,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9069,
											"end": 9108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9090,
											"end": 9107,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 9069,
											"end": 9108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9069,
											"end": 9108,
											"name": "tag",
											"source": 2,
											"value": "247"
										},
										{
											"begin": 9069,
											"end": 9108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9050,
											"end": 9108,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 9050,
											"end": 9108,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8688,
											"end": 9119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8688,
											"end": 9119,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8623,
											"end": 9119,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 8623,
											"end": 9119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8686,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 8683,
											"end": 8686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "145"
										},
										{
											"begin": 8683,
											"end": 8686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8686,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 8683,
											"end": 8686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8686,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8686,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8683,
											"end": 8686,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8623,
											"end": 9119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 8623,
											"end": 9119,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8623,
											"end": 9119,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 8623,
											"end": 9119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9238,
											"end": 9261,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9221,
											"end": 9261,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9221,
											"end": 9261,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9221,
											"end": 9261,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9221,
											"end": 9261,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9221,
											"end": 9261,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9280,
											"end": 12088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 9280,
											"end": 12088,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9404,
											"end": 9421,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 9404,
											"end": 9421,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 9404,
											"end": 9421,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9404,
											"end": 9421,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9380,
											"end": 9401,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9380,
											"end": 9401,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9380,
											"end": 9401,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9380,
											"end": 9421,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9502,
											"end": 9694,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 9502,
											"end": 9694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9546,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 9526,
											"end": 9546,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9546,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9526,
											"end": 9553,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9522,
											"end": 9553,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9522,
											"end": 9553,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9502,
											"end": 9694,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9502,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 9502,
											"end": 9694,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9578,
											"end": 9598,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9601,
											"end": 9606,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9601,
											"end": 9621,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 9601,
											"end": 9621,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9622,
											"end": 9623,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 9601,
											"end": 9624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9642,
											"end": 9668,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9642,
											"end": 9668,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9642,
											"end": 9654,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 9642,
											"end": 9654,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 9642,
											"end": 9654,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9642,
											"end": 9668,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9642,
											"end": 9668,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9642,
											"end": 9668,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9642,
											"end": 9668,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9642,
											"end": 9668,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9601,
											"end": 9624,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9642,
											"end": 9675,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9642,
											"end": 9675,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9642,
											"end": 9675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9642,
											"end": 9679,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9642,
											"end": 9679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9642,
											"end": 9679,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9642,
											"end": 9679,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 9555,
											"end": 9558,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9555,
											"end": 9558,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9555,
											"end": 9558,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9555,
											"end": 9558,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9555,
											"end": 9558,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9502,
											"end": 9694,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 9502,
											"end": 9694,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9502,
											"end": 9694,
											"name": "tag",
											"source": 2,
											"value": "252"
										},
										{
											"begin": 9502,
											"end": 9694,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9752,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 9759,
											"end": 9779,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 9759,
											"end": 9779,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9779,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9759,
											"end": 9779,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9752,
											"end": 9779,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 9752,
											"end": 9779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9752,
											"end": 9779,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 9752,
											"end": 9779,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9855,
											"end": 9864,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9851,
											"end": 11976,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 9851,
											"end": 11976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9874,
											"end": 9885,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 9874,
											"end": 9885,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9870,
											"end": 9885,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9870,
											"end": 9885,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 11976,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 11976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 9851,
											"end": 11976,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9913,
											"end": 9934,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 9913,
											"end": 9934,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 9913,
											"end": 9934,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9913,
											"end": 9934,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9910,
											"end": 9946,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 9941,
											"end": 9946,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 9910,
											"end": 9946,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9981,
											"end": 9996,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10003,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10004,
											"end": 10005,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 9999,
											"end": 10006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10027,
											"end": 10040,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 10027,
											"end": 10040,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10027,
											"end": 10040,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10027,
											"end": 10040,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9999,
											"end": 10006,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10027,
											"end": 10040,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 10027,
											"end": 10040,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10050,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 10024,
											"end": 10050,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10042,
											"end": 10050,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10042,
											"end": 10050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 10042,
											"end": 10050,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10024,
											"end": 10050,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 10024,
											"end": 10050,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10110,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10133,
											"end": 10138,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10133,
											"end": 10154,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 10133,
											"end": 10154,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10133,
											"end": 10154,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10114,
											"end": 10117,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10114,
											"end": 10129,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10114,
											"end": 10129,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10114,
											"end": 10129,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10114,
											"end": 10154,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 10114,
											"end": 10154,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 10113,
											"end": 10239,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10218,
											"end": 10223,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10218,
											"end": 10239,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 10218,
											"end": 10239,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10218,
											"end": 10239,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10239,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 10113,
											"end": 10239,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10239,
											"name": "tag",
											"source": 2,
											"value": "267"
										},
										{
											"begin": 10113,
											"end": 10239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10179,
											"end": 10182,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10179,
											"end": 10194,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10179,
											"end": 10194,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10179,
											"end": 10194,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10113,
											"end": 10239,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 10113,
											"end": 10239,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10239,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10085,
											"end": 10239,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10338,
											"end": 10361,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10364,
											"end": 10404,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10386,
											"end": 10389,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10386,
											"end": 10403,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10386,
											"end": 10403,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10386,
											"end": 10403,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10364,
											"end": 10381,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10364,
											"end": 10385,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 10364,
											"end": 10385,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10364,
											"end": 10404,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10364,
											"end": 10404,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10364,
											"end": 10404,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10364,
											"end": 10404,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10364,
											"end": 10404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10364,
											"end": 10404,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 10364,
											"end": 10404,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10338,
											"end": 10404,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10338,
											"end": 10404,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10422,
											"end": 10442,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10445,
											"end": 10504,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 10488,
											"end": 10503,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10483,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 10465,
											"end": 10468,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10465,
											"end": 10482,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10465,
											"end": 10482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10465,
											"end": 10482,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10448,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10460,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10445,
											"end": 10460,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10460,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10464,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 10445,
											"end": 10464,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10483,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10483,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10445,
											"end": 10483,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10483,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 10445,
											"end": 10483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10487,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10487,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 10445,
											"end": 10504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10445,
											"end": 10504,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 10445,
											"end": 10504,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10422,
											"end": 10504,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10542,
											"end": 10563,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10542,
											"end": 10563,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10539,
											"end": 11713,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 10539,
											"end": 11713,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10653,
											"end": 10672,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 10653,
											"end": 10672,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10653,
											"end": 10672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10653,
											"end": 10672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10653,
											"end": 10672,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10653,
											"end": 10672,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10683,
											"end": 10698,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10683,
											"end": 10698,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10653,
											"end": 10672,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10653,
											"end": 10672,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10683,
											"end": 10698,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10653,
											"end": 10672,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "tag",
											"source": 2,
											"value": "274"
										},
										{
											"begin": 10645,
											"end": 10699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10813,
											"end": 10834,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10813,
											"end": 10857,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 10813,
											"end": 10857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10839,
											"end": 10856,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10813,
											"end": 10838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "248"
										},
										{
											"begin": 10813,
											"end": 10857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10813,
											"end": 10857,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 10813,
											"end": 10857,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10810,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 10789,
											"end": 10810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10810,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10857,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10857,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10857,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10879,
											"end": 10892,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10879,
											"end": 10892,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10879,
											"end": 10899,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10879,
											"end": 10899,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10879,
											"end": 10899,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10895,
											"end": 10899,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10879,
											"end": 10899,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 10879,
											"end": 10899,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10879,
											"end": 10899,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11003,
											"end": 11013,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11003,
											"end": 11013,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11003,
											"end": 11013,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10879,
											"end": 10892,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10990,
											"end": 11014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 11014,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 11014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 11002,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 10990,
											"end": 11002,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 11002,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 11014,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10990,
											"end": 11014,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 11014,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10990,
											"end": 11014,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 11014,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 11021,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10990,
											"end": 11021,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 11021,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 10879,
											"end": 10899,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 10990,
											"end": 11021,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11494,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 10985,
											"end": 11494,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11054,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11069,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 11049,
											"end": 11069,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11075,
											"end": 11078,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11075,
											"end": 11085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11075,
											"end": 11085,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11075,
											"end": 11085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11075,
											"end": 11085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11075,
											"end": 11085,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11075,
											"end": 11085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11075,
											"end": 11085,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11075,
											"end": 11085,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 11075,
											"end": 11085,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11075,
											"end": 11085,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11075,
											"end": 11085,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11049,
											"end": 11086,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11139,
											"end": 11328,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11139,
											"end": 11328,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11139,
											"end": 11328,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11139,
											"end": 11328,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 11139,
											"end": 11328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11139,
											"end": 11328,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11139,
											"end": 11328,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11139,
											"end": 11328,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11194,
											"end": 11197,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11194,
											"end": 11204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11194,
											"end": 11204,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11194,
											"end": 11204,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11194,
											"end": 11204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11194,
											"end": 11204,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11194,
											"end": 11204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11194,
											"end": 11204,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11194,
											"end": 11204,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 11194,
											"end": 11204,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11194,
											"end": 11204,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11194,
											"end": 11204,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11139,
											"end": 11328,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11139,
											"end": 11328,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11139,
											"end": 11328,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11139,
											"end": 11328,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11139,
											"end": 11328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11242,
											"end": 11259,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11139,
											"end": 11328,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11139,
											"end": 11328,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11139,
											"end": 11328,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11139,
											"end": 11328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11297,
											"end": 11301,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11139,
											"end": 11328,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11139,
											"end": 11328,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11139,
											"end": 11328,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11139,
											"end": 11328,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11139,
											"end": 11328,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11117,
											"name": "DUP11",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11124,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 11112,
											"end": 11124,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11136,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11125,
											"end": 11128,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11125,
											"end": 11135,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11125,
											"end": 11135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11125,
											"end": 11135,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11125,
											"end": 11135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11125,
											"end": 11135,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11125,
											"end": 11135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11125,
											"end": 11135,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11125,
											"end": 11135,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 11125,
											"end": 11135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11125,
											"end": 11135,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11125,
											"end": 11135,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11112,
											"end": 11136,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11112,
											"end": 11136,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11136,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11136,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11136,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11112,
											"end": 11136,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11136,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11136,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11136,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11112,
											"end": 11136,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11136,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11112,
											"end": 11136,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11112,
											"end": 11328,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11494,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 10985,
											"end": 11494,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11494,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 10985,
											"end": 11494,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11430,
											"end": 11440,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11430,
											"end": 11440,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11430,
											"end": 11440,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11441,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11417,
											"end": 11441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11441,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11441,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP12",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11441,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11417,
											"end": 11441,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11441,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11417,
											"end": 11441,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11441,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11430,
											"end": 11440,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11417,
											"end": 11448,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11448,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11471,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 11417,
											"end": 11471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11453,
											"end": 11470,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11452,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 11417,
											"end": 11471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11471,
											"name": "tag",
											"source": 2,
											"value": "279"
										},
										{
											"begin": 11417,
											"end": 11471,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11406,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11406,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11396,
											"end": 11406,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11383,
											"end": 11407,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11383,
											"end": 11407,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11383,
											"end": 11407,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11383,
											"end": 11407,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11383,
											"end": 11395,
											"name": "PUSH",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 11383,
											"end": 11395,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 11383,
											"end": 11395,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11383,
											"end": 11407,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11383,
											"end": 11407,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11383,
											"end": 11407,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11383,
											"end": 11407,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11383,
											"end": 11407,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11396,
											"end": 11406,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11383,
											"end": 11414,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11383,
											"end": 11471,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10985,
											"end": 11494,
											"name": "tag",
											"source": 2,
											"value": "278"
										},
										{
											"begin": 10985,
											"end": 11494,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11567,
											"end": 11577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11567,
											"end": 11577,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11598,
											"end": 11615,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 11598,
											"end": 11615,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11598,
											"end": 11615,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11598,
											"end": 11615,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11541,
											"end": 11616,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11541,
											"end": 11616,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11567,
											"end": 11577,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11567,
											"end": 11577,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11567,
											"end": 11577,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11567,
											"end": 11577,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11557,
											"end": 11565,
											"name": "DUP14",
											"source": 2
										},
										{
											"begin": 11557,
											"end": 11565,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11541,
											"end": 11616,
											"name": "PUSH",
											"source": 2,
											"value": "46D3C445B404E9DE2C80E1C0489CC92F23DFD5462CE7C6B3A1A54B3F0F70BCFC"
										},
										{
											"begin": 11541,
											"end": 11616,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11541,
											"end": 11616,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 11541,
											"end": 11616,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11579,
											"end": 11596,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 13767,
											"end": 13792,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13767,
											"end": 13792,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13823,
											"end": 13825,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 13808,
											"end": 13826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 13808,
											"end": 13826,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13801,
											"end": 13835,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 13755,
											"end": 13757,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 13740,
											"end": 13758,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13740,
											"end": 13758,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 13593,
											"end": 13841,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11541,
											"end": 11616,
											"name": "tag",
											"source": 2,
											"value": "280"
										},
										{
											"begin": 11541,
											"end": 11616,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11541,
											"end": 11616,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11541,
											"end": 11616,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11541,
											"end": 11616,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11541,
											"end": 11616,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11541,
											"end": 11616,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11541,
											"end": 11616,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11541,
											"end": 11616,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 11664,
											"end": 11674,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11664,
											"end": 11674,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11643,
											"end": 11694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11643,
											"end": 11694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11664,
											"end": 11674,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11664,
											"end": 11674,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11664,
											"end": 11674,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11664,
											"end": 11674,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11654,
											"end": 11662,
											"name": "DUP13",
											"source": 2
										},
										{
											"begin": 11654,
											"end": 11662,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11643,
											"end": 11694,
											"name": "PUSH",
											"source": 2,
											"value": "25AF9E0275ABBB4DE910D2062F5DCCA6D4C47F1313066083DD9D7077608A7A54"
										},
										{
											"begin": 11643,
											"end": 11694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2463,
											"end": 2465,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11643,
											"end": 11694,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11643,
											"end": 11694,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11643,
											"end": 11694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11643,
											"end": 11694,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11643,
											"end": 11694,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11643,
											"end": 11694,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11643,
											"end": 11694,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10539,
											"end": 11713,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 10539,
											"end": 11713,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11796,
											"end": 11812,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11796,
											"end": 11812,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11793,
											"end": 11962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 11793,
											"end": 11962,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11844,
											"end": 11854,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11844,
											"end": 11854,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11844,
											"end": 11854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11844,
											"end": 11854,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11844,
											"end": 11854,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11844,
											"end": 11854,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11865,
											"end": 11877,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11865,
											"end": 11877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11844,
											"end": 11854,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11844,
											"end": 11854,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11865,
											"end": 11877,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11844,
											"end": 11854,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "tag",
											"source": 2,
											"value": "284"
										},
										{
											"begin": 11836,
											"end": 11878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11918,
											"end": 11928,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11918,
											"end": 11928,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11905,
											"end": 11943,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11905,
											"end": 11943,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11918,
											"end": 11928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11918,
											"end": 11928,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11918,
											"end": 11928,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11918,
											"end": 11928,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11905,
											"end": 11943,
											"name": "PUSH",
											"source": 2,
											"value": "A171B6942063C6F2800CE40A780EDCE37BAA2B618571B11EEDD1E69E626E7D76"
										},
										{
											"begin": 11905,
											"end": 11943,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2463,
											"end": 2465,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11905,
											"end": 11943,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11905,
											"end": 11943,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11905,
											"end": 11943,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11905,
											"end": 11943,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11905,
											"end": 11943,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11905,
											"end": 11943,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11905,
											"end": 11943,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 11793,
											"end": 11962,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 11793,
											"end": 11962,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 11976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 11976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 11976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9892,
											"end": 11976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 11976,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 9851,
											"end": 11976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9887,
											"end": 9890,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9887,
											"end": 9890,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 11976,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 9851,
											"end": 11976,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 11976,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 9851,
											"end": 11976,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9851,
											"end": 11976,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9280,
											"end": 12088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 9280,
											"end": 12088,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9280,
											"end": 12088,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 9280,
											"end": 12088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12053,
											"end": 12077,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 12068,
											"end": 12076,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 12053,
											"end": 12067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 12053,
											"end": 12077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12053,
											"end": 12077,
											"name": "tag",
											"source": 2,
											"value": "287"
										},
										{
											"begin": 12053,
											"end": 12077,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12111,
											"end": 12162,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12111,
											"end": 12162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12111,
											"end": 12162,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7805,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7791,
											"end": 7805,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7784,
											"end": 7806,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 7766,
											"end": 7807,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7766,
											"end": 7807,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12146,
											"end": 12161,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 7838,
											"end": 7840,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7823,
											"end": 7841,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7823,
											"end": 7841,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7816,
											"end": 7850,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12124,
											"end": 12132,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 12124,
											"end": 12132,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12111,
											"end": 12162,
											"name": "PUSH",
											"source": 2,
											"value": "4D7A5E450395FB8FB6B67C4751F80F057CD5A74550929306EFF2CAC7F0ECC188"
										},
										{
											"begin": 12111,
											"end": 12162,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7739,
											"end": 7757,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12111,
											"end": 12162,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12111,
											"end": 12162,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12111,
											"end": 12162,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12111,
											"end": 12162,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12111,
											"end": 12162,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12111,
											"end": 12162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12111,
											"end": 12162,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 8218,
											"end": 12169,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8218,
											"end": 12169,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8218,
											"end": 12169,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8218,
											"end": 12169,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8218,
											"end": 12169,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8169,
											"end": 12169,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8169,
											"end": 12169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3915,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 3938,
											"end": 3939,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 3934,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 3934,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3927,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12660,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 12217,
											"end": 12660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12273,
											"end": 12291,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12294,
											"end": 12313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12294,
											"end": 12313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12294,
											"end": 12313,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12294,
											"end": 12303,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12294,
											"end": 12313,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12294,
											"end": 12313,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12294,
											"end": 12313,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12294,
											"end": 12313,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12294,
											"end": 12313,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12294,
											"end": 12313,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12323,
											"end": 12654,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 12323,
											"end": 12654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12346,
											"end": 12357,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12346,
											"end": 12357,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12342,
											"end": 12357,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12342,
											"end": 12357,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12323,
											"end": 12654,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12323,
											"end": 12654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 12323,
											"end": 12654,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12382,
											"end": 12391,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12394,
											"end": 12397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 12394,
											"end": 12395,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12396,
											"end": 12397,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12394,
											"end": 12397,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 12394,
											"end": 12397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12394,
											"end": 12397,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 12394,
											"end": 12397,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12382,
											"end": 12397,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12382,
											"end": 12397,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12378,
											"end": 12644,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 12378,
											"end": 12644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12403,
											"end": 12414,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12403,
											"end": 12414,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12399,
											"end": 12414,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12399,
											"end": 12414,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12378,
											"end": 12644,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12378,
											"end": 12644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 12378,
											"end": 12644,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12466,
											"end": 12470,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12471,
											"end": 12472,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12466,
											"end": 12473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12466,
											"end": 12473,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12466,
											"end": 12473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12466,
											"end": 12473,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12466,
											"end": 12473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 12466,
											"end": 12473,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12466,
											"end": 12473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 12466,
											"end": 12473,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 12466,
											"end": 12473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12466,
											"end": 12473,
											"name": "tag",
											"source": 2,
											"value": "303"
										},
										{
											"begin": 12466,
											"end": 12473,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12466,
											"end": 12473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12466,
											"end": 12473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12466,
											"end": 12473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12466,
											"end": 12473,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12466,
											"end": 12473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12466,
											"end": 12473,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12466,
											"end": 12473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12466,
											"end": 12473,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12466,
											"end": 12473,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12466,
											"end": 12473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12466,
											"end": 12487,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12466,
											"end": 12487,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12466,
											"end": 12487,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12446,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12447,
											"end": 12448,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 12442,
											"end": 12449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12449,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12463,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12442,
											"end": 12463,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12463,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12442,
											"end": 12487,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12439,
											"end": 12630,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12439,
											"end": 12630,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 12439,
											"end": 12630,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12526,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12529,
											"end": 12533,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12534,
											"end": 12535,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 12529,
											"end": 12536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12529,
											"end": 12536,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12511,
											"end": 12536,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12568,
											"end": 12572,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12568,
											"end": 12572,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12574,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12573,
											"end": 12574,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 12568,
											"end": 12575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "tag",
											"source": 2,
											"value": "313"
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12568,
											"end": 12575,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12562,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12563,
											"end": 12564,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 12558,
											"end": 12565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "tag",
											"source": 2,
											"value": "316"
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12565,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12558,
											"end": 12575,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12607,
											"end": 12611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12607,
											"end": 12611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12601,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12601,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12602,
											"end": 12603,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12602,
											"end": 12603,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 12597,
											"end": 12604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "tag",
											"source": 2,
											"value": "319"
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12604,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12597,
											"end": 12611,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12439,
											"end": 12630,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 12439,
											"end": 12630,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12416,
											"end": 12419,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12416,
											"end": 12419,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12378,
											"end": 12644,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 12378,
											"end": 12644,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12378,
											"end": 12644,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 12378,
											"end": 12644,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12359,
											"end": 12362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12359,
											"end": 12362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12323,
											"end": 12654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 12323,
											"end": 12654,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12323,
											"end": 12654,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 12323,
											"end": 12654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12323,
											"end": 12654,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12263,
											"end": 12660,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12217,
											"end": 12660,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12217,
											"end": 12660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 3122,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 3210,
											"end": 3211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3207,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3206,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 3206,
											"end": 3211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12735,
											"end": 13171,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 12735,
											"end": 13171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12796,
											"end": 12814,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12817,
											"end": 12836,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12817,
											"end": 12836,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12817,
											"end": 12836,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12817,
											"end": 12826,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12817,
											"end": 12836,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12817,
											"end": 12836,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12817,
											"end": 12836,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12817,
											"end": 12836,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12817,
											"end": 12836,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12817,
											"end": 12836,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12846,
											"end": 13165,
											"name": "tag",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 12846,
											"end": 13165,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12869,
											"end": 12880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12869,
											"end": 12880,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12865,
											"end": 12880,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12865,
											"end": 12880,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12846,
											"end": 13165,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12846,
											"end": 13165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 12846,
											"end": 13165,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12905,
											"end": 12909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12910,
											"end": 12911,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 12905,
											"end": 12912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "tag",
											"source": 2,
											"value": "334"
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12905,
											"end": 12922,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12905,
											"end": 12912,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12905,
											"end": 12922,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12905,
											"end": 12922,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12905,
											"end": 12922,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 12905,
											"end": 12922,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12901,
											"end": 13155,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 12901,
											"end": 13155,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12942,
											"end": 12962,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12965,
											"end": 13011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 12989,
											"end": 12993,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12994,
											"end": 12995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 12989,
											"end": 12996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12989,
											"end": 12996,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12989,
											"end": 12996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12989,
											"end": 12996,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12989,
											"end": 12996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 12989,
											"end": 12996,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12989,
											"end": 12996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 12989,
											"end": 12996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 12989,
											"end": 12996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12989,
											"end": 12996,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 12989,
											"end": 12996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12989,
											"end": 12996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12989,
											"end": 12996,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12989,
											"end": 12996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12989,
											"end": 12996,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12989,
											"end": 12996,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12989,
											"end": 12996,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12989,
											"end": 12996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12989,
											"end": 12996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12989,
											"end": 12996,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12989,
											"end": 12996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12989,
											"end": 13010,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 12989,
											"end": 13010,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12989,
											"end": 13010,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12965,
											"end": 12969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12970,
											"end": 12971,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12965,
											"end": 12972,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12965,
											"end": 12972,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12965,
											"end": 12972,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12965,
											"end": 12972,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 12965,
											"end": 12972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 12965,
											"end": 12972,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12965,
											"end": 12972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 12965,
											"end": 12972,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 12965,
											"end": 12972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12965,
											"end": 12972,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 12965,
											"end": 12972,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12965,
											"end": 12972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12965,
											"end": 12972,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12965,
											"end": 12972,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12965,
											"end": 12972,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12965,
											"end": 12972,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12965,
											"end": 12972,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 12965,
											"end": 12972,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12965,
											"end": 12972,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12965,
											"end": 12972,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 12965,
											"end": 12972,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12965,
											"end": 12984,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12965,
											"end": 12984,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12965,
											"end": 12984,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 12965,
											"end": 12988,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "245"
										},
										{
											"begin": 12965,
											"end": 12988,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12965,
											"end": 13011,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12965,
											"end": 13011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12965,
											"end": 13011,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12965,
											"end": 13011,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 12965,
											"end": 13011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12965,
											"end": 13011,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 12965,
											"end": 13011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12942,
											"end": 13011,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12942,
											"end": 13011,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13041,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13042,
											"end": 13043,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 13037,
											"end": 13044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "tag",
											"source": 2,
											"value": "345"
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13051,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13037,
											"end": 13051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13051,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "PUSH",
											"source": 2,
											"value": "8FC"
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13062,
											"end": 13074,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 13062,
											"end": 13074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13062,
											"end": 13074,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13037,
											"end": 13051,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13029,
											"end": 13075,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13115,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13116,
											"end": 13117,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 13111,
											"end": 13118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13118,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13125,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 13098,
											"end": 13140,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13098,
											"end": 13140,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2475,
											"end": 2500,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13111,
											"end": 13125,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13125,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13111,
											"end": 13125,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13098,
											"end": 13140,
											"name": "PUSH",
											"source": 2,
											"value": "A171B6942063C6F2800CE40A780EDCE37BAA2B618571B11EEDD1E69E626E7D76"
										},
										{
											"begin": 13098,
											"end": 13140,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2466,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 13098,
											"end": 13140,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 13098,
											"end": 13140,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 13098,
											"end": 13140,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13098,
											"end": 13140,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13098,
											"end": 13140,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 13098,
											"end": 13140,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13098,
											"end": 13140,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 12924,
											"end": 13155,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12901,
											"end": 13155,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 12901,
											"end": 13155,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12882,
											"end": 12885,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 12882,
											"end": 12885,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12846,
											"end": 13165,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "330"
										},
										{
											"begin": 12846,
											"end": 13165,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "258"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "128"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "356"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "357"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "356"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "357"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 240,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 14,
											"end": 240,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 73,
											"end": 79,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 126,
											"end": 128,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 114,
											"end": 123,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 105,
											"end": 112,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 101,
											"end": 124,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 97,
											"end": 129,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 142,
											"end": 143,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 139,
											"end": 140,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 132,
											"end": 144,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 94,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 94,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 187,
											"end": 210,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 187,
											"end": 210,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 14,
											"end": 240,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 245,
											"end": 691,
											"name": "tag",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 245,
											"end": 691,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 298,
											"end": 301,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 336,
											"end": 341,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 330,
											"end": 342,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 363,
											"end": 369,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 358,
											"end": 361,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 351,
											"end": 370,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 395,
											"end": 399,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 390,
											"end": 393,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 386,
											"end": 400,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 379,
											"end": 400,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 379,
											"end": 400,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 434,
											"end": 438,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 427,
											"end": 432,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 423,
											"end": 439,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 457,
											"end": 458,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 666,
											"name": "tag",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 467,
											"end": 666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 481,
											"end": 487,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 478,
											"end": 479,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 475,
											"end": 488,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 467,
											"end": 666,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 467,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 467,
											"end": 666,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 546,
											"end": 559,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 546,
											"end": 559,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 542,
											"end": 581,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 530,
											"end": 582,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 530,
											"end": 582,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 611,
											"end": 615,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 602,
											"end": 616,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 602,
											"end": 616,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 602,
											"end": 616,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 602,
											"end": 616,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 639,
											"end": 656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 639,
											"end": 656,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 639,
											"end": 656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 639,
											"end": 656,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 578,
											"end": 579,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 496,
											"end": 505,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 467,
											"end": 666,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "369"
										},
										{
											"begin": 467,
											"end": 666,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 467,
											"end": 666,
											"name": "tag",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 467,
											"end": 666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 682,
											"end": 685,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 682,
											"end": 685,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 245,
											"end": 691,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 245,
											"end": 691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 1116,
											"name": "tag",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 696,
											"end": 1116,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 749,
											"end": 752,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 792,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 781,
											"end": 793,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 814,
											"end": 820,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 809,
											"end": 812,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 802,
											"end": 821,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 846,
											"end": 850,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 841,
											"end": 844,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 837,
											"end": 851,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 830,
											"end": 851,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 830,
											"end": 851,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 885,
											"end": 889,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 878,
											"end": 883,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 874,
											"end": 890,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 908,
											"end": 909,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 1091,
											"name": "tag",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 918,
											"end": 1091,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 932,
											"end": 938,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 929,
											"end": 930,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 926,
											"end": 939,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 918,
											"end": 1091,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 918,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "371"
										},
										{
											"begin": 918,
											"end": 1091,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1006,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 993,
											"end": 1006,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 981,
											"end": 1007,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1027,
											"end": 1041,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1041,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1041,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1027,
											"end": 1041,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 1064,
											"end": 1081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1064,
											"end": 1081,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1064,
											"end": 1081,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1064,
											"end": 1081,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 954,
											"end": 955,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 947,
											"end": 956,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 918,
											"end": 1091,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "373"
										},
										{
											"begin": 918,
											"end": 1091,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 2324,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 2324,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1528,
											"end": 1531,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1517,
											"end": 1526,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1510,
											"end": 1532,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1491,
											"end": 1495,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 1607,
											"end": 1610,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 1596,
											"end": 1605,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1592,
											"end": 1611,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1584,
											"end": 1590,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1612,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 1555,
											"end": 1612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1555,
											"end": 1612,
											"name": "tag",
											"source": 3,
											"value": "377"
										},
										{
											"begin": 1555,
											"end": 1612,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1660,
											"end": 1669,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1652,
											"end": 1658,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1648,
											"end": 1670,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1643,
											"end": 1645,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1632,
											"end": 1641,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1628,
											"end": 1646,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1621,
											"end": 1671,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 1731,
											"end": 1737,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1723,
											"end": 1729,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 1694,
											"end": 1738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "tag",
											"source": 3,
											"value": "378"
										},
										{
											"begin": 1694,
											"end": 1738,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 1738,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1680,
											"end": 1738,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1786,
											"end": 1795,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1778,
											"end": 1784,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1774,
											"end": 1796,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1769,
											"end": 1771,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 1758,
											"end": 1767,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1754,
											"end": 1772,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1747,
											"end": 1797,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1820,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 1857,
											"end": 1863,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1849,
											"end": 1855,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 1820,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 1820,
											"end": 1864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1820,
											"end": 1864,
											"name": "tag",
											"source": 3,
											"value": "379"
										},
										{
											"begin": 1820,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1922,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1922,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1922,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 1895,
											"end": 1897,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 1880,
											"end": 1898,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1898,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1873,
											"end": 1923,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 1985,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1972,
											"end": 1985,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 1994,
											"end": 2016,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1994,
											"end": 2016,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1994,
											"end": 2016,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2046,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2070,
											"end": 2085,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2070,
											"end": 2085,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 2070,
											"end": 2085,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2070,
											"end": 2085,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2032,
											"end": 2047,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2103,
											"end": 2104,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2298,
											"name": "tag",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 2113,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2127,
											"end": 2133,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2124,
											"end": 2125,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2121,
											"end": 2134,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 2113,
											"end": 2298,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2113,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 2113,
											"end": 2298,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2202,
											"end": 2215,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2195,
											"end": 2216,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2188,
											"end": 2217,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2176,
											"end": 2218,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2247,
											"end": 2249,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2273,
											"end": 2288,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2273,
											"end": 2288,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 2273,
											"end": 2288,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2273,
											"end": 2288,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2238,
											"end": 2250,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2149,
											"end": 2150,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2142,
											"end": 2151,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2113,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "380"
										},
										{
											"begin": 2113,
											"end": 2298,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2113,
											"end": 2298,
											"name": "tag",
											"source": 3,
											"value": "382"
										},
										{
											"begin": 2113,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2315,
											"end": 2318,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2315,
											"end": 2318,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 1121,
											"end": 2324,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1121,
											"end": 2324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2511,
											"end": 2638,
											"name": "tag",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 2511,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2572,
											"end": 2582,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 2567,
											"end": 2570,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 2563,
											"end": 2583,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 2560,
											"end": 2561,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2584,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2603,
											"end": 2607,
											"name": "PUSH",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 2600,
											"end": 2601,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2593,
											"end": 2608,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2627,
											"end": 2631,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 2624,
											"end": 2625,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2632,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2643,
											"end": 4074,
											"name": "tag",
											"source": 3,
											"value": "33"
										},
										{
											"begin": 2643,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2748,
											"end": 2754,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2756,
											"end": 2762,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2764,
											"end": 2770,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2772,
											"end": 2778,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2780,
											"end": 2786,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2836,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2812,
											"end": 2819,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 2808,
											"end": 2831,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2804,
											"end": 2837,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2801,
											"end": 2854,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2801,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 2801,
											"end": 2854,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2850,
											"end": 2851,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2840,
											"end": 2852,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2801,
											"end": 2854,
											"name": "tag",
											"source": 3,
											"value": "386"
										},
										{
											"begin": 2801,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2890,
											"end": 2899,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 2877,
											"end": 2900,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2915,
											"end": 2921,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 2942,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 2959,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 2909,
											"end": 2959,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2955,
											"end": 2956,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2952,
											"end": 2953,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2945,
											"end": 2957,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2909,
											"end": 2959,
											"name": "tag",
											"source": 3,
											"value": "387"
										},
										{
											"begin": 2909,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3000,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 2978,
											"end": 3000,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3031,
											"end": 3035,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3023,
											"end": 3036,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3023,
											"end": 3036,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3046,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 3009,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 3009,
											"end": 3064,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3060,
											"end": 3061,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3057,
											"end": 3058,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3050,
											"end": 3062,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3009,
											"end": 3064,
											"name": "tag",
											"source": 3,
											"value": "388"
										},
										{
											"begin": 3009,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3100,
											"end": 3102,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3087,
											"end": 3103,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3118,
											"end": 3124,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3115,
											"end": 3145,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3112,
											"end": 3168,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3112,
											"end": 3168,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 3112,
											"end": 3168,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3148,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 3148,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3148,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3148,
											"end": 3166,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 3148,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3197,
											"end": 3199,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3191,
											"end": 3200,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 3289,
											"end": 3291,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 3251,
											"end": 3268,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3251,
											"end": 3268,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3247,
											"end": 3278,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3247,
											"end": 3278,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3247,
											"end": 3278,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3280,
											"end": 3282,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 3243,
											"end": 3283,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3239,
											"end": 3293,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3227,
											"end": 3294,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3309,
											"end": 3343,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3309,
											"end": 3343,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3345,
											"end": 3367,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3345,
											"end": 3367,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3345,
											"end": 3367,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 3306,
											"end": 3368,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3391,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3303,
											"end": 3391,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 3303,
											"end": 3391,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 3371,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 3371,
											"end": 3389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3371,
											"end": 3389,
											"name": "tag",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 3371,
											"end": 3389,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3407,
											"end": 3409,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3400,
											"end": 3422,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3431,
											"end": 3453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3431,
											"end": 3453,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3431,
											"end": 3453,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3487,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3487,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3472,
											"end": 3487,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3489,
											"end": 3493,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3468,
											"end": 3494,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3465,
											"end": 3504,
											"name": "DUP11",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 3462,
											"end": 3521,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 3462,
											"end": 3521,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3517,
											"end": 3518,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3514,
											"end": 3515,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 3507,
											"end": 3519,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 3462,
											"end": 3521,
											"name": "tag",
											"source": 3,
											"value": "393"
										},
										{
											"begin": 3462,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3577,
											"end": 3583,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3570,
											"end": 3574,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3566,
											"end": 3568,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3562,
											"end": 3575,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3555,
											"end": 3559,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3547,
											"end": 3553,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3543,
											"end": 3560,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3530,
											"end": 3584,
											"name": "CALLDATACOPY",
											"source": 3
										},
										{
											"begin": 3632,
											"end": 3633,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3625,
											"end": 3629,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 3604,
											"end": 3623,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3623,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3623,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3630,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3630,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3593,
											"end": 3634,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 3604,
											"end": 3623,
											"name": "SWAP10",
											"source": 3
										},
										{
											"begin": 3713,
											"end": 3733,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 3713,
											"end": 3733,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3713,
											"end": 3733,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3700,
											"end": 3734,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3700,
											"end": 3734,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3831,
											"end": 3833,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 3816,
											"end": 3834,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 3816,
											"end": 3834,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3835,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3803,
											"end": 3835,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 3934,
											"end": 3936,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3919,
											"end": 3937,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3906,
											"end": 3938,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3906,
											"end": 3938,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4037,
											"end": 4040,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 4022,
											"end": 4041,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4009,
											"end": 4042,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4009,
											"end": 4042,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3608,
											"end": 3614,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2643,
											"end": 4074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4079,
											"end": 4425,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 4079,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4147,
											"end": 4153,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4155,
											"end": 4161,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4208,
											"end": 4210,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4196,
											"end": 4205,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4187,
											"end": 4194,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4183,
											"end": 4206,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4179,
											"end": 4211,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 4176,
											"end": 4228,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4176,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 4176,
											"end": 4228,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4224,
											"end": 4225,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4221,
											"end": 4222,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4214,
											"end": 4226,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4176,
											"end": 4228,
											"name": "tag",
											"source": 3,
											"value": "395"
										},
										{
											"begin": 4176,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4269,
											"end": 4292,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 4292,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4269,
											"end": 4292,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4389,
											"end": 4391,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4374,
											"end": 4392,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4374,
											"end": 4392,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4374,
											"end": 4392,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4361,
											"end": 4393,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 4361,
											"end": 4393,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4079,
											"end": 4425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4895,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4430,
											"end": 4895,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4687,
											"end": 4689,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4676,
											"end": 4685,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4669,
											"end": 4690,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4650,
											"end": 4654,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4713,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 4765,
											"end": 4767,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4754,
											"end": 4763,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4750,
											"end": 4768,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4748,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4713,
											"end": 4769,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "358"
										},
										{
											"begin": 4713,
											"end": 4769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4713,
											"end": 4769,
											"name": "tag",
											"source": 3,
											"value": "397"
										},
										{
											"begin": 4713,
											"end": 4769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4817,
											"end": 4826,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4809,
											"end": 4815,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4805,
											"end": 4827,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4800,
											"end": 4802,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4789,
											"end": 4798,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4785,
											"end": 4803,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4778,
											"end": 4828,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 4882,
											"end": 4888,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4874,
											"end": 4880,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "359"
										},
										{
											"begin": 4845,
											"end": 4889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4845,
											"end": 4889,
											"name": "tag",
											"source": 3,
											"value": "398"
										},
										{
											"begin": 4845,
											"end": 4889,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4837,
											"end": 4889,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 4430,
											"end": 4895,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4430,
											"end": 4895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5332,
											"end": 5732,
											"name": "tag",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 5332,
											"end": 5732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5374,
											"end": 5377,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5412,
											"end": 5417,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5406,
											"end": 5418,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5439,
											"end": 5445,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 5434,
											"end": 5437,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 5427,
											"end": 5446,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5464,
											"end": 5465,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5474,
											"end": 5613,
											"name": "tag",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 5474,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5488,
											"end": 5494,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5485,
											"end": 5486,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5482,
											"end": 5495,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 5474,
											"end": 5613,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 5474,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 5474,
											"end": 5613,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 5596,
											"end": 5600,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5581,
											"end": 5594,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5581,
											"end": 5594,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5581,
											"end": 5594,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5577,
											"end": 5601,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5577,
											"end": 5601,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5571,
											"end": 5602,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5562,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5562,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5551,
											"end": 5562,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5569,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5547,
											"end": 5569,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5540,
											"end": 5603,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5503,
											"end": 5515,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5474,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "401"
										},
										{
											"begin": 5474,
											"end": 5613,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5474,
											"end": 5613,
											"name": "tag",
											"source": 3,
											"value": "403"
										},
										{
											"begin": 5474,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5478,
											"end": 5481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5658,
											"end": 5659,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 5651,
											"end": 5655,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5642,
											"end": 5648,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5637,
											"end": 5640,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 5633,
											"end": 5649,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5629,
											"end": 5656,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5622,
											"end": 5660,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 5721,
											"end": 5725,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 5714,
											"end": 5716,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5710,
											"end": 5717,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 5705,
											"end": 5707,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 5697,
											"end": 5703,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 5693,
											"end": 5708,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5689,
											"end": 5718,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 5684,
											"end": 5687,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 5680,
											"end": 5719,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5676,
											"end": 5726,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 5669,
											"end": 5726,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5669,
											"end": 5726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5669,
											"end": 5726,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5332,
											"end": 5732,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5332,
											"end": 5732,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 5332,
											"end": 5732,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5332,
											"end": 5732,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 5332,
											"end": 5732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 5737,
											"end": 6424,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 5737,
											"end": 6424,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "DUP9",
											"source": 3
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6030,
											"end": 6081,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6030,
											"end": 6081,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6117,
											"end": 6120,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 6112,
											"end": 6114,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6090,
											"end": 6121,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6090,
											"end": 6121,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6090,
											"end": 6121,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 6138,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 6138,
											"end": 6184,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6164,
											"end": 6183,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6164,
											"end": 6183,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6156,
											"end": 6162,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 6138,
											"end": 6184,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 6138,
											"end": 6184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6138,
											"end": 6184,
											"name": "tag",
											"source": 3,
											"value": "405"
										},
										{
											"begin": 6138,
											"end": 6184,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6215,
											"end": 6217,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6200,
											"end": 6218,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6200,
											"end": 6218,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6193,
											"end": 6227,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 6193,
											"end": 6227,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6193,
											"end": 6227,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 6193,
											"end": 6227,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6258,
											"end": 6260,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6243,
											"end": 6261,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6243,
											"end": 6261,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6236,
											"end": 6270,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6236,
											"end": 6270,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6236,
											"end": 6270,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 6236,
											"end": 6270,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6301,
											"end": 6304,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 6286,
											"end": 6305,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6286,
											"end": 6305,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6279,
											"end": 6314,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6279,
											"end": 6314,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6279,
											"end": 6314,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6279,
											"end": 6314,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6358,
											"end": 6372,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6351,
											"end": 6373,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6345,
											"end": 6348,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 6330,
											"end": 6349,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6330,
											"end": 6349,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6323,
											"end": 6374,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6405,
											"end": 6408,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 6390,
											"end": 6409,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6390,
											"end": 6409,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6390,
											"end": 6409,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6383,
											"end": 6418,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6130,
											"end": 6184,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 5737,
											"end": 6424,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5737,
											"end": 6424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6429,
											"end": 6769,
											"name": "tag",
											"source": 3,
											"value": "74"
										},
										{
											"begin": 6429,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6631,
											"end": 6633,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6613,
											"end": 6634,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6613,
											"end": 6634,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6613,
											"end": 6634,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6670,
											"end": 6672,
											"name": "PUSH",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 6650,
											"end": 6668,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6650,
											"end": 6668,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6650,
											"end": 6668,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6643,
											"end": 6673,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A5908185CDCD95D081251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6704,
											"end": 6706,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6689,
											"end": 6707,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6689,
											"end": 6707,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6682,
											"end": 6728,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6760,
											"end": 6762,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6745,
											"end": 6763,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6745,
											"end": 6763,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6429,
											"end": 6769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6774,
											"end": 6901,
											"name": "tag",
											"source": 3,
											"value": "93"
										},
										{
											"begin": 6774,
											"end": 6901,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6835,
											"end": 6845,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 6830,
											"end": 6833,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 6826,
											"end": 6846,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 6823,
											"end": 6824,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6816,
											"end": 6847,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6866,
											"end": 6870,
											"name": "PUSH",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 6863,
											"end": 6864,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6856,
											"end": 6871,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6890,
											"end": 6894,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 6887,
											"end": 6888,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6880,
											"end": 6895,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7242,
											"name": "tag",
											"source": 3,
											"value": "118"
										},
										{
											"begin": 6906,
											"end": 7242,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7108,
											"end": 7110,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7090,
											"end": 7111,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7090,
											"end": 7111,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7090,
											"end": 7111,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7147,
											"end": 7149,
											"name": "PUSH",
											"source": 3,
											"value": "C"
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7127,
											"end": 7145,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7120,
											"end": 7150,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "155B985D5D1A1BDC9A5E9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7181,
											"end": 7183,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7166,
											"end": 7184,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7166,
											"end": 7184,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7159,
											"end": 7201,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7233,
											"end": 7235,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7218,
											"end": 7236,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7218,
											"end": 7236,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6906,
											"end": 7242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7247,
											"end": 7593,
											"name": "tag",
											"source": 3,
											"value": "121"
										},
										{
											"begin": 7247,
											"end": 7593,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7449,
											"end": 7451,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 7431,
											"end": 7452,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 7431,
											"end": 7452,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7431,
											"end": 7452,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7488,
											"end": 7490,
											"name": "PUSH",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 7468,
											"end": 7486,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7468,
											"end": 7486,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7468,
											"end": 7486,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7461,
											"end": 7491,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "109A59191A5B99C8185B1C9958591E4818DB1BDCD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7522,
											"end": 7524,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 7507,
											"end": 7525,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 7507,
											"end": 7525,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7500,
											"end": 7552,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 7584,
											"end": 7586,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 7569,
											"end": 7587,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 7569,
											"end": 7587,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 7247,
											"end": 7593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9274,
											"end": 9401,
											"name": "tag",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 9274,
											"end": 9401,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9335,
											"end": 9345,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 9330,
											"end": 9333,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 9326,
											"end": 9346,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 9323,
											"end": 9324,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9316,
											"end": 9347,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9366,
											"end": 9370,
											"name": "PUSH",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 9363,
											"end": 9364,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9356,
											"end": 9371,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9390,
											"end": 9394,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9380,
											"end": 9395,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9406,
											"end": 9541,
											"name": "tag",
											"source": 3,
											"value": "145"
										},
										{
											"begin": 9406,
											"end": 9541,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9445,
											"end": 9448,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9466,
											"end": 9483,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9466,
											"end": 9483,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9466,
											"end": 9483,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9463,
											"end": 9506,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 9463,
											"end": 9506,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 9486,
											"end": 9504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "tag",
											"source": 3,
											"value": "418"
										},
										{
											"begin": 9486,
											"end": 9504,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9533,
											"end": 9534,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9522,
											"end": 9535,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 9522,
											"end": 9535,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9406,
											"end": 9541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9546,
											"end": 9926,
											"name": "tag",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 9546,
											"end": 9926,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9625,
											"end": 9626,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 9621,
											"end": 9633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9621,
											"end": 9633,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9621,
											"end": 9633,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 9621,
											"end": 9633,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9668,
											"end": 9680,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9668,
											"end": 9680,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9668,
											"end": 9680,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 9689,
											"end": 9750,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "420"
										},
										{
											"begin": 9689,
											"end": 9750,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9743,
											"end": 9747,
											"name": "PUSH",
											"source": 3,
											"value": "7F"
										},
										{
											"begin": 9735,
											"end": 9741,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9731,
											"end": 9748,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 9721,
											"end": 9748,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9721,
											"end": 9748,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9689,
											"end": 9750,
											"name": "tag",
											"source": 3,
											"value": "420"
										},
										{
											"begin": 9689,
											"end": 9750,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9796,
											"end": 9798,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 9788,
											"end": 9794,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 9785,
											"end": 9799,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 9765,
											"end": 9783,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9762,
											"end": 9800,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9920,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 9759,
											"end": 9920,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 9842,
											"end": 9852,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 9837,
											"end": 9840,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 9833,
											"end": 9853,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9823,
											"end": 9854,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9877,
											"end": 9881,
											"name": "PUSH",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 9874,
											"end": 9875,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 9867,
											"end": 9882,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 9905,
											"end": 9909,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 9902,
											"end": 9903,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9895,
											"end": 9910,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9920,
											"name": "tag",
											"source": 3,
											"value": "421"
										},
										{
											"begin": 9759,
											"end": 9920,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 9759,
											"end": 9920,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9546,
											"end": 9926,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 9546,
											"end": 9926,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 9546,
											"end": 9926,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 9546,
											"end": 9926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10575,
											"name": "tag",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 10057,
											"end": 10575,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10159,
											"end": 10161,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 10154,
											"end": 10157,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10151,
											"end": 10162,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 10148,
											"end": 10569,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10148,
											"end": 10569,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "296"
										},
										{
											"begin": 10148,
											"end": 10569,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10195,
											"end": 10200,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10192,
											"end": 10193,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10185,
											"end": 10201,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10239,
											"end": 10243,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10236,
											"end": 10237,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10226,
											"end": 10244,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": 10309,
											"end": 10311,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 10297,
											"end": 10307,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10293,
											"end": 10312,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10290,
											"end": 10291,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 10286,
											"end": 10313,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 10280,
											"end": 10284,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10276,
											"end": 10314,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10345,
											"end": 10349,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10333,
											"end": 10343,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10330,
											"end": 10350,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10327,
											"end": 10374,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10327,
											"end": 10374,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 10327,
											"end": 10374,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10368,
											"end": 10372,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 10327,
											"end": 10374,
											"name": "tag",
											"source": 3,
											"value": "425"
										},
										{
											"begin": 10327,
											"end": 10374,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10423,
											"end": 10425,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 10418,
											"end": 10421,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10414,
											"end": 10426,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10411,
											"end": 10412,
											"name": "PUSH",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 10407,
											"end": 10427,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 10401,
											"end": 10405,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 10397,
											"end": 10428,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10387,
											"end": 10428,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 10387,
											"end": 10428,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10478,
											"end": 10559,
											"name": "tag",
											"source": 3,
											"value": "426"
										},
										{
											"begin": 10478,
											"end": 10559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10496,
											"end": 10498,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10489,
											"end": 10494,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10486,
											"end": 10499,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 10478,
											"end": 10559,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10478,
											"end": 10559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 10478,
											"end": 10559,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10555,
											"end": 10556,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10557,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10541,
											"end": 10557,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 10522,
											"end": 10523,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10511,
											"end": 10524,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 10478,
											"end": 10559,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "426"
										},
										{
											"begin": 10478,
											"end": 10559,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10478,
											"end": 10559,
											"name": "tag",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 10478,
											"end": 10559,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10482,
											"end": 10485,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10482,
											"end": 10485,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10575,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10575,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10575,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 10057,
											"end": 10575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10751,
											"end": 12050,
											"name": "tag",
											"source": 3,
											"value": "147"
										},
										{
											"begin": 10751,
											"end": 12050,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10877,
											"end": 10880,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10871,
											"end": 10881,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10896,
											"end": 10902,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10893,
											"end": 10923,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 10890,
											"end": 10946,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 10890,
											"end": 10946,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "432"
										},
										{
											"begin": 10890,
											"end": 10946,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 10926,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "432"
										},
										{
											"begin": 10926,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "77"
										},
										{
											"begin": 10926,
											"end": 10944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10926,
											"end": 10944,
											"name": "tag",
											"source": 3,
											"value": "432"
										},
										{
											"begin": 10926,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10955,
											"end": 11052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "433"
										},
										{
											"begin": 11045,
											"end": 11051,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11005,
											"end": 11043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "434"
										},
										{
											"begin": 11037,
											"end": 11041,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11031,
											"end": 11042,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 11005,
											"end": 11043,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "201"
										},
										{
											"begin": 11005,
											"end": 11043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11005,
											"end": 11043,
											"name": "tag",
											"source": 3,
											"value": "434"
										},
										{
											"begin": 11005,
											"end": 11043,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10999,
											"end": 11003,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10955,
											"end": 11052,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "363"
										},
										{
											"begin": 10955,
											"end": 11052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 10955,
											"end": 11052,
											"name": "tag",
											"source": 3,
											"value": "433"
										},
										{
											"begin": 10955,
											"end": 11052,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11101,
											"end": 11105,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11132,
											"end": 11134,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 11121,
											"end": 11135,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11121,
											"end": 11135,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 11149,
											"end": 11150,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11144,
											"end": 11793,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11144,
											"end": 11793,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 11144,
											"end": 11793,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "436"
										},
										{
											"begin": 11144,
											"end": 11793,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11837,
											"end": 11838,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 11854,
											"end": 11860,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 11851,
											"end": 11940,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11851,
											"end": 11940,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "437"
										},
										{
											"begin": 11851,
											"end": 11940,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11906,
											"end": 11925,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11906,
											"end": 11925,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11906,
											"end": 11925,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11900,
											"end": 11926,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11851,
											"end": 11940,
											"name": "tag",
											"source": 3,
											"value": "437"
										},
										{
											"begin": 11851,
											"end": 11940,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10708,
											"end": 10709,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 10704,
											"end": 10715,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 10704,
											"end": 10715,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10704,
											"end": 10715,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 10700,
											"end": 10724,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 10696,
											"end": 10725,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 10686,
											"end": 10726,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 10732,
											"end": 10733,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 10728,
											"end": 10739,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 10728,
											"end": 10739,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 10728,
											"end": 10739,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 10683,
											"end": 10740,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 11953,
											"end": 12034,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11953,
											"end": 12034,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11114,
											"end": 12044,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "428"
										},
										{
											"begin": 11114,
											"end": 12044,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11144,
											"end": 11793,
											"name": "tag",
											"source": 3,
											"value": "436"
										},
										{
											"begin": 11144,
											"end": 11793,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 10004,
											"end": 10005,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 9997,
											"end": 10011,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 9997,
											"end": 10011,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 9997,
											"end": 10011,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 10041,
											"end": 10045,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 10028,
											"end": 10046,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 10028,
											"end": 10046,
											"name": "KECCAK256",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11180,
											"end": 11200,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11180,
											"end": 11200,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11180,
											"end": 11200,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11298,
											"end": 11520,
											"name": "tag",
											"source": 3,
											"value": "440"
										},
										{
											"begin": 11298,
											"end": 11520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11312,
											"end": 11319,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11309,
											"end": 11310,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11306,
											"end": 11320,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11298,
											"end": 11520,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11298,
											"end": 11520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "442"
										},
										{
											"begin": 11298,
											"end": 11520,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11394,
											"end": 11413,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 11394,
											"end": 11413,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11394,
											"end": 11413,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11388,
											"end": 11414,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 11373,
											"end": 11415,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11373,
											"end": 11415,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11501,
											"end": 11505,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 11486,
											"end": 11506,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 11486,
											"end": 11506,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 11486,
											"end": 11506,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11486,
											"end": 11506,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 11454,
											"end": 11455,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11442,
											"end": 11456,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11442,
											"end": 11456,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 11442,
											"end": 11456,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11442,
											"end": 11456,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 11328,
											"end": 11340,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11298,
											"end": 11520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "440"
										},
										{
											"begin": 11298,
											"end": 11520,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 11298,
											"end": 11520,
											"name": "tag",
											"source": 3,
											"value": "442"
										},
										{
											"begin": 11298,
											"end": 11520,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 11302,
											"end": 11305,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 11548,
											"end": 11554,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11539,
											"end": 11546,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 11536,
											"end": 11555,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 11533,
											"end": 11734,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 11533,
											"end": 11734,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 11533,
											"end": 11734,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 11609,
											"end": 11628,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11603,
											"end": 11629,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11692,
											"end": 11693,
											"name": "PUSH",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 11688,
											"end": 11702,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 11688,
											"end": 11702,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11688,
											"end": 11702,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 11704,
											"end": 11707,
											"name": "PUSH",
											"source": 3,
											"value": "F8"
										},
										{
											"begin": 11684,
											"end": 11708,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11680,
											"end": 11717,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 11676,
											"end": 11718,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 11661,
											"end": 11719,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 11646,
											"end": 11720,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11646,
											"end": 11720,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 11533,
											"end": 11734,
											"name": "tag",
											"source": 3,
											"value": "443"
										},
										{
											"begin": 11533,
											"end": 11734,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11780,
											"end": 11781,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 11764,
											"end": 11778,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11764,
											"end": 11778,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 11764,
											"end": 11778,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 11760,
											"end": 11782,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 11747,
											"end": 11783,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 11747,
											"end": 11783,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10751,
											"end": 12050,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12055,
											"end": 12180,
											"name": "tag",
											"source": 3,
											"value": "149"
										},
										{
											"begin": 12055,
											"end": 12180,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12120,
											"end": 12129,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12120,
											"end": 12129,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12120,
											"end": 12129,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12141,
											"end": 12151,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 12141,
											"end": 12151,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 12141,
											"end": 12151,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 12138,
											"end": 12174,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 12138,
											"end": 12174,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 12138,
											"end": 12174,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 12154,
											"end": 12172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 12154,
											"end": 12172,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 12154,
											"end": 12172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12185,
											"end": 12547,
											"name": "tag",
											"source": 3,
											"value": "152"
										},
										{
											"begin": 12185,
											"end": 12547,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12390,
											"end": 12392,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 12379,
											"end": 12388,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 12372,
											"end": 12393,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12353,
											"end": 12357,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 12410,
											"end": 12455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "448"
										},
										{
											"begin": 12451,
											"end": 12453,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 12440,
											"end": 12449,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12436,
											"end": 12454,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12428,
											"end": 12434,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 12410,
											"end": 12455,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "360"
										},
										{
											"begin": 12410,
											"end": 12455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 12410,
											"end": 12455,
											"name": "tag",
											"source": 3,
											"value": "448"
										},
										{
											"begin": 12410,
											"end": 12455,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 12486,
											"end": 12488,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 12471,
											"end": 12489,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 12471,
											"end": 12489,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12464,
											"end": 12498,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 12464,
											"end": 12498,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 12464,
											"end": 12498,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 12464,
											"end": 12498,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12529,
											"end": 12531,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 12514,
											"end": 12532,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 12507,
											"end": 12541,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 12402,
											"end": 12455,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 12185,
											"end": 12547,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12185,
											"end": 12547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14557,
											"end": 14774,
											"name": "tag",
											"source": 3,
											"value": "293"
										},
										{
											"begin": 14557,
											"end": 14774,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14597,
											"end": 14598,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14623,
											"end": 14624,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14613,
											"end": 14745,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "456"
										},
										{
											"begin": 14613,
											"end": 14745,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14667,
											"end": 14677,
											"name": "PUSH",
											"source": 3,
											"value": "4E487B71"
										},
										{
											"begin": 14662,
											"end": 14665,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 14658,
											"end": 14678,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 14655,
											"end": 14656,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14648,
											"end": 14679,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14702,
											"end": 14706,
											"name": "PUSH",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 14699,
											"end": 14700,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 14692,
											"end": 14707,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14730,
											"end": 14734,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 14727,
											"end": 14728,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 14720,
											"end": 14735,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 14613,
											"end": 14745,
											"name": "tag",
											"source": 3,
											"value": "456"
										},
										{
											"begin": 14613,
											"end": 14745,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14759,
											"end": 14768,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 14759,
											"end": 14768,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 14557,
											"end": 14774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14779,
											"end": 14947,
											"name": "tag",
											"source": 3,
											"value": "323"
										},
										{
											"begin": 14779,
											"end": 14947,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 14852,
											"end": 14861,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 14852,
											"end": 14861,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14852,
											"end": 14861,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 14883,
											"end": 14892,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 14883,
											"end": 14892,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 14900,
											"end": 14915,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14900,
											"end": 14915,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 14900,
											"end": 14915,
											"name": "DIV",
											"source": 3
										},
										{
											"begin": 14894,
											"end": 14916,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 14894,
											"end": 14916,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 14880,
											"end": 14917,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 14870,
											"end": 14941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 14870,
											"end": 14941,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 14921,
											"end": 14939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 14921,
											"end": 14939,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 14921,
											"end": 14939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 14952,
											"end": 15080,
											"name": "tag",
											"source": 3,
											"value": "328"
										},
										{
											"begin": 14952,
											"end": 15080,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 15019,
											"end": 15028,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15019,
											"end": 15028,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15019,
											"end": 15028,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 15040,
											"end": 15051,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15040,
											"end": 15051,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 15040,
											"end": 15051,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 15037,
											"end": 15074,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 15037,
											"end": 15074,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 15037,
											"end": 15074,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 15054,
											"end": 15072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "291"
										},
										{
											"begin": 15054,
											"end": 15072,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "361"
										},
										{
											"begin": 15054,
											"end": 15072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"initial-offering.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"assetBids(uint256,uint256)": "a3d5f1e5",
							"assetCount()": "eafe7a74",
							"assets(uint256)": "cf35bdd0",
							"createAssetOffering(string,uint256,uint256,uint256,uint256)": "503e0578",
							"endBidding(uint256)": "093755ad",
							"executeBidding(uint256)": "b468e0b0",
							"getAssetBasicDetails(uint256)": "b18cc358",
							"getAssetBids(uint256)": "0392cc45",
							"getAssetOwners(uint256)": "686735c5",
							"getLatestAssetCount()": "47582610",
							"placeBid(uint256,uint256)": "57c90de5"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCount\",\"type\":\"uint256\"}],\"name\":\"AssetCountUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"originalOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalShares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumTotalPrice\",\"type\":\"uint256\"}],\"name\":\"AssetCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"BidPlaced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"successful\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"BiddingEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"OwnerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RefundIssued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"SharesAllocated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assetBids\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePerShare\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allocated\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"assetCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"assets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"originalOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesRemaining\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTotalPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"biddingClosed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"biddingEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_totalShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minPricePerShare\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minimumTotalPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_biddingDuration\",\"type\":\"uint256\"}],\"name\":\"createAssetOffering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assetId\",\"type\":\"uint256\"}],\"name\":\"endBidding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assetId\",\"type\":\"uint256\"}],\"name\":\"executeBidding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assetId\",\"type\":\"uint256\"}],\"name\":\"getAssetBasicDetails\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"originalOwner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalShares\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sharesRemaining\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumTotalPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"biddingClosed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"biddingEndTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assetId\",\"type\":\"uint256\"}],\"name\":\"getAssetBids\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"bidders\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shareAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"pricesPerShare\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"allocated\",\"type\":\"bool[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assetId\",\"type\":\"uint256\"}],\"name\":\"getAssetOwners\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"ownerAddresses\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ownerShares\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestAssetCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_assetId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_shareAmount\",\"type\":\"uint256\"}],\"name\":\"placeBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"initial-offering.sol\":\"LuxuryAssetOffering\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"initial-offering.sol\":{\"keccak256\":\"0x35e0f99f49c5e84d21ea816b23f83e759d21d86aa202435251f1677b105f3362\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b183842df3eea881053b4a2e78378085bb36efdd236b613f602b3589e2be1562\",\"dweb:/ipfs/Qmda8RbSPoowCZrASz7p7gsakaQr1HbNMAjJNYp6qnb7No\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "initial-offering.sol:LuxuryAssetOffering",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 429,
								"contract": "initial-offering.sol:LuxuryAssetOffering",
								"label": "assets",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint256,t_struct(Asset)415_storage)"
							},
							{
								"astId": 435,
								"contract": "initial-offering.sol:LuxuryAssetOffering",
								"label": "assetBids",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_array(t_struct(Bid)424_storage)dyn_storage)"
							},
							{
								"astId": 437,
								"contract": "initial-offering.sol:LuxuryAssetOffering",
								"label": "assetCount",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Bid)424_storage)dyn_storage": {
								"base": "t_struct(Bid)424_storage",
								"encoding": "dynamic_array",
								"label": "struct LuxuryAssetOffering.Bid[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_struct(AssetOwner)392_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct LuxuryAssetOffering.AssetOwner)",
								"numberOfBytes": "32",
								"value": "t_struct(AssetOwner)392_storage"
							},
							"t_mapping(t_uint256,t_array(t_struct(Bid)424_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct LuxuryAssetOffering.Bid[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Bid)424_storage)dyn_storage"
							},
							"t_mapping(t_uint256,t_struct(Asset)415_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct LuxuryAssetOffering.Asset)",
								"numberOfBytes": "32",
								"value": "t_struct(Asset)415_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Asset)415_storage": {
								"encoding": "inplace",
								"label": "struct LuxuryAssetOffering.Asset",
								"members": [
									{
										"astId": 394,
										"contract": "initial-offering.sol:LuxuryAssetOffering",
										"label": "originalOwner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 396,
										"contract": "initial-offering.sol:LuxuryAssetOffering",
										"label": "name",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 398,
										"contract": "initial-offering.sol:LuxuryAssetOffering",
										"label": "totalShares",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 400,
										"contract": "initial-offering.sol:LuxuryAssetOffering",
										"label": "sharesRemaining",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 402,
										"contract": "initial-offering.sol:LuxuryAssetOffering",
										"label": "minimumTotalPrice",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 404,
										"contract": "initial-offering.sol:LuxuryAssetOffering",
										"label": "biddingClosed",
										"offset": 0,
										"slot": "5",
										"type": "t_bool"
									},
									{
										"astId": 406,
										"contract": "initial-offering.sol:LuxuryAssetOffering",
										"label": "biddingEndTime",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 409,
										"contract": "initial-offering.sol:LuxuryAssetOffering",
										"label": "ownerAddresses",
										"offset": 0,
										"slot": "7",
										"type": "t_array(t_address)dyn_storage"
									},
									{
										"astId": 414,
										"contract": "initial-offering.sol:LuxuryAssetOffering",
										"label": "owners",
										"offset": 0,
										"slot": "8",
										"type": "t_mapping(t_address,t_struct(AssetOwner)392_storage)"
									}
								],
								"numberOfBytes": "288"
							},
							"t_struct(AssetOwner)392_storage": {
								"encoding": "inplace",
								"label": "struct LuxuryAssetOffering.AssetOwner",
								"members": [
									{
										"astId": 387,
										"contract": "initial-offering.sol:LuxuryAssetOffering",
										"label": "ownerAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 389,
										"contract": "initial-offering.sol:LuxuryAssetOffering",
										"label": "shares",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 391,
										"contract": "initial-offering.sol:LuxuryAssetOffering",
										"label": "exists",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Bid)424_storage": {
								"encoding": "inplace",
								"label": "struct LuxuryAssetOffering.Bid",
								"members": [
									{
										"astId": 417,
										"contract": "initial-offering.sol:LuxuryAssetOffering",
										"label": "bidder",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 419,
										"contract": "initial-offering.sol:LuxuryAssetOffering",
										"label": "shareAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 421,
										"contract": "initial-offering.sol:LuxuryAssetOffering",
										"label": "pricePerShare",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 423,
										"contract": "initial-offering.sol:LuxuryAssetOffering",
										"label": "allocated",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							64
						]
					},
					"id": 65,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 64,
							"linearizedBaseContracts": [
								64
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1676:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1723:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 64,
									"src": "1767:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1811:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1821:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1831:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:0"
									},
									"scope": 64,
									"src": "1797:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "2251:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 21,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "2261:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:0"
											},
											{
												"id": 24,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 25,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 52,
														"src": "2303:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 29,
									"name": "nonReentrant",
									"nameLocation": "2236:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:0"
									},
									"src": "2227:103:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "2375:248:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 35,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 33,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 34,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2479:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 36,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 32,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2608:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:0"
											}
										]
									},
									"id": 44,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:0"
									},
									"scope": 64,
									"src": "2336:287:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 51,
										"nodeType": "Block",
										"src": "2667:171:0",
										"statements": [
											{
												"expression": {
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 47,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2809:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 48,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2819:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 50,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:0"
											}
										]
									},
									"id": 52,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:0"
									},
									"scope": 64,
									"src": "2629:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3081:43:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 58,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "3098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 59,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3109:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 57,
												"id": 61,
												"nodeType": "Return",
												"src": "3091:26:0"
											}
										]
									},
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:0",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "3075:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 55,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:0"
									},
									"scope": 64,
									"src": "3017:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 65,
							"src": "888:2238:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							376
						]
					},
					"id": 377,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 66,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 67,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:1",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 376,
							"linearizedBaseContracts": [
								376
							],
							"name": "SafeMath",
							"nameLocation": "490:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "717:140:1",
										"statements": [
											{
												"id": 97,
												"nodeType": "UncheckedBlock",
												"src": "727:124:1",
												"statements": [
													{
														"assignments": [
															80
														],
														"declarations": [
															{
																"constant": false,
																"id": 80,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 97,
																"src": "751:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 79,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 84,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 81,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "763:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 82,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "767:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 85,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "786:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 86,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 70,
																"src": "790:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 92,
														"nodeType": "IfStatement",
														"src": "782:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 88,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 89,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 90,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 78,
															"id": 91,
															"nodeType": "Return",
															"src": "793:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 94,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 80,
																	"src": "838:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 95,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 78,
														"id": 96,
														"nodeType": "Return",
														"src": "824:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:1",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 99,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:1"
									},
									"returnParameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "702:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 74,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "708:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:1"
									},
									"scope": 376,
									"src": "641:216:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "1078:113:1",
										"statements": [
											{
												"id": 125,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 111,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "1116:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 112,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 102,
																"src": "1120:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 118,
														"nodeType": "IfStatement",
														"src": "1112:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 116,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 110,
															"id": 117,
															"nodeType": "Return",
															"src": "1123:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 122,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 120,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 102,
																		"src": "1168:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 121,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 104,
																		"src": "1172:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 123,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 110,
														"id": 124,
														"nodeType": "Return",
														"src": "1154:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 100,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:1",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1018:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1029:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:1"
									},
									"returnParameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1063:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "1069:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:1"
									},
									"scope": 376,
									"src": "1002:189:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 168,
										"nodeType": "Block",
										"src": "1415:417:1",
										"statements": [
											{
												"id": 167,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 139,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "1683:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 146,
														"nodeType": "IfStatement",
														"src": "1679:28:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 144,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 138,
															"id": 145,
															"nodeType": "Return",
															"src": "1691:16:1"
														}
													},
													{
														"assignments": [
															148
														],
														"declarations": [
															{
																"constant": false,
																"id": 148,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:1",
																"nodeType": "VariableDeclaration",
																"scope": 167,
																"src": "1721:9:1",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 147,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 152,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 149,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 130,
																"src": "1733:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 150,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "1737:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:1"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 153,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "1756:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 154,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 130,
																	"src": "1760:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 156,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "1765:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 162,
														"nodeType": "IfStatement",
														"src": "1752:33:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 160,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 138,
															"id": 161,
															"nodeType": "Return",
															"src": "1768:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 164,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "1813:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 165,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 138,
														"id": 166,
														"nodeType": "Return",
														"src": "1799:16:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:1",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1355:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1366:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:1"
									},
									"returnParameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1400:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 134,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1406:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:1"
									},
									"scope": 376,
									"src": "1339:493:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 196,
										"nodeType": "Block",
										"src": "2057:114:1",
										"statements": [
											{
												"id": 195,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 181,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 174,
																"src": "2095:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 188,
														"nodeType": "IfStatement",
														"src": "2091:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 186,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 180,
															"id": 187,
															"nodeType": "Return",
															"src": "2103:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 189,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 192,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 190,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 172,
																		"src": "2148:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 191,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 174,
																		"src": "2152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 193,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 180,
														"id": 194,
														"nodeType": "Return",
														"src": "2134:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:1",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 197,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1997:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2008:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:1"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2042:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "2048:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:1"
									},
									"scope": 376,
									"src": "1981:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 224,
										"nodeType": "Block",
										"src": "2406:114:1",
										"statements": [
											{
												"id": 223,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:1",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 209,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 202,
																"src": "2444:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 216,
														"nodeType": "IfStatement",
														"src": "2440:29:1",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 214,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 208,
															"id": 215,
															"nodeType": "Return",
															"src": "2452:17:1"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 218,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 200,
																		"src": "2497:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 219,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "2501:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 221,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 208,
														"id": 222,
														"nodeType": "Return",
														"src": "2483:20:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2346:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2357:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2391:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 204,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 225,
												"src": "2397:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:1"
									},
									"scope": 376,
									"src": "2330:190:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 239,
										"nodeType": "Block",
										"src": "2822:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 235,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "2839:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 236,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "2843:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 234,
												"id": 238,
												"nodeType": "Return",
												"src": "2832:12:1"
											}
										]
									},
									"documentation": {
										"id": 226,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:1",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 240,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "2768:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "2779:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:1"
									},
									"returnParameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "2813:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:1"
									},
									"scope": 376,
									"src": "2755:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "3189:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 250,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "3206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 251,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 245,
														"src": "3210:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 249,
												"id": 253,
												"nodeType": "Return",
												"src": "3199:12:1"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3135:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3146:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:1"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "3180:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:1"
									},
									"scope": 376,
									"src": "3122:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "3532:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 265,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 258,
														"src": "3549:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 266,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 260,
														"src": "3553:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 264,
												"id": 268,
												"nodeType": "Return",
												"src": "3542:12:1"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:1",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "3478:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 257,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "3489:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:1"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "3523:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:1"
									},
									"scope": 376,
									"src": "3465:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "3917:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 280,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "3934:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 281,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "3938:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 279,
												"id": 283,
												"nodeType": "Return",
												"src": "3927:12:1"
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3863:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3874:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:1"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "3908:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:1"
									},
									"scope": 376,
									"src": "3850:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "4466:29:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 295,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 288,
														"src": "4483:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 296,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "4487:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 294,
												"id": 298,
												"nodeType": "Return",
												"src": "4476:12:1"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 300,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4412:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4423:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:1"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "4457:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:1"
									},
									"scope": 376,
									"src": "4399:96:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "5054:106:1",
										"statements": [
											{
												"id": 323,
												"nodeType": "UncheckedBlock",
												"src": "5064:90:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 315,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 313,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 305,
																		"src": "5096:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 314,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 303,
																		"src": "5101:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5096:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 316,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 307,
																	"src": "5104:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 312,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5088:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5088:29:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 318,
														"nodeType": "ExpressionStatement",
														"src": "5088:29:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 319,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 303,
																"src": "5138:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 320,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "5142:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5138:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 311,
														"id": 322,
														"nodeType": "Return",
														"src": "5131:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:1",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4980:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "4972:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4991:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "4983:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4983:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5008:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "4994:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 306,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4994:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:50:1"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "5045:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5045:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5044:9:1"
									},
									"scope": 376,
									"src": "4959:201:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "5739:105:1",
										"statements": [
											{
												"id": 348,
												"nodeType": "UncheckedBlock",
												"src": "5749:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 338,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 330,
																		"src": "5781:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5785:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5781:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 341,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 332,
																	"src": "5788:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 337,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5773:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5773:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 343,
														"nodeType": "ExpressionStatement",
														"src": "5773:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 346,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 344,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 328,
																"src": "5822:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 345,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 330,
																"src": "5826:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5822:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 336,
														"id": 347,
														"nodeType": "Return",
														"src": "5815:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 326,
										"nodeType": "StructuredDocumentation",
										"src": "5166:473:1",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5653:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5665:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "5657:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5657:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5676:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "5668:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 329,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5693:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "5679:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 331,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5679:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5656:50:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "5730:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5730:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5729:9:1"
									},
									"scope": 376,
									"src": "5644:200:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "6585:105:1",
										"statements": [
											{
												"id": 373,
												"nodeType": "UncheckedBlock",
												"src": "6595:89:1",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 363,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 355,
																		"src": "6627:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 364,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6631:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6627:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 366,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 357,
																	"src": "6634:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 362,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6619:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6619:28:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 368,
														"nodeType": "ExpressionStatement",
														"src": "6619:28:1"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 369,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "6668:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 370,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 355,
																"src": "6672:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6668:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 361,
														"id": 372,
														"nodeType": "Return",
														"src": "6661:12:1"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "5850:635:1",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6499:3:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6511:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "6503:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6503:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6522:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "6514:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6514:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6539:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "6525:26:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 356,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6525:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6502:50:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "6576:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6576:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6575:9:1"
									},
									"scope": 376,
									"src": "6490:200:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 377,
							"src": "482:6210:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "107:6586:1"
				},
				"id": 1
			},
			"initial-offering.sol": {
				"ast": {
					"absolutePath": "initial-offering.sol",
					"exportedSymbols": {
						"LuxuryAssetOffering": [
							1594
						],
						"ReentrancyGuard": [
							64
						],
						"SafeMath": [
							376
						]
					},
					"id": 1595,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 378,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 379,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1595,
							"sourceUnit": 377,
							"src": "57:57:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 380,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1595,
							"sourceUnit": 65,
							"src": "115:62:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 381,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"211:15:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 64,
										"src": "211:15:2"
									},
									"id": 382,
									"nodeType": "InheritanceSpecifier",
									"src": "211:15:2"
								}
							],
							"canonicalName": "LuxuryAssetOffering",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1594,
							"linearizedBaseContracts": [
								1594,
								64
							],
							"name": "LuxuryAssetOffering",
							"nameLocation": "188:19:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 385,
									"libraryName": {
										"id": 383,
										"name": "SafeMath",
										"nameLocations": [
											"239:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 376,
										"src": "239:8:2"
									},
									"nodeType": "UsingForDirective",
									"src": "233:27:2",
									"typeName": {
										"id": 384,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "252:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"canonicalName": "LuxuryAssetOffering.AssetOwner",
									"id": 392,
									"members": [
										{
											"constant": false,
											"id": 387,
											"mutability": "mutable",
											"name": "ownerAddress",
											"nameLocation": "306:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 392,
											"src": "298:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 386,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "298:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 389,
											"mutability": "mutable",
											"name": "shares",
											"nameLocation": "336:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 392,
											"src": "328:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 388,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "328:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 391,
											"mutability": "mutable",
											"name": "exists",
											"nameLocation": "357:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 392,
											"src": "352:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 390,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "352:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AssetOwner",
									"nameLocation": "277:10:2",
									"nodeType": "StructDefinition",
									"scope": 1594,
									"src": "270:100:2",
									"visibility": "public"
								},
								{
									"canonicalName": "LuxuryAssetOffering.Asset",
									"id": 415,
									"members": [
										{
											"constant": false,
											"id": 394,
											"mutability": "mutable",
											"name": "originalOwner",
											"nameLocation": "411:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 415,
											"src": "403:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 393,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "403:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 396,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "478:4:2",
											"nodeType": "VariableDeclaration",
											"scope": 415,
											"src": "471:11:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 395,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "471:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 398,
											"mutability": "mutable",
											"name": "totalShares",
											"nameLocation": "500:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 415,
											"src": "492:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 397,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "492:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 400,
											"mutability": "mutable",
											"name": "sharesRemaining",
											"nameLocation": "529:15:2",
											"nodeType": "VariableDeclaration",
											"scope": 415,
											"src": "521:23:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 399,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "521:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 402,
											"mutability": "mutable",
											"name": "minimumTotalPrice",
											"nameLocation": "599:17:2",
											"nodeType": "VariableDeclaration",
											"scope": 415,
											"src": "591:25:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 401,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "591:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 404,
											"mutability": "mutable",
											"name": "biddingClosed",
											"nameLocation": "668:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 415,
											"src": "663:18:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 403,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "663:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 406,
											"mutability": "mutable",
											"name": "biddingEndTime",
											"nameLocation": "699:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 415,
											"src": "691:22:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 405,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "691:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 409,
											"mutability": "mutable",
											"name": "ownerAddresses",
											"nameLocation": "733:14:2",
											"nodeType": "VariableDeclaration",
											"scope": 415,
											"src": "723:24:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "723:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 408,
												"nodeType": "ArrayTypeName",
												"src": "723:9:2",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 414,
											"mutability": "mutable",
											"name": "owners",
											"nameLocation": "820:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 415,
											"src": "789:37:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetOwner_$392_storage_$",
												"typeString": "mapping(address => struct LuxuryAssetOffering.AssetOwner)"
											},
											"typeName": {
												"id": 413,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "789:30:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetOwner_$392_storage_$",
													"typeString": "mapping(address => struct LuxuryAssetOffering.AssetOwner)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 412,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 411,
														"name": "AssetOwner",
														"nameLocations": [
															"808:10:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 392,
														"src": "808:10:2"
													},
													"referencedDeclaration": 392,
													"src": "808:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AssetOwner_$392_storage_ptr",
														"typeString": "struct LuxuryAssetOffering.AssetOwner"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Asset",
									"nameLocation": "387:5:2",
									"nodeType": "StructDefinition",
									"scope": 1594,
									"src": "380:486:2",
									"visibility": "public"
								},
								{
									"canonicalName": "LuxuryAssetOffering.Bid",
									"id": 424,
									"members": [
										{
											"constant": false,
											"id": 417,
											"mutability": "mutable",
											"name": "bidder",
											"nameLocation": "905:6:2",
											"nodeType": "VariableDeclaration",
											"scope": 424,
											"src": "897:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 416,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "897:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 419,
											"mutability": "mutable",
											"name": "shareAmount",
											"nameLocation": "929:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 424,
											"src": "921:19:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 418,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "921:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 421,
											"mutability": "mutable",
											"name": "pricePerShare",
											"nameLocation": "958:13:2",
											"nodeType": "VariableDeclaration",
											"scope": 424,
											"src": "950:21:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 420,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "950:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 423,
											"mutability": "mutable",
											"name": "allocated",
											"nameLocation": "986:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 424,
											"src": "981:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 422,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "981:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bid",
									"nameLocation": "883:3:2",
									"nodeType": "StructDefinition",
									"scope": 1594,
									"src": "876:126:2",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "cf35bdd0",
									"id": 429,
									"mutability": "mutable",
									"name": "assets",
									"nameLocation": "1045:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 1594,
									"src": "1012:39:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Asset_$415_storage_$",
										"typeString": "mapping(uint256 => struct LuxuryAssetOffering.Asset)"
									},
									"typeName": {
										"id": 428,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 425,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1012:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Asset_$415_storage_$",
											"typeString": "mapping(uint256 => struct LuxuryAssetOffering.Asset)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 427,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 426,
												"name": "Asset",
												"nameLocations": [
													"1031:5:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 415,
												"src": "1031:5:2"
											},
											"referencedDeclaration": 415,
											"src": "1031:5:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
												"typeString": "struct LuxuryAssetOffering.Asset"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a3d5f1e5",
									"id": 435,
									"mutability": "mutable",
									"name": "assetBids",
									"nameLocation": "1090:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1594,
									"src": "1057:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$424_storage_$dyn_storage_$",
										"typeString": "mapping(uint256 => struct LuxuryAssetOffering.Bid[])"
									},
									"typeName": {
										"id": 434,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 430,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1065:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1057:25:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$424_storage_$dyn_storage_$",
											"typeString": "mapping(uint256 => struct LuxuryAssetOffering.Bid[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 432,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 431,
													"name": "Bid",
													"nameLocations": [
														"1076:3:2"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 424,
													"src": "1076:3:2"
												},
												"referencedDeclaration": 424,
												"src": "1076:3:2",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
													"typeString": "struct LuxuryAssetOffering.Bid"
												}
											},
											"id": 433,
											"nodeType": "ArrayTypeName",
											"src": "1076:5:2",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
												"typeString": "struct LuxuryAssetOffering.Bid[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "eafe7a74",
									"id": 437,
									"mutability": "mutable",
									"name": "assetCount",
									"nameLocation": "1120:10:2",
									"nodeType": "VariableDeclaration",
									"scope": 1594,
									"src": "1105:25:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 436,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1105:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "01b72beabfa8420e9b47a1c3d6764a97e2044c51b3368b66b161a5fc8ceebccf",
									"id": 449,
									"name": "AssetCreated",
									"nameLocation": "1185:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"indexed": true,
												"mutability": "mutable",
												"name": "assetId",
												"nameLocation": "1214:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "1198:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1198:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"indexed": true,
												"mutability": "mutable",
												"name": "originalOwner",
												"nameLocation": "1239:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "1223:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1261:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "1254:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 442,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1254:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalShares",
												"nameLocation": "1275:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "1267:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"indexed": false,
												"mutability": "mutable",
												"name": "minimumTotalPrice",
												"nameLocation": "1296:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 449,
												"src": "1288:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1288:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1197:117:2"
									},
									"src": "1179:136:2"
								},
								{
									"anonymous": false,
									"eventSelector": "51db8e23b3f4479b162fd48823b8402895442b8f6cfd94f66239391881ec7b6f",
									"id": 459,
									"name": "BidPlaced",
									"nameLocation": "1326:9:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"indexed": true,
												"mutability": "mutable",
												"name": "assetId",
												"nameLocation": "1352:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1336:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"indexed": true,
												"mutability": "mutable",
												"name": "bidder",
												"nameLocation": "1377:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1361:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1361:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "1393:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1385:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1385:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1409:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1401:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1401:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1335:80:2"
									},
									"src": "1320:96:2"
								},
								{
									"anonymous": false,
									"eventSelector": "46d3c445b404e9de2c80e1c0489cc92f23dfd5462ce7c6b3a1a54b3f0f70bcfc",
									"id": 469,
									"name": "SharesAllocated",
									"nameLocation": "1427:15:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"indexed": true,
												"mutability": "mutable",
												"name": "assetId",
												"nameLocation": "1459:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "1443:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"indexed": true,
												"mutability": "mutable",
												"name": "bidder",
												"nameLocation": "1484:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "1468:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1468:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "1500:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "1492:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1492:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1516:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 469,
												"src": "1508:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1508:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1442:80:2"
									},
									"src": "1421:102:2"
								},
								{
									"anonymous": false,
									"eventSelector": "a171b6942063c6f2800ce40a780edce37baa2b618571b11eedd1e69e626e7d76",
									"id": 475,
									"name": "RefundIssued",
									"nameLocation": "1534:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"indexed": true,
												"mutability": "mutable",
												"name": "bidder",
												"nameLocation": "1563:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1547:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1579:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 475,
												"src": "1571:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1571:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1546:40:2"
									},
									"src": "1528:59:2"
								},
								{
									"anonymous": false,
									"eventSelector": "4d7a5e450395fb8fb6b67c4751f80f057cd5a74550929306eff2cac7f0ecc188",
									"id": 483,
									"name": "BiddingEnded",
									"nameLocation": "1598:12:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"indexed": true,
												"mutability": "mutable",
												"name": "assetId",
												"nameLocation": "1627:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "1611:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1611:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"indexed": false,
												"mutability": "mutable",
												"name": "successful",
												"nameLocation": "1641:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "1636:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 478,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1636:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1661:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "1653:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1653:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1610:61:2"
									},
									"src": "1592:80:2"
								},
								{
									"anonymous": false,
									"eventSelector": "25af9e0275abbb4de910d2062f5dcca6d4c47f1313066083dd9d7077608a7a54",
									"id": 491,
									"name": "OwnerAdded",
									"nameLocation": "1683:10:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"indexed": true,
												"mutability": "mutable",
												"name": "assetId",
												"nameLocation": "1710:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "1694:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1735:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "1719:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1719:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"indexed": false,
												"mutability": "mutable",
												"name": "shares",
												"nameLocation": "1750:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "1742:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1693:64:2"
									},
									"src": "1677:81:2"
								},
								{
									"anonymous": false,
									"eventSelector": "dbad7356874fb84060a1e809f3b9f73d977da5f6e62d52682c065d51d15435c6",
									"id": 495,
									"name": "AssetCountUpdated",
									"nameLocation": "1769:17:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"indexed": false,
												"mutability": "mutable",
												"name": "newCount",
												"nameLocation": "1795:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "1787:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1787:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1786:18:2"
									},
									"src": "1763:42:2"
								},
								{
									"body": {
										"id": 639,
										"nodeType": "Block",
										"src": "2056:1267:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 511,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 509,
																"name": "_totalShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 499,
																"src": "2074:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 510,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2089:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2074:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420736861726520636f756e74",
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2092:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_de457caaba2cd98cb8dedbc6d33667526c4ecb91f62ade29eeaee1391f7fa60f",
																"typeString": "literal_string \"Invalid share count\""
															},
															"value": "Invalid share count"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_de457caaba2cd98cb8dedbc6d33667526c4ecb91f62ade29eeaee1391f7fa60f",
																"typeString": "literal_string \"Invalid share count\""
															}
														],
														"id": 508,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2066:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2066:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 514,
												"nodeType": "ExpressionStatement",
												"src": "2066:48:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 516,
																"name": "_minPricePerShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 501,
																"src": "2132:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2152:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2132:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206d696e696d756d20707269636520706572207368617265",
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2155:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8c1cad1af2254206997ae1c3d22293c820984c676cba92a0d2942294ac246808",
																"typeString": "literal_string \"Invalid minimum price per share\""
															},
															"value": "Invalid minimum price per share"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8c1cad1af2254206997ae1c3d22293c820984c676cba92a0d2942294ac246808",
																"typeString": "literal_string \"Invalid minimum price per share\""
															}
														],
														"id": 515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2124:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2124:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "ExpressionStatement",
												"src": "2124:65:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 523,
																"name": "_minimumTotalPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 503,
																"src": "2207:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2228:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2207:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206d696e696d756d20746f74616c207072696365",
															"id": 526,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2231:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2660f134c570050d07081949ab61b8e2ef1ea86f2b1188677e00a97048789cae",
																"typeString": "literal_string \"Invalid minimum total price\""
															},
															"value": "Invalid minimum total price"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2660f134c570050d07081949ab61b8e2ef1ea86f2b1188677e00a97048789cae",
																"typeString": "literal_string \"Invalid minimum total price\""
															}
														],
														"id": 522,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2199:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2199:62:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "2199:62:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 532,
																			"name": "_name",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 497,
																			"src": "2285:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2279:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 530,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "2279:5:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 533,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2279:12:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2292:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2279:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 535,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2301:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2279:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e616d652063616e6e6f7420626520656d707479",
															"id": 537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2304:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a",
																"typeString": "literal_string \"Name cannot be empty\""
															},
															"value": "Name cannot be empty"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1786c81c5bf1c93c94a3e63df6f65dc894961d7358d06345daa60c7e17cb737a",
																"typeString": "literal_string \"Name cannot be empty\""
															}
														],
														"id": 529,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2271:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2271:56:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "2271:56:2"
											},
											{
												"expression": {
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "2346:12:2",
													"subExpression": {
														"id": 540,
														"name": "assetCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "2346:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 542,
												"nodeType": "ExpressionStatement",
												"src": "2346:12:2"
											},
											{
												"assignments": [
													545
												],
												"declarations": [
													{
														"constant": false,
														"id": 545,
														"mutability": "mutable",
														"name": "newAsset",
														"nameLocation": "2391:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 639,
														"src": "2377:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
															"typeString": "struct LuxuryAssetOffering.Asset"
														},
														"typeName": {
															"id": 544,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 543,
																"name": "Asset",
																"nameLocations": [
																	"2377:5:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 415,
																"src": "2377:5:2"
															},
															"referencedDeclaration": 415,
															"src": "2377:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Asset"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 549,
												"initialValue": {
													"baseExpression": {
														"id": 546,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "2402:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Asset_$415_storage_$",
															"typeString": "mapping(uint256 => struct LuxuryAssetOffering.Asset storage ref)"
														}
													},
													"id": 548,
													"indexExpression": {
														"id": 547,
														"name": "assetCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "2409:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2402:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Asset_$415_storage",
														"typeString": "struct LuxuryAssetOffering.Asset storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2377:43:2"
											},
											{
												"expression": {
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 550,
															"name": "newAsset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "2430:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
															}
														},
														"id": 552,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2439:13:2",
														"memberName": "originalOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 394,
														"src": "2430:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 553,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2455:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2459:6:2",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2455:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2430:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "2430:35:2"
											},
											{
												"expression": {
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 557,
															"name": "newAsset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "2475:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
															}
														},
														"id": 559,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2484:4:2",
														"memberName": "name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 396,
														"src": "2475:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 560,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "2491:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2475:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "2475:21:2"
											},
											{
												"expression": {
													"id": 567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 563,
															"name": "newAsset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "2506:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
															}
														},
														"id": 565,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2515:11:2",
														"memberName": "totalShares",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 398,
														"src": "2506:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 566,
														"name": "_totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "2529:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2506:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 568,
												"nodeType": "ExpressionStatement",
												"src": "2506:35:2"
											},
											{
												"expression": {
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 569,
															"name": "newAsset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "2551:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
															}
														},
														"id": 571,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2560:15:2",
														"memberName": "sharesRemaining",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 400,
														"src": "2551:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 572,
														"name": "_totalShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "2578:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2551:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 574,
												"nodeType": "ExpressionStatement",
												"src": "2551:39:2"
											},
											{
												"expression": {
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 575,
															"name": "newAsset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "2658:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
															}
														},
														"id": 577,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2667:17:2",
														"memberName": "minimumTotalPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 402,
														"src": "2658:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 578,
														"name": "_minimumTotalPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 503,
														"src": "2687:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2658:47:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 580,
												"nodeType": "ExpressionStatement",
												"src": "2658:47:2"
											},
											{
												"expression": {
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 581,
															"name": "newAsset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "2715:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
															}
														},
														"id": 583,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2724:13:2",
														"memberName": "biddingClosed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 404,
														"src": "2715:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 584,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2740:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2715:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 586,
												"nodeType": "ExpressionStatement",
												"src": "2715:30:2"
											},
											{
												"expression": {
													"id": 594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 587,
															"name": "newAsset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "2755:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
															}
														},
														"id": 589,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2764:14:2",
														"memberName": "biddingEndTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 406,
														"src": "2755:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 593,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 590,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2781:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2787:9:2",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2781:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 592,
															"name": "_biddingDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "2799:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2781:34:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2755:60:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 595,
												"nodeType": "ExpressionStatement",
												"src": "2755:60:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 601,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2937:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 602,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2941:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2937:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 596,
																"name": "newAsset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "2908:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																	"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																}
															},
															"id": 599,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2917:14:2",
															"memberName": "ownerAddresses",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 409,
															"src": "2908:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 600,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2932:4:2",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2908:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2908:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 604,
												"nodeType": "ExpressionStatement",
												"src": "2908:40:2"
											},
											{
												"expression": {
													"id": 617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 605,
																"name": "newAsset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 545,
																"src": "2958:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																	"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																}
															},
															"id": 609,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2967:6:2",
															"memberName": "owners",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 414,
															"src": "2958:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetOwner_$392_storage_$",
																"typeString": "mapping(address => struct LuxuryAssetOffering.AssetOwner storage ref)"
															}
														},
														"id": 610,
														"indexExpression": {
															"expression": {
																"id": 607,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2974:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2978:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2974:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2958:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AssetOwner_$392_storage",
															"typeString": "struct LuxuryAssetOffering.AssetOwner storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 612,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3027:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3031:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3027:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 614,
																"name": "_totalShares",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 499,
																"src": "3059:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "74727565",
																"id": 615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3093:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 611,
															"name": "AssetOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "2988:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_AssetOwner_$392_storage_ptr_$",
																"typeString": "type(struct LuxuryAssetOffering.AssetOwner storage pointer)"
															}
														},
														"id": 616,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"3013:12:2",
															"3051:6:2",
															"3085:6:2"
														],
														"names": [
															"ownerAddress",
															"shares",
															"exists"
														],
														"nodeType": "FunctionCall",
														"src": "2988:120:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AssetOwner_$392_memory_ptr",
															"typeString": "struct LuxuryAssetOffering.AssetOwner memory"
														}
													},
													"src": "2958:150:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AssetOwner_$392_storage",
														"typeString": "struct LuxuryAssetOffering.AssetOwner storage ref"
													}
												},
												"id": 618,
												"nodeType": "ExpressionStatement",
												"src": "2958:150:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 620,
															"name": "assetCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "3145:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 621,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3157:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3161:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3157:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 623,
															"name": "_name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 497,
															"src": "3169:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 624,
															"name": "_totalShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "3176:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 625,
															"name": "_minimumTotalPrice",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 503,
															"src": "3190:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 619,
														"name": "AssetCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "3132:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,string memory,uint256,uint256)"
														}
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3132:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 627,
												"nodeType": "EmitStatement",
												"src": "3127:82:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 629,
															"name": "assetCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "3235:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 630,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3247:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3251:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3247:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 632,
															"name": "_totalShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "3259:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 628,
														"name": "OwnerAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 491,
														"src": "3224:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256)"
														}
													},
													"id": 633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3224:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 634,
												"nodeType": "EmitStatement",
												"src": "3219:53:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 636,
															"name": "assetCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 437,
															"src": "3305:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 635,
														"name": "AssetCountUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "3287:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 637,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3287:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 638,
												"nodeType": "EmitStatement",
												"src": "3282:34:2"
											}
										]
									},
									"functionSelector": "503e0578",
									"id": 640,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createAssetOffering",
									"nameLocation": "1857:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "_name",
												"nameLocation": "1900:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1886:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 496,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1886:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "_totalShares",
												"nameLocation": "1923:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1915:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1915:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "_minPricePerShare",
												"nameLocation": "1953:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1945:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1945:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "_minimumTotalPrice",
												"nameLocation": "1988:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "1980:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1980:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "_biddingDuration",
												"nameLocation": "2024:16:2",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2016:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1876:170:2"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2056:0:2"
									},
									"scope": 1594,
									"src": "1848:1475:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "3426:34:2",
										"statements": [
											{
												"expression": {
													"id": 645,
													"name": "assetCount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 437,
													"src": "3443:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 644,
												"id": 646,
												"nodeType": "Return",
												"src": "3436:17:2"
											}
										]
									},
									"functionSelector": "47582610",
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLatestAssetCount",
									"nameLocation": "3372:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3391:2:2"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3417:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3417:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3416:9:2"
									},
									"scope": 1594,
									"src": "3363:97:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "3831:434:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 668,
																	"name": "_assetId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 650,
																	"src": "3849:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3860:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3849:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 671,
																	"name": "_assetId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 650,
																	"src": "3865:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 672,
																	"name": "assetCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "3877:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3865:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3849:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206173736574204944",
															"id": 675,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3889:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2f302c4a317eeeaa66ff142a8019be7f7a17e4f751a3204fdf93094743ebab94",
																"typeString": "literal_string \"Invalid asset ID\""
															},
															"value": "Invalid asset ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2f302c4a317eeeaa66ff142a8019be7f7a17e4f751a3204fdf93094743ebab94",
																"typeString": "literal_string \"Invalid asset ID\""
															}
														],
														"id": 667,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3841:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3841:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 677,
												"nodeType": "ExpressionStatement",
												"src": "3841:67:2"
											},
											{
												"assignments": [
													680
												],
												"declarations": [
													{
														"constant": false,
														"id": 680,
														"mutability": "mutable",
														"name": "asset",
														"nameLocation": "3932:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 701,
														"src": "3918:19:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
															"typeString": "struct LuxuryAssetOffering.Asset"
														},
														"typeName": {
															"id": 679,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 678,
																"name": "Asset",
																"nameLocations": [
																	"3918:5:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 415,
																"src": "3918:5:2"
															},
															"referencedDeclaration": 415,
															"src": "3918:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Asset"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 684,
												"initialValue": {
													"baseExpression": {
														"id": 681,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "3940:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Asset_$415_storage_$",
															"typeString": "mapping(uint256 => struct LuxuryAssetOffering.Asset storage ref)"
														}
													},
													"id": 683,
													"indexExpression": {
														"id": 682,
														"name": "_assetId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 650,
														"src": "3947:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3940:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Asset_$415_storage",
														"typeString": "struct LuxuryAssetOffering.Asset storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3918:38:2"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 685,
																"name": "asset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "3996:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																	"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																}
															},
															"id": 686,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4002:13:2",
															"memberName": "originalOwner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 394,
															"src": "3996:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 687,
																"name": "asset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "4029:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																	"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4035:4:2",
															"memberName": "name",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 396,
															"src": "4029:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"id": 689,
																"name": "asset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "4053:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																	"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																}
															},
															"id": 690,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4059:11:2",
															"memberName": "totalShares",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 398,
															"src": "4053:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 691,
																"name": "asset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "4084:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																	"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																}
															},
															"id": 692,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4090:15:2",
															"memberName": "sharesRemaining",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 400,
															"src": "4084:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 693,
																"name": "asset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "4158:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																	"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																}
															},
															"id": 694,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4164:17:2",
															"memberName": "minimumTotalPrice",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 402,
															"src": "4158:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 695,
																"name": "asset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "4195:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																	"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4201:13:2",
															"memberName": "biddingClosed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 404,
															"src": "4195:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 697,
																"name": "asset",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 680,
																"src": "4228:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																	"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																}
															},
															"id": 698,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4234:14:2",
															"memberName": "biddingEndTime",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 406,
															"src": "4228:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 699,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3982:276:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_string_storage_$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$",
														"typeString": "tuple(address,string storage ref,uint256,uint256,uint256,bool,uint256)"
													}
												},
												"functionReturnParameters": 666,
												"id": 700,
												"nodeType": "Return",
												"src": "3975:283:2"
											}
										]
									},
									"functionSelector": "b18cc358",
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAssetBasicDetails",
									"nameLocation": "3510:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "_assetId",
												"nameLocation": "3539:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "3531:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3531:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3530:18:2"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "originalOwner",
												"nameLocation": "3589:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "3581:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3626:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "3612:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 654,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3612:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "totalShares",
												"nameLocation": "3648:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "3640:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "sharesRemaining",
												"nameLocation": "3677:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "3669:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3669:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "minimumTotalPrice",
												"nameLocation": "3747:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "3739:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "biddingClosed",
												"nameLocation": "3779:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "3774:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 662,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3774:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "biddingEndTime",
												"nameLocation": "3810:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "3802:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3571:259:2"
									},
									"scope": 1594,
									"src": "3501:764:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 792,
										"nodeType": "Block",
										"src": "4459:595:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 714,
																	"name": "_assetId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 704,
																	"src": "4477:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4488:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4477:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 717,
																	"name": "_assetId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 704,
																	"src": "4493:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 718,
																	"name": "assetCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "4505:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4493:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4477:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206173736574204944",
															"id": 721,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4517:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2f302c4a317eeeaa66ff142a8019be7f7a17e4f751a3204fdf93094743ebab94",
																"typeString": "literal_string \"Invalid asset ID\""
															},
															"value": "Invalid asset ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2f302c4a317eeeaa66ff142a8019be7f7a17e4f751a3204fdf93094743ebab94",
																"typeString": "literal_string \"Invalid asset ID\""
															}
														],
														"id": 713,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4469:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4469:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 723,
												"nodeType": "ExpressionStatement",
												"src": "4469:67:2"
											},
											{
												"assignments": [
													726
												],
												"declarations": [
													{
														"constant": false,
														"id": 726,
														"mutability": "mutable",
														"name": "asset",
														"nameLocation": "4560:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 792,
														"src": "4546:19:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
															"typeString": "struct LuxuryAssetOffering.Asset"
														},
														"typeName": {
															"id": 725,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 724,
																"name": "Asset",
																"nameLocations": [
																	"4546:5:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 415,
																"src": "4546:5:2"
															},
															"referencedDeclaration": 415,
															"src": "4546:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Asset"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 730,
												"initialValue": {
													"baseExpression": {
														"id": 727,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "4568:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Asset_$415_storage_$",
															"typeString": "mapping(uint256 => struct LuxuryAssetOffering.Asset storage ref)"
														}
													},
													"id": 729,
													"indexExpression": {
														"id": 728,
														"name": "_assetId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "4575:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4568:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Asset_$415_storage",
														"typeString": "struct LuxuryAssetOffering.Asset storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4546:38:2"
											},
											{
												"assignments": [
													732
												],
												"declarations": [
													{
														"constant": false,
														"id": 732,
														"mutability": "mutable",
														"name": "ownerCount",
														"nameLocation": "4611:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 792,
														"src": "4603:18:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 731,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4603:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 736,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 733,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "4624:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
															}
														},
														"id": 734,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4630:14:2",
														"memberName": "ownerAddresses",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "4624:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4645:6:2",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "4624:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4603:48:2"
											},
											{
												"expression": {
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 737,
														"name": "ownerAddresses",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 708,
														"src": "4661:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 741,
																"name": "ownerCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 732,
																"src": "4692:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "4678:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (address[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 738,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4682:7:2",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 739,
																"nodeType": "ArrayTypeName",
																"src": "4682:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																	"typeString": "address[]"
																}
															}
														},
														"id": 742,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4678:25:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "4661:42:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "4661:42:2"
											},
											{
												"expression": {
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 745,
														"name": "ownerShares",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "4713:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 749,
																"name": "ownerCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 732,
																"src": "4741:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "4727:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 746,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4731:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 747,
																"nodeType": "ArrayTypeName",
																"src": "4731:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4727:25:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "4713:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "4713:39:2"
											},
											{
												"body": {
													"id": 786,
													"nodeType": "Block",
													"src": "4812:181:2",
													"statements": [
														{
															"assignments": [
																764
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 764,
																	"mutability": "mutable",
																	"name": "ownerAddress",
																	"nameLocation": "4834:12:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 786,
																	"src": "4826:20:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 763,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4826:7:2",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 769,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 765,
																		"name": "asset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "4849:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																			"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																		}
																	},
																	"id": 766,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4855:14:2",
																	"memberName": "ownerAddresses",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 409,
																	"src": "4849:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 768,
																"indexExpression": {
																	"id": 767,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 754,
																	"src": "4870:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4849:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "4826:46:2"
														},
														{
															"expression": {
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 770,
																		"name": "ownerAddresses",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 708,
																		"src": "4886:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 772,
																	"indexExpression": {
																		"id": 771,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 754,
																		"src": "4901:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4886:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 773,
																	"name": "ownerAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 764,
																	"src": "4906:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4886:32:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 775,
															"nodeType": "ExpressionStatement",
															"src": "4886:32:2"
														},
														{
															"expression": {
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 776,
																		"name": "ownerShares",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 711,
																		"src": "4932:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 778,
																	"indexExpression": {
																		"id": 777,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 754,
																		"src": "4944:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "4932:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"expression": {
																				"id": 779,
																				"name": "asset",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 726,
																				"src": "4949:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																					"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																				}
																			},
																			"id": 780,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4955:6:2",
																			"memberName": "owners",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 414,
																			"src": "4949:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetOwner_$392_storage_$",
																				"typeString": "mapping(address => struct LuxuryAssetOffering.AssetOwner storage ref)"
																			}
																		},
																		"id": 782,
																		"indexExpression": {
																			"id": 781,
																			"name": "ownerAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 764,
																			"src": "4962:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4949:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AssetOwner_$392_storage",
																			"typeString": "struct LuxuryAssetOffering.AssetOwner storage ref"
																		}
																	},
																	"id": 783,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4976:6:2",
																	"memberName": "shares",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 389,
																	"src": "4949:33:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4932:50:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 785,
															"nodeType": "ExpressionStatement",
															"src": "4932:50:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 757,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "4791:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 758,
														"name": "ownerCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 732,
														"src": "4795:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4791:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 787,
												"initializationExpression": {
													"assignments": [
														754
													],
													"declarations": [
														{
															"constant": false,
															"id": 754,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4784:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 787,
															"src": "4776:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 753,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4776:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 756,
													"initialValue": {
														"hexValue": "30",
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4788:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4776:13:2"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4807:3:2",
														"subExpression": {
															"id": 760,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 754,
															"src": "4807:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 762,
													"nodeType": "ExpressionStatement",
													"src": "4807:3:2"
												},
												"nodeType": "ForStatement",
												"src": "4771:222:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 788,
															"name": "ownerAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "5019:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 789,
															"name": "ownerShares",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 711,
															"src": "5035:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"id": 790,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5018:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(address[] memory,uint256[] memory)"
													}
												},
												"functionReturnParameters": 712,
												"id": 791,
												"nodeType": "Return",
												"src": "5011:36:2"
											}
										]
									},
									"functionSelector": "686735c5",
									"id": 793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAssetOwners",
									"nameLocation": "4318:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "_assetId",
												"nameLocation": "4341:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4333:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4333:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4332:18:2"
									},
									"returnParameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "ownerAddresses",
												"nameLocation": "4400:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4383:31:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 706,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "4383:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 707,
													"nodeType": "ArrayTypeName",
													"src": "4383:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "ownerShares",
												"nameLocation": "4441:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "4424:28:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 709,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "4424:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 710,
													"nodeType": "ArrayTypeName",
													"src": "4424:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:85:2"
									},
									"scope": 1594,
									"src": "4309:745:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "5180:708:2",
										"statements": [
											{
												"assignments": [
													804
												],
												"declarations": [
													{
														"constant": false,
														"id": 804,
														"mutability": "mutable",
														"name": "asset",
														"nameLocation": "5204:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 861,
														"src": "5190:19:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
															"typeString": "struct LuxuryAssetOffering.Asset"
														},
														"typeName": {
															"id": 803,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 802,
																"name": "Asset",
																"nameLocations": [
																	"5190:5:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 415,
																"src": "5190:5:2"
															},
															"referencedDeclaration": 415,
															"src": "5190:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Asset"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 808,
												"initialValue": {
													"baseExpression": {
														"id": 805,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "5212:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Asset_$415_storage_$",
															"typeString": "mapping(uint256 => struct LuxuryAssetOffering.Asset storage ref)"
														}
													},
													"id": 807,
													"indexExpression": {
														"id": 806,
														"name": "_assetId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 795,
														"src": "5219:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5212:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Asset_$415_storage",
														"typeString": "struct LuxuryAssetOffering.Asset storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5190:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5246:20:2",
															"subExpression": {
																"expression": {
																	"id": 810,
																	"name": "asset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "5247:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																		"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																	}
																},
																"id": 811,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5253:13:2",
																"memberName": "biddingClosed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 404,
																"src": "5247:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42696464696e6720636c6f736564",
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5268:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_119a2f4ad272726f690e20370d39e55ca3ab5b4c8e68a193f694062fe42aa1ce",
																"typeString": "literal_string \"Bidding closed\""
															},
															"value": "Bidding closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_119a2f4ad272726f690e20370d39e55ca3ab5b4c8e68a193f694062fe42aa1ce",
																"typeString": "literal_string \"Bidding closed\""
															}
														],
														"id": 809,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5238:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5238:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "5238:47:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 821,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 817,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5303:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5309:9:2",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5303:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 819,
																	"name": "asset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 804,
																	"src": "5321:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																		"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																	}
																},
																"id": 820,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5327:14:2",
																"memberName": "biddingEndTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 406,
																"src": "5321:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5303:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42696464696e6720706572696f6420656e646564",
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5343:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_57592abfbda94eb909abef2196f77385e01da573d6304a2883cd72451377302b",
																"typeString": "literal_string \"Bidding period ended\""
															},
															"value": "Bidding period ended"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_57592abfbda94eb909abef2196f77385e01da573d6304a2883cd72451377302b",
																"typeString": "literal_string \"Bidding period ended\""
															}
														],
														"id": 816,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5295:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5295:71:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "5295:71:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 826,
																"name": "_shareAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "5384:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5399:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5384:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420736861726520616d6f756e74",
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5402:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc",
																"typeString": "literal_string \"Invalid share amount\""
															},
															"value": "Invalid share amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3f5ea3b2bc856256cdfe82fff93182768c93dccdf1da57447b61178dd98256dc",
																"typeString": "literal_string \"Invalid share amount\""
															}
														],
														"id": 825,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5376:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 830,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5376:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 831,
												"nodeType": "ExpressionStatement",
												"src": "5376:49:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 837,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5636:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5640:6:2",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5636:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 839,
																	"name": "_shareAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "5673:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 843,
																			"name": "_shareAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 797,
																			"src": "5728:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 840,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "5714:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5718:5:2",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "5714:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 842,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5724:3:2",
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 285,
																		"src": "5714:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 844,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5714:27:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5766:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 836,
																"name": "Bid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 424,
																"src": "5610:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Bid_$424_storage_ptr_$",
																	"typeString": "type(struct LuxuryAssetOffering.Bid storage pointer)"
																}
															},
															"id": 846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"5628:6:2",
																"5660:11:2",
																"5699:13:2",
																"5755:9:2"
															],
															"names": [
																"bidder",
																"shareAmount",
																"pricePerShare",
																"allocated"
															],
															"nodeType": "FunctionCall",
															"src": "5610:172:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bid_$424_memory_ptr",
																"typeString": "struct LuxuryAssetOffering.Bid memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Bid_$424_memory_ptr",
																"typeString": "struct LuxuryAssetOffering.Bid memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 832,
																"name": "assetBids",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "5585:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$424_storage_$dyn_storage_$",
																	"typeString": "mapping(uint256 => struct LuxuryAssetOffering.Bid storage ref[] storage ref)"
																}
															},
															"id": 834,
															"indexExpression": {
																"id": 833,
																"name": "_assetId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "5595:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5585:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage",
																"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage ref"
															}
														},
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5605:4:2",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "5585:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr_$_t_struct$_Bid_$424_storage_$returns$__$attached_to$_t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct LuxuryAssetOffering.Bid storage ref[] storage pointer,struct LuxuryAssetOffering.Bid storage ref)"
														}
													},
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5585:198:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "5585:198:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 850,
															"name": "_assetId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "5817:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 851,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5827:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5831:6:2",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5827:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 853,
															"name": "_shareAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "5839:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 857,
																	"name": "_shareAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 797,
																	"src": "5867:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"expression": {
																		"id": 854,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5853:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5857:5:2",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "5853:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5863:3:2",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 285,
																"src": "5853:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5853:27:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 849,
														"name": "BidPlaced",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "5807:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256,uint256)"
														}
													},
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5807:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 860,
												"nodeType": "EmitStatement",
												"src": "5802:79:2"
											}
										]
									},
									"functionSelector": "57c90de5",
									"id": 862,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 800,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 799,
												"name": "nonReentrant",
												"nameLocations": [
													"5167:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "5167:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "5167:12:2"
										}
									],
									"name": "placeBid",
									"nameLocation": "5101:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "_assetId",
												"nameLocation": "5118:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "5110:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "_shareAmount",
												"nameLocation": "5136:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "5128:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5128:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:40:2"
									},
									"returnParameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5180:0:2"
									},
									"scope": 1594,
									"src": "5092:796:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 990,
										"nodeType": "Block",
										"src": "6147:712:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 880,
																	"name": "_assetId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 864,
																	"src": "6165:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6176:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6165:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 883,
																	"name": "_assetId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 864,
																	"src": "6181:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 884,
																	"name": "assetCount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "6193:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6181:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6165:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206173736574204944",
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6205:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2f302c4a317eeeaa66ff142a8019be7f7a17e4f751a3204fdf93094743ebab94",
																"typeString": "literal_string \"Invalid asset ID\""
															},
															"value": "Invalid asset ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2f302c4a317eeeaa66ff142a8019be7f7a17e4f751a3204fdf93094743ebab94",
																"typeString": "literal_string \"Invalid asset ID\""
															}
														],
														"id": 879,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6157:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6157:67:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 889,
												"nodeType": "ExpressionStatement",
												"src": "6157:67:2"
											},
											{
												"assignments": [
													894
												],
												"declarations": [
													{
														"constant": false,
														"id": 894,
														"mutability": "mutable",
														"name": "bids",
														"nameLocation": "6257:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 990,
														"src": "6243:18:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
															"typeString": "struct LuxuryAssetOffering.Bid[]"
														},
														"typeName": {
															"baseType": {
																"id": 892,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 891,
																	"name": "Bid",
																	"nameLocations": [
																		"6243:3:2"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 424,
																	"src": "6243:3:2"
																},
																"referencedDeclaration": 424,
																"src": "6243:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																	"typeString": "struct LuxuryAssetOffering.Bid"
																}
															},
															"id": 893,
															"nodeType": "ArrayTypeName",
															"src": "6243:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Bid[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 898,
												"initialValue": {
													"baseExpression": {
														"id": 895,
														"name": "assetBids",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "6264:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$424_storage_$dyn_storage_$",
															"typeString": "mapping(uint256 => struct LuxuryAssetOffering.Bid storage ref[] storage ref)"
														}
													},
													"id": 897,
													"indexExpression": {
														"id": 896,
														"name": "_assetId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 864,
														"src": "6274:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6264:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage",
														"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6243:40:2"
											},
											{
												"assignments": [
													900
												],
												"declarations": [
													{
														"constant": false,
														"id": 900,
														"mutability": "mutable",
														"name": "bidCount",
														"nameLocation": "6301:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 990,
														"src": "6293:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 899,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6293:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 903,
												"initialValue": {
													"expression": {
														"id": 901,
														"name": "bids",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 894,
														"src": "6312:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
															"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6317:6:2",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "6312:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6293:30:2"
											},
											{
												"expression": {
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 904,
														"name": "bidders",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "6342:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 908,
																"name": "bidCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 900,
																"src": "6366:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 907,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "6352:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (address[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 905,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6356:7:2",
																	"stateMutability": "nonpayable",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 906,
																"nodeType": "ArrayTypeName",
																"src": "6356:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																	"typeString": "address[]"
																}
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6352:23:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"src": "6342:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"id": 911,
												"nodeType": "ExpressionStatement",
												"src": "6342:33:2"
											},
											{
												"expression": {
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 912,
														"name": "shareAmounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 871,
														"src": "6385:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 916,
																"name": "bidCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 900,
																"src": "6414:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "6400:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 913,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6404:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 914,
																"nodeType": "ArrayTypeName",
																"src": "6404:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 917,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6400:23:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "6385:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "6385:38:2"
											},
											{
												"expression": {
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 920,
														"name": "pricesPerShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "6433:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 924,
																"name": "bidCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 900,
																"src": "6464:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "6450:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint256[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 921,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6454:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 922,
																"nodeType": "ArrayTypeName",
																"src": "6454:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																	"typeString": "uint256[]"
																}
															}
														},
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6450:23:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[] memory"
														}
													},
													"src": "6433:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "6433:40:2"
											},
											{
												"expression": {
													"id": 934,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 928,
														"name": "allocated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "6483:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
															"typeString": "bool[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 932,
																"name": "bidCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 900,
																"src": "6506:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 931,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "6495:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bool_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (bool[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 929,
																	"name": "bool",
																	"nodeType": "ElementaryTypeName",
																	"src": "6499:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 930,
																"nodeType": "ArrayTypeName",
																"src": "6499:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
																	"typeString": "bool[]"
																}
															}
														},
														"id": 933,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6495:20:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
															"typeString": "bool[] memory"
														}
													},
													"src": "6483:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
														"typeString": "bool[] memory"
													}
												},
												"id": 935,
												"nodeType": "ExpressionStatement",
												"src": "6483:32:2"
											},
											{
												"body": {
													"id": 982,
													"nodeType": "Block",
													"src": "6573:204:2",
													"statements": [
														{
															"expression": {
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 946,
																		"name": "bidders",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 868,
																		"src": "6587:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	},
																	"id": 948,
																	"indexExpression": {
																		"id": 947,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "6595:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6587:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 949,
																			"name": "bids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 894,
																			"src": "6600:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																				"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
																			}
																		},
																		"id": 951,
																		"indexExpression": {
																			"id": 950,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 937,
																			"src": "6605:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6600:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bid_$424_storage",
																			"typeString": "struct LuxuryAssetOffering.Bid storage ref"
																		}
																	},
																	"id": 952,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6608:6:2",
																	"memberName": "bidder",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 417,
																	"src": "6600:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "6587:27:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 954,
															"nodeType": "ExpressionStatement",
															"src": "6587:27:2"
														},
														{
															"expression": {
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 955,
																		"name": "shareAmounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "6628:12:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 957,
																	"indexExpression": {
																		"id": 956,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "6641:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6628:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 958,
																			"name": "bids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 894,
																			"src": "6646:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																				"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
																			}
																		},
																		"id": 960,
																		"indexExpression": {
																			"id": 959,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 937,
																			"src": "6651:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6646:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bid_$424_storage",
																			"typeString": "struct LuxuryAssetOffering.Bid storage ref"
																		}
																	},
																	"id": 961,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6654:11:2",
																	"memberName": "shareAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 419,
																	"src": "6646:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6628:37:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 963,
															"nodeType": "ExpressionStatement",
															"src": "6628:37:2"
														},
														{
															"expression": {
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 964,
																		"name": "pricesPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 874,
																		"src": "6679:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 966,
																	"indexExpression": {
																		"id": 965,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "6694:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6679:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 967,
																			"name": "bids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 894,
																			"src": "6699:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																				"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
																			}
																		},
																		"id": 969,
																		"indexExpression": {
																			"id": 968,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 937,
																			"src": "6704:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6699:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bid_$424_storage",
																			"typeString": "struct LuxuryAssetOffering.Bid storage ref"
																		}
																	},
																	"id": 970,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6707:13:2",
																	"memberName": "pricePerShare",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 421,
																	"src": "6699:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6679:41:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 972,
															"nodeType": "ExpressionStatement",
															"src": "6679:41:2"
														},
														{
															"expression": {
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 973,
																		"name": "allocated",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "6734:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
																			"typeString": "bool[] memory"
																		}
																	},
																	"id": 975,
																	"indexExpression": {
																		"id": 974,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 937,
																		"src": "6744:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6734:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 976,
																			"name": "bids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 894,
																			"src": "6749:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																				"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
																			}
																		},
																		"id": 978,
																		"indexExpression": {
																			"id": 977,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 937,
																			"src": "6754:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6749:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bid_$424_storage",
																			"typeString": "struct LuxuryAssetOffering.Bid storage ref"
																		}
																	},
																	"id": 979,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6757:9:2",
																	"memberName": "allocated",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 423,
																	"src": "6749:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6734:32:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 981,
															"nodeType": "ExpressionStatement",
															"src": "6734:32:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 942,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 940,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 937,
														"src": "6554:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 941,
														"name": "bidCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "6558:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6554:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 983,
												"initializationExpression": {
													"assignments": [
														937
													],
													"declarations": [
														{
															"constant": false,
															"id": 937,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6547:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 983,
															"src": "6539:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 936,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6539:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 939,
													"initialValue": {
														"hexValue": "30",
														"id": 938,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6551:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6539:13:2"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6568:3:2",
														"subExpression": {
															"id": 943,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "6568:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 945,
													"nodeType": "ExpressionStatement",
													"src": "6568:3:2"
												},
												"nodeType": "ForStatement",
												"src": "6534:243:2"
											},
											{
												"expression": {
													"components": [
														{
															"id": 984,
															"name": "bidders",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "6803:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 985,
															"name": "shareAmounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "6812:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 986,
															"name": "pricesPerShare",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 874,
															"src": "6826:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 987,
															"name": "allocated",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 877,
															"src": "6842:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
																"typeString": "bool[] memory"
															}
														}
													],
													"id": 988,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6802:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$",
														"typeString": "tuple(address[] memory,uint256[] memory,uint256[] memory,bool[] memory)"
													}
												},
												"functionReturnParameters": 878,
												"id": 989,
												"nodeType": "Return",
												"src": "6795:57:2"
											}
										]
									},
									"functionSelector": "0392cc45",
									"id": 991,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAssetBids",
									"nameLocation": "5940:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "_assetId",
												"nameLocation": "5961:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "5953:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5953:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5952:18:2"
									},
									"returnParameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "bidders",
												"nameLocation": "6020:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "6003:24:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 866,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "6003:7:2",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 867,
													"nodeType": "ArrayTypeName",
													"src": "6003:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "shareAmounts",
												"nameLocation": "6054:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "6037:29:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 869,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6037:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 870,
													"nodeType": "ArrayTypeName",
													"src": "6037:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "pricesPerShare",
												"nameLocation": "6093:14:2",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "6076:31:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 872,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "6076:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 873,
													"nodeType": "ArrayTypeName",
													"src": "6076:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "allocated",
												"nameLocation": "6131:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "6117:23:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bool_$dyn_memory_ptr",
													"typeString": "bool[]"
												},
												"typeName": {
													"baseType": {
														"id": 875,
														"name": "bool",
														"nodeType": "ElementaryTypeName",
														"src": "6117:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 876,
													"nodeType": "ArrayTypeName",
													"src": "6117:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
														"typeString": "bool[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5993:153:2"
									},
									"scope": 1594,
									"src": "5931:928:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1047,
										"nodeType": "Block",
										"src": "6954:486:2",
										"statements": [
											{
												"assignments": [
													1000
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "asset",
														"nameLocation": "6978:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1047,
														"src": "6964:19:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
															"typeString": "struct LuxuryAssetOffering.Asset"
														},
														"typeName": {
															"id": 999,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 998,
																"name": "Asset",
																"nameLocations": [
																	"6964:5:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 415,
																"src": "6964:5:2"
															},
															"referencedDeclaration": 415,
															"src": "6964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Asset"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1004,
												"initialValue": {
													"baseExpression": {
														"id": 1001,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "6986:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Asset_$415_storage_$",
															"typeString": "mapping(uint256 => struct LuxuryAssetOffering.Asset storage ref)"
														}
													},
													"id": 1003,
													"indexExpression": {
														"id": 1002,
														"name": "_assetId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "6993:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6986:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Asset_$415_storage",
														"typeString": "struct LuxuryAssetOffering.Asset storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6964:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1006,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7020:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7024:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7020:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1008,
																	"name": "asset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "7034:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																		"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																	}
																},
																"id": 1009,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7040:13:2",
																"memberName": "originalOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 394,
																"src": "7034:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7020:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e617574686f72697a6564",
															"id": 1011,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7055:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
																"typeString": "literal_string \"Unauthorized\""
															},
															"value": "Unauthorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
																"typeString": "literal_string \"Unauthorized\""
															}
														],
														"id": 1005,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7012:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7012:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1013,
												"nodeType": "ExpressionStatement",
												"src": "7012:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7088:20:2",
															"subExpression": {
																"expression": {
																	"id": 1015,
																	"name": "asset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "7089:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																		"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																	}
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7095:13:2",
																"memberName": "biddingClosed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 404,
																"src": "7089:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42696464696e6720616c726561647920636c6f736564",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7110:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9e942198a9acdea3654333ae329526f4a71c67a256810bd427f0a4d17a278f95",
																"typeString": "literal_string \"Bidding already closed\""
															},
															"value": "Bidding already closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9e942198a9acdea3654333ae329526f4a71c67a256810bd427f0a4d17a278f95",
																"typeString": "literal_string \"Bidding already closed\""
															}
														],
														"id": 1014,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7080:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7080:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "7080:55:2"
											},
											{
												"expression": {
													"id": 1025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1021,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1000,
															"src": "7188:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
															}
														},
														"id": 1023,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7194:13:2",
														"memberName": "biddingClosed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 404,
														"src": "7188:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7210:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7188:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1026,
												"nodeType": "ExpressionStatement",
												"src": "7188:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1027,
																"name": "assetBids",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "7273:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$424_storage_$dyn_storage_$",
																	"typeString": "mapping(uint256 => struct LuxuryAssetOffering.Bid storage ref[] storage ref)"
																}
															},
															"id": 1029,
															"indexExpression": {
																"id": 1028,
																"name": "_assetId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "7283:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7273:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage",
																"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage ref"
															}
														},
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7293:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7273:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7302:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7273:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1045,
													"nodeType": "Block",
													"src": "7358:76:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1039,
																		"name": "_assetId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "7390:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 1040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7400:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"expression": {
																			"id": 1041,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "7407:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7413:9:2",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "7407:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1038,
																	"name": "BiddingEnded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "7377:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bool_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,bool,uint256)"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7377:46:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1044,
															"nodeType": "EmitStatement",
															"src": "7372:51:2"
														}
													]
												},
												"id": 1046,
												"nodeType": "IfStatement",
												"src": "7270:164:2",
												"trueBody": {
													"id": 1037,
													"nodeType": "Block",
													"src": "7305:47:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1034,
																		"name": "_assetId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "7332:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1033,
																	"name": "_processBids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1451,
																	"src": "7319:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7319:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1036,
															"nodeType": "ExpressionStatement",
															"src": "7319:22:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "093755ad",
									"id": 1048,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 996,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 995,
												"name": "nonReentrant",
												"nameLocations": [
													"6941:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "6941:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "6941:12:2"
										}
									],
									"name": "endBidding",
									"nameLocation": "6903:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "_assetId",
												"nameLocation": "6922:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1048,
												"src": "6914:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6914:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6913:18:2"
									},
									"returnParameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6954:0:2"
									},
									"scope": 1594,
									"src": "6894:546:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "7548:570:2",
										"statements": [
											{
												"assignments": [
													1057
												],
												"declarations": [
													{
														"constant": false,
														"id": 1057,
														"mutability": "mutable",
														"name": "asset",
														"nameLocation": "7572:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1113,
														"src": "7558:19:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
															"typeString": "struct LuxuryAssetOffering.Asset"
														},
														"typeName": {
															"id": 1056,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1055,
																"name": "Asset",
																"nameLocations": [
																	"7558:5:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 415,
																"src": "7558:5:2"
															},
															"referencedDeclaration": 415,
															"src": "7558:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Asset"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1061,
												"initialValue": {
													"baseExpression": {
														"id": 1058,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "7580:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Asset_$415_storage_$",
															"typeString": "mapping(uint256 => struct LuxuryAssetOffering.Asset storage ref)"
														}
													},
													"id": 1060,
													"indexExpression": {
														"id": 1059,
														"name": "_assetId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "7587:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7580:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Asset_$415_storage",
														"typeString": "struct LuxuryAssetOffering.Asset storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7558:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1063,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7614:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7618:6:2",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7614:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1065,
																	"name": "asset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "7628:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																		"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7634:13:2",
																"memberName": "originalOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 394,
																"src": "7628:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7614:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e617574686f72697a6564",
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7649:14:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
																"typeString": "literal_string \"Unauthorized\""
															},
															"value": "Unauthorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1b2638459828301e8cd6c7c02856073bacf975379e0867f689bb14feacb780c5",
																"typeString": "literal_string \"Unauthorized\""
															}
														],
														"id": 1062,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7606:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7606:58:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1070,
												"nodeType": "ExpressionStatement",
												"src": "7606:58:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7682:20:2",
															"subExpression": {
																"expression": {
																	"id": 1072,
																	"name": "asset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "7683:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																		"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																	}
																},
																"id": 1073,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7689:13:2",
																"memberName": "biddingClosed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 404,
																"src": "7683:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42696464696e6720616c726561647920636c6f736564",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7704:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9e942198a9acdea3654333ae329526f4a71c67a256810bd427f0a4d17a278f95",
																"typeString": "literal_string \"Bidding already closed\""
															},
															"value": "Bidding already closed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9e942198a9acdea3654333ae329526f4a71c67a256810bd427f0a4d17a278f95",
																"typeString": "literal_string \"Bidding already closed\""
															}
														],
														"id": 1071,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7674:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7674:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1077,
												"nodeType": "ExpressionStatement",
												"src": "7674:55:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1079,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "7747:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7753:9:2",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "7747:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1081,
																	"name": "asset",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1057,
																	"src": "7766:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																		"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																	}
																},
																"id": 1082,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7772:14:2",
																"memberName": "biddingEndTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 406,
																"src": "7766:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7747:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42696464696e6720706572696f64206f6e676f696e67",
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7788:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cec8607ff74902d73895ca204adfd06f34d0ecf19ec1c9aa31f2c5b658f0327c",
																"typeString": "literal_string \"Bidding period ongoing\""
															},
															"value": "Bidding period ongoing"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cec8607ff74902d73895ca204adfd06f34d0ecf19ec1c9aa31f2c5b658f0327c",
																"typeString": "literal_string \"Bidding period ongoing\""
															}
														],
														"id": 1078,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7739:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7739:74:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1086,
												"nodeType": "ExpressionStatement",
												"src": "7739:74:2"
											},
											{
												"expression": {
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1087,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1057,
															"src": "7866:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
															}
														},
														"id": 1089,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7872:13:2",
														"memberName": "biddingClosed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 404,
														"src": "7866:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1090,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7888:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "7866:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1092,
												"nodeType": "ExpressionStatement",
												"src": "7866:26:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 1093,
																"name": "assetBids",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 435,
																"src": "7951:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$424_storage_$dyn_storage_$",
																	"typeString": "mapping(uint256 => struct LuxuryAssetOffering.Bid storage ref[] storage ref)"
																}
															},
															"id": 1095,
															"indexExpression": {
																"id": 1094,
																"name": "_assetId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "7961:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7951:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage",
																"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage ref"
															}
														},
														"id": 1096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7971:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7951:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1097,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7980:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7951:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1111,
													"nodeType": "Block",
													"src": "8036:76:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1105,
																		"name": "_assetId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1050,
																		"src": "8068:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 1106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8078:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"expression": {
																			"id": 1107,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "8085:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8091:9:2",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "8085:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1104,
																	"name": "BiddingEnded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 483,
																	"src": "8055:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bool_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,bool,uint256)"
																	}
																},
																"id": 1109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8055:46:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1110,
															"nodeType": "EmitStatement",
															"src": "8050:51:2"
														}
													]
												},
												"id": 1112,
												"nodeType": "IfStatement",
												"src": "7948:164:2",
												"trueBody": {
													"id": 1103,
													"nodeType": "Block",
													"src": "7983:47:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1100,
																		"name": "_assetId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1050,
																		"src": "8010:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1099,
																	"name": "_processBids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1451,
																	"src": "7997:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7997:22:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1102,
															"nodeType": "ExpressionStatement",
															"src": "7997:22:2"
														}
													]
												}
											}
										]
									},
									"functionSelector": "b468e0b0",
									"id": 1114,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1053,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1052,
												"name": "nonReentrant",
												"nameLocations": [
													"7535:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 29,
												"src": "7535:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "7535:12:2"
										}
									],
									"name": "executeBidding",
									"nameLocation": "7493:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1050,
												"mutability": "mutable",
												"name": "_assetId",
												"nameLocation": "7516:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "7508:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1049,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7508:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7507:18:2"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7548:0:2"
									},
									"scope": 1594,
									"src": "7484:634:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1450,
										"nodeType": "Block",
										"src": "8218:3951:2",
										"statements": [
											{
												"assignments": [
													1121
												],
												"declarations": [
													{
														"constant": false,
														"id": 1121,
														"mutability": "mutable",
														"name": "asset",
														"nameLocation": "8242:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1450,
														"src": "8228:19:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
															"typeString": "struct LuxuryAssetOffering.Asset"
														},
														"typeName": {
															"id": 1120,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1119,
																"name": "Asset",
																"nameLocations": [
																	"8228:5:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 415,
																"src": "8228:5:2"
															},
															"referencedDeclaration": 415,
															"src": "8228:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Asset"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1125,
												"initialValue": {
													"baseExpression": {
														"id": 1122,
														"name": "assets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "8250:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Asset_$415_storage_$",
															"typeString": "mapping(uint256 => struct LuxuryAssetOffering.Asset storage ref)"
														}
													},
													"id": 1124,
													"indexExpression": {
														"id": 1123,
														"name": "_assetId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "8257:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8250:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Asset_$415_storage",
														"typeString": "struct LuxuryAssetOffering.Asset storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8228:38:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1127,
															"name": "_assetId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "8345:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1126,
														"name": "_sortBids",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1526,
														"src": "8335:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8335:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1129,
												"nodeType": "ExpressionStatement",
												"src": "8335:19:2"
											},
											{
												"assignments": [
													1134
												],
												"declarations": [
													{
														"constant": false,
														"id": 1134,
														"mutability": "mutable",
														"name": "bids",
														"nameLocation": "8387:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 1450,
														"src": "8373:18:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
															"typeString": "struct LuxuryAssetOffering.Bid[]"
														},
														"typeName": {
															"baseType": {
																"id": 1132,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1131,
																	"name": "Bid",
																	"nameLocations": [
																		"8373:3:2"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 424,
																	"src": "8373:3:2"
																},
																"referencedDeclaration": 424,
																"src": "8373:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																	"typeString": "struct LuxuryAssetOffering.Bid"
																}
															},
															"id": 1133,
															"nodeType": "ArrayTypeName",
															"src": "8373:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Bid[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1138,
												"initialValue": {
													"baseExpression": {
														"id": 1135,
														"name": "assetBids",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "8394:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$424_storage_$dyn_storage_$",
															"typeString": "mapping(uint256 => struct LuxuryAssetOffering.Bid storage ref[] storage ref)"
														}
													},
													"id": 1137,
													"indexExpression": {
														"id": 1136,
														"name": "_assetId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "8404:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8394:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage",
														"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8373:40:2"
											},
											{
												"assignments": [
													1140
												],
												"declarations": [
													{
														"constant": false,
														"id": 1140,
														"mutability": "mutable",
														"name": "totalBidValue",
														"nameLocation": "8529:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 1450,
														"src": "8521:21:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1139,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8521:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1142,
												"initialValue": {
													"hexValue": "30",
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8545:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8521:25:2"
											},
											{
												"assignments": [
													1144
												],
												"declarations": [
													{
														"constant": false,
														"id": 1144,
														"mutability": "mutable",
														"name": "sharesToAllocate",
														"nameLocation": "8564:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 1450,
														"src": "8556:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1143,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8556:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1147,
												"initialValue": {
													"expression": {
														"id": 1145,
														"name": "asset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "8583:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
															"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8589:15:2",
													"memberName": "sharesRemaining",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 400,
													"src": "8583:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8556:48:2"
											},
											{
												"body": {
													"id": 1204,
													"nodeType": "Block",
													"src": "8688:431:2",
													"statements": [
														{
															"assignments": [
																1165
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1165,
																	"mutability": "mutable",
																	"name": "bid",
																	"nameLocation": "8714:3:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1204,
																	"src": "8702:15:2",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																		"typeString": "struct LuxuryAssetOffering.Bid"
																	},
																	"typeName": {
																		"id": 1164,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 1163,
																			"name": "Bid",
																			"nameLocations": [
																				"8702:3:2"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 424,
																			"src": "8702:3:2"
																		},
																		"referencedDeclaration": 424,
																		"src": "8702:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																			"typeString": "struct LuxuryAssetOffering.Bid"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1169,
															"initialValue": {
																"baseExpression": {
																	"id": 1166,
																	"name": "bids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "8720:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																		"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
																	}
																},
																"id": 1168,
																"indexExpression": {
																	"id": 1167,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1149,
																	"src": "8725:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8720:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bid_$424_storage",
																	"typeString": "struct LuxuryAssetOffering.Bid storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8702:25:2"
														},
														{
															"condition": {
																"expression": {
																	"id": 1170,
																	"name": "bid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "8744:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																		"typeString": "struct LuxuryAssetOffering.Bid storage pointer"
																	}
																},
																"id": 1171,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8748:9:2",
																"memberName": "allocated",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 423,
																"src": "8744:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1173,
															"nodeType": "IfStatement",
															"src": "8741:26:2",
															"trueBody": {
																"id": 1172,
																"nodeType": "Continue",
																"src": "8759:8:2"
															}
														},
														{
															"assignments": [
																1175
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1175,
																	"mutability": "mutable",
																	"name": "allocatableShares",
																	"nameLocation": "8802:17:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1204,
																	"src": "8794:25:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1174,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "8794:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1185,
															"initialValue": {
																"condition": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1176,
																					"name": "bid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1165,
																					"src": "8823:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																						"typeString": "struct LuxuryAssetOffering.Bid storage pointer"
																					}
																				},
																				"id": 1177,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8827:11:2",
																				"memberName": "shareAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 419,
																				"src": "8823:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"id": 1178,
																				"name": "sharesToAllocate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1144,
																				"src": "8842:16:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8823:35:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1180,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8822:37:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"id": 1183,
																	"name": "sharesToAllocate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "8914:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1184,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "8822:108:2",
																"trueExpression": {
																	"expression": {
																		"id": 1181,
																		"name": "bid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1165,
																		"src": "8879:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																			"typeString": "struct LuxuryAssetOffering.Bid storage pointer"
																		}
																	},
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8883:11:2",
																	"memberName": "shareAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 419,
																	"src": "8879:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "8794:136:2"
														},
														{
															"expression": {
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1186,
																	"name": "totalBidValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1140,
																	"src": "8961:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1191,
																						"name": "bid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1165,
																						"src": "9017:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																							"typeString": "struct LuxuryAssetOffering.Bid storage pointer"
																						}
																					},
																					"id": 1192,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "9021:13:2",
																					"memberName": "pricePerShare",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 421,
																					"src": "9017:17:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1189,
																					"name": "allocatableShares",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1175,
																					"src": "8995:17:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1190,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9013:3:2",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 270,
																				"src": "8995:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8995:40:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1187,
																			"name": "totalBidValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1140,
																			"src": "8977:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1188,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8991:3:2",
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 240,
																		"src": "8977:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8977:59:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8961:75:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1196,
															"nodeType": "ExpressionStatement",
															"src": "8961:75:2"
														},
														{
															"expression": {
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1197,
																	"name": "sharesToAllocate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1144,
																	"src": "9050:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1200,
																			"name": "allocatableShares",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1175,
																			"src": "9090:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1198,
																			"name": "sharesToAllocate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1144,
																			"src": "9069:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9086:3:2",
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 255,
																		"src": "9069:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9069:39:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9050:58:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1203,
															"nodeType": "ExpressionStatement",
															"src": "9050:58:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1152,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "8642:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"expression": {
																"id": 1153,
																"name": "bids",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "8646:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																	"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
																}
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8651:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8646:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "8642:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1156,
															"name": "sharesToAllocate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1144,
															"src": "8661:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1157,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8680:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8661:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8642:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1205,
												"initializationExpression": {
													"assignments": [
														1149
													],
													"declarations": [
														{
															"constant": false,
															"id": 1149,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "8635:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1205,
															"src": "8627:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1148,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "8627:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1151,
													"initialValue": {
														"hexValue": "30",
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8639:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "8627:13:2"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "8683:3:2",
														"subExpression": {
															"id": 1160,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "8683:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1162,
													"nodeType": "ExpressionStatement",
													"src": "8683:3:2"
												},
												"nodeType": "ForStatement",
												"src": "8623:496:2"
											},
											{
												"assignments": [
													1207
												],
												"declarations": [
													{
														"constant": false,
														"id": 1207,
														"mutability": "mutable",
														"name": "successful",
														"nameLocation": "9208:10:2",
														"nodeType": "VariableDeclaration",
														"scope": 1450,
														"src": "9203:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1206,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9203:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1212,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1208,
														"name": "totalBidValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "9221:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 1209,
															"name": "asset",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "9238:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
															}
														},
														"id": 1210,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9244:17:2",
														"memberName": "minimumTotalPrice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 402,
														"src": "9238:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9221:40:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9203:58:2"
											},
											{
												"condition": {
													"id": 1213,
													"name": "successful",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1207,
													"src": "9284:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1441,
													"nodeType": "Block",
													"src": "11992:96:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1438,
																		"name": "_assetId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1116,
																		"src": "12068:8:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1437,
																	"name": "_refundAllBids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1593,
																	"src": "12053:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12053:24:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1440,
															"nodeType": "ExpressionStatement",
															"src": "12053:24:2"
														}
													]
												},
												"id": 1442,
												"nodeType": "IfStatement",
												"src": "9280:2808:2",
												"trueBody": {
													"id": 1436,
													"nodeType": "Block",
													"src": "9296:2690:2",
													"statements": [
														{
															"expression": {
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1214,
																		"name": "asset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "9380:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																			"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																		}
																	},
																	"id": 1216,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "9386:15:2",
																	"memberName": "sharesRemaining",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 400,
																	"src": "9380:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1217,
																		"name": "asset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "9404:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																			"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																		}
																	},
																	"id": 1218,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9410:11:2",
																	"memberName": "totalShares",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 398,
																	"src": "9404:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9380:41:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1220,
															"nodeType": "ExpressionStatement",
															"src": "9380:41:2"
														},
														{
															"body": {
																"id": 1249,
																"nodeType": "Block",
																"src": "9560:134:2",
																"statements": [
																	{
																		"assignments": [
																			1234
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1234,
																				"mutability": "mutable",
																				"name": "ownerAddress",
																				"nameLocation": "9586:12:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1249,
																				"src": "9578:20:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				"typeName": {
																					"id": 1233,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "9578:7:2",
																					"stateMutability": "nonpayable",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1239,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 1235,
																					"name": "asset",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1121,
																					"src": "9601:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																						"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																					}
																				},
																				"id": 1236,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9607:14:2",
																				"memberName": "ownerAddresses",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 409,
																				"src": "9601:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 1238,
																			"indexExpression": {
																				"id": 1237,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1222,
																				"src": "9622:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9601:23:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "9578:46:2"
																	},
																	{
																		"expression": {
																			"id": 1247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"expression": {
																							"id": 1240,
																							"name": "asset",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1121,
																							"src": "9642:5:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																								"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																							}
																						},
																						"id": 1243,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "9648:6:2",
																						"memberName": "owners",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 414,
																						"src": "9642:12:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetOwner_$392_storage_$",
																							"typeString": "mapping(address => struct LuxuryAssetOffering.AssetOwner storage ref)"
																						}
																					},
																					"id": 1244,
																					"indexExpression": {
																						"id": 1242,
																						"name": "ownerAddress",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1234,
																						"src": "9655:12:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "9642:26:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AssetOwner_$392_storage",
																						"typeString": "struct LuxuryAssetOffering.AssetOwner storage ref"
																					}
																				},
																				"id": 1245,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "9669:6:2",
																				"memberName": "shares",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 389,
																				"src": "9642:33:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 1246,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9678:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "9642:37:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1248,
																		"nodeType": "ExpressionStatement",
																		"src": "9642:37:2"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1225,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1222,
																	"src": "9522:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"id": 1226,
																			"name": "asset",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1121,
																			"src": "9526:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																				"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																			}
																		},
																		"id": 1227,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9532:14:2",
																		"memberName": "ownerAddresses",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 409,
																		"src": "9526:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9547:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "9526:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9522:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1250,
															"initializationExpression": {
																"assignments": [
																	1222
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1222,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "9515:1:2",
																		"nodeType": "VariableDeclaration",
																		"scope": 1250,
																		"src": "9507:9:2",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1221,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9507:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1224,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9519:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "9507:13:2"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "9555:3:2",
																	"subExpression": {
																		"id": 1230,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1222,
																		"src": "9555:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1232,
																"nodeType": "ExpressionStatement",
																"src": "9555:3:2"
															},
															"nodeType": "ForStatement",
															"src": "9502:192:2"
														},
														{
															"expression": {
																"id": 1253,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "9752:27:2",
																"subExpression": {
																	"expression": {
																		"id": 1251,
																		"name": "asset",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "9759:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																			"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																		}
																	},
																	"id": 1252,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "9765:14:2",
																	"memberName": "ownerAddresses",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 409,
																	"src": "9759:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1254,
															"nodeType": "ExpressionStatement",
															"src": "9752:27:2"
														},
														{
															"body": {
																"id": 1434,
																"nodeType": "Block",
																"src": "9892:2084:2",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1266,
																					"name": "asset",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1121,
																					"src": "9913:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																						"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																					}
																				},
																				"id": 1267,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9919:15:2",
																				"memberName": "sharesRemaining",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 400,
																				"src": "9913:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1268,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9938:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "9913:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1271,
																		"nodeType": "IfStatement",
																		"src": "9910:36:2",
																		"trueBody": {
																			"id": 1270,
																			"nodeType": "Break",
																			"src": "9941:5:2"
																		}
																	},
																	{
																		"assignments": [
																			1274
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1274,
																				"mutability": "mutable",
																				"name": "bid",
																				"nameLocation": "9993:3:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1434,
																				"src": "9981:15:2",
																				"stateVariable": false,
																				"storageLocation": "storage",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																					"typeString": "struct LuxuryAssetOffering.Bid"
																				},
																				"typeName": {
																					"id": 1273,
																					"nodeType": "UserDefinedTypeName",
																					"pathNode": {
																						"id": 1272,
																						"name": "Bid",
																						"nameLocations": [
																							"9981:3:2"
																						],
																						"nodeType": "IdentifierPath",
																						"referencedDeclaration": 424,
																						"src": "9981:3:2"
																					},
																					"referencedDeclaration": 424,
																					"src": "9981:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																						"typeString": "struct LuxuryAssetOffering.Bid"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1278,
																		"initialValue": {
																			"baseExpression": {
																				"id": 1275,
																				"name": "bids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1134,
																				"src": "9999:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																					"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
																				}
																			},
																			"id": 1277,
																			"indexExpression": {
																				"id": 1276,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1256,
																				"src": "10004:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "9999:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Bid_$424_storage",
																				"typeString": "struct LuxuryAssetOffering.Bid storage ref"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "9981:25:2"
																	},
																	{
																		"condition": {
																			"expression": {
																				"id": 1279,
																				"name": "bid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1274,
																				"src": "10027:3:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																					"typeString": "struct LuxuryAssetOffering.Bid storage pointer"
																				}
																			},
																			"id": 1280,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10031:9:2",
																			"memberName": "allocated",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 423,
																			"src": "10027:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1282,
																		"nodeType": "IfStatement",
																		"src": "10024:26:2",
																		"trueBody": {
																			"id": 1281,
																			"nodeType": "Continue",
																			"src": "10042:8:2"
																		}
																	},
																	{
																		"assignments": [
																			1284
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1284,
																				"mutability": "mutable",
																				"name": "allocatableShares",
																				"nameLocation": "10093:17:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1434,
																				"src": "10085:25:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1283,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10085:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1296,
																		"initialValue": {
																			"condition": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1289,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 1285,
																								"name": "bid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1274,
																								"src": "10114:3:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																									"typeString": "struct LuxuryAssetOffering.Bid storage pointer"
																								}
																							},
																							"id": 1286,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "10118:11:2",
																							"memberName": "shareAmount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 419,
																							"src": "10114:15:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<=",
																						"rightExpression": {
																							"expression": {
																								"id": 1287,
																								"name": "asset",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1121,
																								"src": "10133:5:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																									"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																								}
																							},
																							"id": 1288,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "10139:15:2",
																							"memberName": "sharesRemaining",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 400,
																							"src": "10133:21:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "10114:40:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					}
																				],
																				"id": 1290,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "10113:42:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"expression": {
																					"id": 1293,
																					"name": "asset",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1121,
																					"src": "10218:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																						"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																					}
																				},
																				"id": 1294,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10224:15:2",
																				"memberName": "sharesRemaining",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 400,
																				"src": "10218:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "10113:126:2",
																			"trueExpression": {
																				"expression": {
																					"id": 1291,
																					"name": "bid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1274,
																					"src": "10179:3:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																						"typeString": "struct LuxuryAssetOffering.Bid storage pointer"
																					}
																				},
																				"id": 1292,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10183:11:2",
																				"memberName": "shareAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 419,
																				"src": "10179:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10085:154:2"
																	},
																	{
																		"assignments": [
																			1298
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1298,
																				"mutability": "mutable",
																				"name": "requiredPayment",
																				"nameLocation": "10346:15:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1434,
																				"src": "10338:23:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1297,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10338:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1304,
																		"initialValue": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1301,
																						"name": "bid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1274,
																						"src": "10386:3:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																							"typeString": "struct LuxuryAssetOffering.Bid storage pointer"
																						}
																					},
																					"id": 1302,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "10390:13:2",
																					"memberName": "pricePerShare",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 421,
																					"src": "10386:17:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1299,
																					"name": "allocatableShares",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1284,
																					"src": "10364:17:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1300,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10382:3:2",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 270,
																				"src": "10364:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10364:40:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10338:66:2"
																	},
																	{
																		"assignments": [
																			1306
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1306,
																				"mutability": "mutable",
																				"name": "refundAmount",
																				"nameLocation": "10430:12:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1434,
																				"src": "10422:20:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1305,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "10422:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1316,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1314,
																					"name": "requiredPayment",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1298,
																					"src": "10488:15:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1310,
																								"name": "bid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1274,
																								"src": "10465:3:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																									"typeString": "struct LuxuryAssetOffering.Bid storage pointer"
																								}
																							},
																							"id": 1311,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "10469:13:2",
																							"memberName": "pricePerShare",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 421,
																							"src": "10465:17:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"expression": {
																								"id": 1307,
																								"name": "bid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1274,
																								"src": "10445:3:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																									"typeString": "struct LuxuryAssetOffering.Bid storage pointer"
																								}
																							},
																							"id": 1308,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "10449:11:2",
																							"memberName": "shareAmount",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 419,
																							"src": "10445:15:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1309,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "10461:3:2",
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 270,
																						"src": "10445:19:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1312,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "10445:38:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1313,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "10484:3:2",
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 255,
																				"src": "10445:42:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10445:59:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "10422:82:2"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1319,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1317,
																				"name": "allocatableShares",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1284,
																				"src": "10542:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1318,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10562:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "10542:21:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1413,
																		"nodeType": "IfStatement",
																		"src": "10539:1174:2",
																		"trueBody": {
																			"id": 1412,
																			"nodeType": "Block",
																			"src": "10565:1148:2",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 1326,
																								"name": "requiredPayment",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1298,
																								"src": "10683:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"id": 1322,
																											"name": "asset",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1121,
																											"src": "10653:5:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																												"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																											}
																										},
																										"id": 1323,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "10659:13:2",
																										"memberName": "originalOwner",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 394,
																										"src": "10653:19:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1321,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "10645:8:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_payable_$",
																										"typeString": "type(address payable)"
																									},
																									"typeName": {
																										"id": 1320,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "10645:8:2",
																										"stateMutability": "payable",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1324,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "10645:28:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								}
																							},
																							"id": 1325,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "10674:8:2",
																							"memberName": "transfer",
																							"nodeType": "MemberAccess",
																							"src": "10645:37:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																								"typeString": "function (uint256)"
																							}
																						},
																						"id": 1327,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "10645:54:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1328,
																					"nodeType": "ExpressionStatement",
																					"src": "10645:54:2"
																				},
																				{
																					"expression": {
																						"id": 1337,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"id": 1329,
																								"name": "asset",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1121,
																								"src": "10789:5:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																									"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																								}
																							},
																							"id": 1331,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberLocation": "10795:15:2",
																							"memberName": "sharesRemaining",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 400,
																							"src": "10789:21:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"arguments": [
																								{
																									"id": 1335,
																									"name": "allocatableShares",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1284,
																									"src": "10839:17:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"expression": {
																										"id": 1332,
																										"name": "asset",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1121,
																										"src": "10813:5:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																											"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																										}
																									},
																									"id": 1333,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "10819:15:2",
																									"memberName": "sharesRemaining",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 400,
																									"src": "10813:21:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1334,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "10835:3:2",
																								"memberName": "sub",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 255,
																								"src": "10813:25:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 1336,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "10813:44:2",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "10789:68:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1338,
																					"nodeType": "ExpressionStatement",
																					"src": "10789:68:2"
																				},
																				{
																					"expression": {
																						"id": 1343,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"expression": {
																								"id": 1339,
																								"name": "bid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1274,
																								"src": "10879:3:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																									"typeString": "struct LuxuryAssetOffering.Bid storage pointer"
																								}
																							},
																							"id": 1341,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"memberLocation": "10883:9:2",
																							"memberName": "allocated",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 423,
																							"src": "10879:13:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 1342,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "10895:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "10879:20:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 1344,
																					"nodeType": "ExpressionStatement",
																					"src": "10879:20:2"
																				},
																				{
																					"condition": {
																						"id": 1351,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "UnaryOperation",
																						"operator": "!",
																						"prefix": true,
																						"src": "10989:32:2",
																						"subExpression": {
																							"expression": {
																								"baseExpression": {
																									"expression": {
																										"id": 1345,
																										"name": "asset",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1121,
																										"src": "10990:5:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																											"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																										}
																									},
																									"id": 1346,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "10996:6:2",
																									"memberName": "owners",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 414,
																									"src": "10990:12:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetOwner_$392_storage_$",
																										"typeString": "mapping(address => struct LuxuryAssetOffering.AssetOwner storage ref)"
																									}
																								},
																								"id": 1349,
																								"indexExpression": {
																									"expression": {
																										"id": 1347,
																										"name": "bid",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1274,
																										"src": "11003:3:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																											"typeString": "struct LuxuryAssetOffering.Bid storage pointer"
																										}
																									},
																									"id": 1348,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "11007:6:2",
																									"memberName": "bidder",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 417,
																									"src": "11003:10:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "10990:24:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_AssetOwner_$392_storage",
																									"typeString": "struct LuxuryAssetOffering.AssetOwner storage ref"
																								}
																							},
																							"id": 1350,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "11015:6:2",
																							"memberName": "exists",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 391,
																							"src": "10990:31:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"falseBody": {
																						"id": 1394,
																						"nodeType": "Block",
																						"src": "11357:137:2",
																						"statements": [
																							{
																								"expression": {
																									"id": 1392,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"expression": {
																											"baseExpression": {
																												"expression": {
																													"id": 1376,
																													"name": "asset",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1121,
																													"src": "11383:5:2",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																														"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																													}
																												},
																												"id": 1380,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "11389:6:2",
																												"memberName": "owners",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 414,
																												"src": "11383:12:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetOwner_$392_storage_$",
																													"typeString": "mapping(address => struct LuxuryAssetOffering.AssetOwner storage ref)"
																												}
																											},
																											"id": 1381,
																											"indexExpression": {
																												"expression": {
																													"id": 1378,
																													"name": "bid",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1274,
																													"src": "11396:3:2",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																														"typeString": "struct LuxuryAssetOffering.Bid storage pointer"
																													}
																												},
																												"id": 1379,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "11400:6:2",
																												"memberName": "bidder",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 417,
																												"src": "11396:10:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "11383:24:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_AssetOwner_$392_storage",
																												"typeString": "struct LuxuryAssetOffering.AssetOwner storage ref"
																											}
																										},
																										"id": 1382,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"memberLocation": "11408:6:2",
																										"memberName": "shares",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 389,
																										"src": "11383:31:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"id": 1390,
																												"name": "allocatableShares",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1284,
																												"src": "11453:17:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											],
																											"expression": {
																												"expression": {
																													"baseExpression": {
																														"expression": {
																															"id": 1383,
																															"name": "asset",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 1121,
																															"src": "11417:5:2",
																															"typeDescriptions": {
																																"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																																"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																															}
																														},
																														"id": 1384,
																														"isConstant": false,
																														"isLValue": true,
																														"isPure": false,
																														"lValueRequested": false,
																														"memberLocation": "11423:6:2",
																														"memberName": "owners",
																														"nodeType": "MemberAccess",
																														"referencedDeclaration": 414,
																														"src": "11417:12:2",
																														"typeDescriptions": {
																															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetOwner_$392_storage_$",
																															"typeString": "mapping(address => struct LuxuryAssetOffering.AssetOwner storage ref)"
																														}
																													},
																													"id": 1387,
																													"indexExpression": {
																														"expression": {
																															"id": 1385,
																															"name": "bid",
																															"nodeType": "Identifier",
																															"overloadedDeclarations": [],
																															"referencedDeclaration": 1274,
																															"src": "11430:3:2",
																															"typeDescriptions": {
																																"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																																"typeString": "struct LuxuryAssetOffering.Bid storage pointer"
																															}
																														},
																														"id": 1386,
																														"isConstant": false,
																														"isLValue": true,
																														"isPure": false,
																														"lValueRequested": false,
																														"memberLocation": "11434:6:2",
																														"memberName": "bidder",
																														"nodeType": "MemberAccess",
																														"referencedDeclaration": 417,
																														"src": "11430:10:2",
																														"typeDescriptions": {
																															"typeIdentifier": "t_address",
																															"typeString": "address"
																														}
																													},
																													"isConstant": false,
																													"isLValue": true,
																													"isPure": false,
																													"lValueRequested": false,
																													"nodeType": "IndexAccess",
																													"src": "11417:24:2",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_AssetOwner_$392_storage",
																														"typeString": "struct LuxuryAssetOffering.AssetOwner storage ref"
																													}
																												},
																												"id": 1388,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "11442:6:2",
																												"memberName": "shares",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 389,
																												"src": "11417:31:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											"id": 1389,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "11449:3:2",
																											"memberName": "add",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 240,
																											"src": "11417:35:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																												"typeString": "function (uint256,uint256) pure returns (uint256)"
																											}
																										},
																										"id": 1391,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"nameLocations": [],
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "11417:54:2",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"src": "11383:88:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1393,
																								"nodeType": "ExpressionStatement",
																								"src": "11383:88:2"
																							}
																						]
																					},
																					"id": 1395,
																					"nodeType": "IfStatement",
																					"src": "10985:509:2",
																					"trueBody": {
																						"id": 1375,
																						"nodeType": "Block",
																						"src": "11023:328:2",
																						"statements": [
																							{
																								"expression": {
																									"arguments": [
																										{
																											"expression": {
																												"id": 1357,
																												"name": "bid",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1274,
																												"src": "11075:3:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																													"typeString": "struct LuxuryAssetOffering.Bid storage pointer"
																												}
																											},
																											"id": 1358,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "11079:6:2",
																											"memberName": "bidder",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 417,
																											"src": "11075:10:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"expression": {
																											"expression": {
																												"id": 1352,
																												"name": "asset",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1121,
																												"src": "11049:5:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																													"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																												}
																											},
																											"id": 1355,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "11055:14:2",
																											"memberName": "ownerAddresses",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 409,
																											"src": "11049:20:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_array$_t_address_$dyn_storage",
																												"typeString": "address[] storage ref"
																											}
																										},
																										"id": 1356,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "11070:4:2",
																										"memberName": "push",
																										"nodeType": "MemberAccess",
																										"src": "11049:25:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																											"typeString": "function (address[] storage pointer,address)"
																										}
																									},
																									"id": 1359,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"nameLocations": [],
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "11049:37:2",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_tuple$__$",
																										"typeString": "tuple()"
																									}
																								},
																								"id": 1360,
																								"nodeType": "ExpressionStatement",
																								"src": "11049:37:2"
																							},
																							{
																								"expression": {
																									"id": 1373,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftHandSide": {
																										"baseExpression": {
																											"expression": {
																												"id": 1361,
																												"name": "asset",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1121,
																												"src": "11112:5:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_Asset_$415_storage_ptr",
																													"typeString": "struct LuxuryAssetOffering.Asset storage pointer"
																												}
																											},
																											"id": 1365,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "11118:6:2",
																											"memberName": "owners",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 414,
																											"src": "11112:12:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_mapping$_t_address_$_t_struct$_AssetOwner_$392_storage_$",
																												"typeString": "mapping(address => struct LuxuryAssetOffering.AssetOwner storage ref)"
																											}
																										},
																										"id": 1366,
																										"indexExpression": {
																											"expression": {
																												"id": 1363,
																												"name": "bid",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1274,
																												"src": "11125:3:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																													"typeString": "struct LuxuryAssetOffering.Bid storage pointer"
																												}
																											},
																											"id": 1364,
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"memberLocation": "11129:6:2",
																											"memberName": "bidder",
																											"nodeType": "MemberAccess",
																											"referencedDeclaration": 417,
																											"src": "11125:10:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										},
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": true,
																										"nodeType": "IndexAccess",
																										"src": "11112:24:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_AssetOwner_$392_storage",
																											"typeString": "struct LuxuryAssetOffering.AssetOwner storage ref"
																										}
																									},
																									"nodeType": "Assignment",
																									"operator": "=",
																									"rightHandSide": {
																										"arguments": [
																											{
																												"expression": {
																													"id": 1368,
																													"name": "bid",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 1274,
																													"src": "11194:3:2",
																													"typeDescriptions": {
																														"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																														"typeString": "struct LuxuryAssetOffering.Bid storage pointer"
																													}
																												},
																												"id": 1369,
																												"isConstant": false,
																												"isLValue": true,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "11198:6:2",
																												"memberName": "bidder",
																												"nodeType": "MemberAccess",
																												"referencedDeclaration": 417,
																												"src": "11194:10:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											{
																												"id": 1370,
																												"name": "allocatableShares",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1284,
																												"src": "11242:17:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												}
																											},
																											{
																												"hexValue": "74727565",
																												"id": 1371,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"kind": "bool",
																												"lValueRequested": false,
																												"nodeType": "Literal",
																												"src": "11297:4:2",
																												"typeDescriptions": {
																													"typeIdentifier": "t_bool",
																													"typeString": "bool"
																												},
																												"value": "true"
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												},
																												{
																													"typeIdentifier": "t_uint256",
																													"typeString": "uint256"
																												},
																												{
																													"typeIdentifier": "t_bool",
																													"typeString": "bool"
																												}
																											],
																											"id": 1367,
																											"name": "AssetOwner",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 392,
																											"src": "11139:10:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_struct$_AssetOwner_$392_storage_ptr_$",
																												"typeString": "type(struct LuxuryAssetOffering.AssetOwner storage pointer)"
																											}
																										},
																										"id": 1372,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"kind": "structConstructorCall",
																										"lValueRequested": false,
																										"nameLocations": [
																											"11180:12:2",
																											"11234:6:2",
																											"11289:6:2"
																										],
																										"names": [
																											"ownerAddress",
																											"shares",
																											"exists"
																										],
																										"nodeType": "FunctionCall",
																										"src": "11139:189:2",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_AssetOwner_$392_memory_ptr",
																											"typeString": "struct LuxuryAssetOffering.AssetOwner memory"
																										}
																									},
																									"src": "11112:216:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_AssetOwner_$392_storage",
																										"typeString": "struct LuxuryAssetOffering.AssetOwner storage ref"
																									}
																								},
																								"id": 1374,
																								"nodeType": "ExpressionStatement",
																								"src": "11112:216:2"
																							}
																						]
																					}
																				},
																				{
																					"eventCall": {
																						"arguments": [
																							{
																								"id": 1397,
																								"name": "_assetId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1116,
																								"src": "11557:8:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"expression": {
																									"id": 1398,
																									"name": "bid",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1274,
																									"src": "11567:3:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																										"typeString": "struct LuxuryAssetOffering.Bid storage pointer"
																									}
																								},
																								"id": 1399,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "11571:6:2",
																								"memberName": "bidder",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 417,
																								"src": "11567:10:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1400,
																								"name": "allocatableShares",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1284,
																								"src": "11579:17:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"expression": {
																									"id": 1401,
																									"name": "bid",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1274,
																									"src": "11598:3:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																										"typeString": "struct LuxuryAssetOffering.Bid storage pointer"
																									}
																								},
																								"id": 1402,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "11602:13:2",
																								"memberName": "pricePerShare",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 421,
																								"src": "11598:17:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1396,
																							"name": "SharesAllocated",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 469,
																							"src": "11541:15:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (uint256,address,uint256,uint256)"
																							}
																						},
																						"id": 1403,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "11541:75:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1404,
																					"nodeType": "EmitStatement",
																					"src": "11536:80:2"
																				},
																				{
																					"eventCall": {
																						"arguments": [
																							{
																								"id": 1406,
																								"name": "_assetId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1116,
																								"src": "11654:8:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"expression": {
																									"id": 1407,
																									"name": "bid",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1274,
																									"src": "11664:3:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																										"typeString": "struct LuxuryAssetOffering.Bid storage pointer"
																									}
																								},
																								"id": 1408,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "11668:6:2",
																								"memberName": "bidder",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 417,
																								"src": "11664:10:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1409,
																								"name": "allocatableShares",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1284,
																								"src": "11676:17:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1405,
																							"name": "OwnerAdded",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 491,
																							"src": "11643:10:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
																								"typeString": "function (uint256,address,uint256)"
																							}
																						},
																						"id": 1410,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "11643:51:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1411,
																					"nodeType": "EmitStatement",
																					"src": "11638:56:2"
																				}
																			]
																		}
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1416,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1414,
																				"name": "refundAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1306,
																				"src": "11796:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1415,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11811:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "11796:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1433,
																		"nodeType": "IfStatement",
																		"src": "11793:169:2",
																		"trueBody": {
																			"id": 1432,
																			"nodeType": "Block",
																			"src": "11814:148:2",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"id": 1423,
																								"name": "refundAmount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1306,
																								"src": "11865:12:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"id": 1419,
																											"name": "bid",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1274,
																											"src": "11844:3:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																												"typeString": "struct LuxuryAssetOffering.Bid storage pointer"
																											}
																										},
																										"id": 1420,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "11848:6:2",
																										"memberName": "bidder",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 417,
																										"src": "11844:10:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1418,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "11836:8:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_payable_$",
																										"typeString": "type(address payable)"
																									},
																									"typeName": {
																										"id": 1417,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "11836:8:2",
																										"stateMutability": "payable",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1421,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "11836:19:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								}
																							},
																							"id": 1422,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "11856:8:2",
																							"memberName": "transfer",
																							"nodeType": "MemberAccess",
																							"src": "11836:28:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																								"typeString": "function (uint256)"
																							}
																						},
																						"id": 1424,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "11836:42:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1425,
																					"nodeType": "ExpressionStatement",
																					"src": "11836:42:2"
																				},
																				{
																					"eventCall": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 1427,
																									"name": "bid",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1274,
																									"src": "11918:3:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																										"typeString": "struct LuxuryAssetOffering.Bid storage pointer"
																									}
																								},
																								"id": 1428,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "11922:6:2",
																								"memberName": "bidder",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 417,
																								"src": "11918:10:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1429,
																								"name": "refundAmount",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1306,
																								"src": "11930:12:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 1426,
																							"name": "RefundIssued",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 475,
																							"src": "11905:12:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256)"
																							}
																						},
																						"id": 1430,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "11905:38:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 1431,
																					"nodeType": "EmitStatement",
																					"src": "11900:43:2"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1259,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "9870:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1260,
																		"name": "bids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1134,
																		"src": "9874:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																			"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
																		}
																	},
																	"id": 1261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9879:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "9874:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9870:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1435,
															"initializationExpression": {
																"assignments": [
																	1256
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1256,
																		"mutability": "mutable",
																		"name": "i",
																		"nameLocation": "9863:1:2",
																		"nodeType": "VariableDeclaration",
																		"scope": 1435,
																		"src": "9855:9:2",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1255,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "9855:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1258,
																"initialValue": {
																	"hexValue": "30",
																	"id": 1257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9867:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "9855:13:2"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1264,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "9887:3:2",
																	"subExpression": {
																		"id": 1263,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "9887:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1265,
																"nodeType": "ExpressionStatement",
																"src": "9887:3:2"
															},
															"nodeType": "ForStatement",
															"src": "9851:2125:2"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1444,
															"name": "_assetId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1116,
															"src": "12124:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1445,
															"name": "successful",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1207,
															"src": "12134:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 1446,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "12146:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12152:9:2",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "12146:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1443,
														"name": "BiddingEnded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "12111:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,bool,uint256)"
														}
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12111:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1449,
												"nodeType": "EmitStatement",
												"src": "12106:56:2"
											}
										]
									},
									"id": 1451,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_processBids",
									"nameLocation": "8178:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "_assetId",
												"nameLocation": "8199:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "8191:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8191:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8190:18:2"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8218:0:2"
									},
									"scope": 1594,
									"src": "8169:4000:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1525,
										"nodeType": "Block",
										"src": "12263:397:2",
										"statements": [
											{
												"assignments": [
													1460
												],
												"declarations": [
													{
														"constant": false,
														"id": 1460,
														"mutability": "mutable",
														"name": "bids",
														"nameLocation": "12287:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 1525,
														"src": "12273:18:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
															"typeString": "struct LuxuryAssetOffering.Bid[]"
														},
														"typeName": {
															"baseType": {
																"id": 1458,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1457,
																	"name": "Bid",
																	"nameLocations": [
																		"12273:3:2"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 424,
																	"src": "12273:3:2"
																},
																"referencedDeclaration": 424,
																"src": "12273:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																	"typeString": "struct LuxuryAssetOffering.Bid"
																}
															},
															"id": 1459,
															"nodeType": "ArrayTypeName",
															"src": "12273:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Bid[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1464,
												"initialValue": {
													"baseExpression": {
														"id": 1461,
														"name": "assetBids",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "12294:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$424_storage_$dyn_storage_$",
															"typeString": "mapping(uint256 => struct LuxuryAssetOffering.Bid storage ref[] storage ref)"
														}
													},
													"id": 1463,
													"indexExpression": {
														"id": 1462,
														"name": "_assetId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "12304:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12294:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage",
														"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12273:40:2"
											},
											{
												"body": {
													"id": 1523,
													"nodeType": "Block",
													"src": "12364:290:2",
													"statements": [
														{
															"body": {
																"id": 1521,
																"nodeType": "Block",
																"src": "12421:223:2",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1489,
																						"name": "bids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1460,
																						"src": "12442:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																							"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
																						}
																					},
																					"id": 1491,
																					"indexExpression": {
																						"id": 1490,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1466,
																						"src": "12447:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "12442:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Bid_$424_storage",
																						"typeString": "struct LuxuryAssetOffering.Bid storage ref"
																					}
																				},
																				"id": 1492,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "12450:13:2",
																				"memberName": "pricePerShare",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 421,
																				"src": "12442:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 1493,
																						"name": "bids",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1460,
																						"src": "12466:4:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																							"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
																						}
																					},
																					"id": 1495,
																					"indexExpression": {
																						"id": 1494,
																						"name": "j",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1477,
																						"src": "12471:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "12466:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Bid_$424_storage",
																						"typeString": "struct LuxuryAssetOffering.Bid storage ref"
																					}
																				},
																				"id": 1496,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "12474:13:2",
																				"memberName": "pricePerShare",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 421,
																				"src": "12466:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "12442:45:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 1520,
																		"nodeType": "IfStatement",
																		"src": "12439:191:2",
																		"trueBody": {
																			"id": 1519,
																			"nodeType": "Block",
																			"src": "12489:141:2",
																			"statements": [
																				{
																					"assignments": [
																						1500
																					],
																					"declarations": [
																						{
																							"constant": false,
																							"id": 1500,
																							"mutability": "mutable",
																							"name": "temp",
																							"nameLocation": "12522:4:2",
																							"nodeType": "VariableDeclaration",
																							"scope": 1519,
																							"src": "12511:15:2",
																							"stateVariable": false,
																							"storageLocation": "memory",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Bid_$424_memory_ptr",
																								"typeString": "struct LuxuryAssetOffering.Bid"
																							},
																							"typeName": {
																								"id": 1499,
																								"nodeType": "UserDefinedTypeName",
																								"pathNode": {
																									"id": 1498,
																									"name": "Bid",
																									"nameLocations": [
																										"12511:3:2"
																									],
																									"nodeType": "IdentifierPath",
																									"referencedDeclaration": 424,
																									"src": "12511:3:2"
																								},
																								"referencedDeclaration": 424,
																								"src": "12511:3:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																									"typeString": "struct LuxuryAssetOffering.Bid"
																								}
																							},
																							"visibility": "internal"
																						}
																					],
																					"id": 1504,
																					"initialValue": {
																						"baseExpression": {
																							"id": 1501,
																							"name": "bids",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1460,
																							"src": "12529:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																								"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
																							}
																						},
																						"id": 1503,
																						"indexExpression": {
																							"id": 1502,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1466,
																							"src": "12534:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "12529:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Bid_$424_storage",
																							"typeString": "struct LuxuryAssetOffering.Bid storage ref"
																						}
																					},
																					"nodeType": "VariableDeclarationStatement",
																					"src": "12511:25:2"
																				},
																				{
																					"expression": {
																						"id": 1511,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 1505,
																								"name": "bids",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1460,
																								"src": "12558:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																									"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
																								}
																							},
																							"id": 1507,
																							"indexExpression": {
																								"id": 1506,
																								"name": "i",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1466,
																								"src": "12563:1:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "12558:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Bid_$424_storage",
																								"typeString": "struct LuxuryAssetOffering.Bid storage ref"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 1508,
																								"name": "bids",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1460,
																								"src": "12568:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																									"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
																								}
																							},
																							"id": 1510,
																							"indexExpression": {
																								"id": 1509,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "12573:1:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "12568:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Bid_$424_storage",
																								"typeString": "struct LuxuryAssetOffering.Bid storage ref"
																							}
																						},
																						"src": "12558:17:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Bid_$424_storage",
																							"typeString": "struct LuxuryAssetOffering.Bid storage ref"
																						}
																					},
																					"id": 1512,
																					"nodeType": "ExpressionStatement",
																					"src": "12558:17:2"
																				},
																				{
																					"expression": {
																						"id": 1517,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"id": 1513,
																								"name": "bids",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1460,
																								"src": "12597:4:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																									"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
																								}
																							},
																							"id": 1515,
																							"indexExpression": {
																								"id": 1514,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1477,
																								"src": "12602:1:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "12597:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Bid_$424_storage",
																								"typeString": "struct LuxuryAssetOffering.Bid storage ref"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"id": 1516,
																							"name": "temp",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1500,
																							"src": "12607:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Bid_$424_memory_ptr",
																								"typeString": "struct LuxuryAssetOffering.Bid memory"
																							}
																						},
																						"src": "12597:14:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Bid_$424_storage",
																							"typeString": "struct LuxuryAssetOffering.Bid storage ref"
																						}
																					},
																					"id": 1518,
																					"nodeType": "ExpressionStatement",
																					"src": "12597:14:2"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1482,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "12399:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"id": 1483,
																		"name": "bids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1460,
																		"src": "12403:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																			"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
																		}
																	},
																	"id": 1484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12408:6:2",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "12403:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "12399:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1522,
															"initializationExpression": {
																"assignments": [
																	1477
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 1477,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "12390:1:2",
																		"nodeType": "VariableDeclaration",
																		"scope": 1522,
																		"src": "12382:9:2",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 1476,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "12382:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 1481,
																"initialValue": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1480,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1478,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1466,
																		"src": "12394:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12396:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "12394:3:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "12382:15:2"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 1487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "12416:3:2",
																	"subExpression": {
																		"id": 1486,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1477,
																		"src": "12416:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1488,
																"nodeType": "ExpressionStatement",
																"src": "12416:3:2"
															},
															"nodeType": "ForStatement",
															"src": "12378:266:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1469,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "12342:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1470,
															"name": "bids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "12346:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
															}
														},
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12351:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12346:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12342:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1524,
												"initializationExpression": {
													"assignments": [
														1466
													],
													"declarations": [
														{
															"constant": false,
															"id": 1466,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12335:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1524,
															"src": "12327:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1465,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12327:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1468,
													"initialValue": {
														"hexValue": "30",
														"id": 1467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12339:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12327:13:2"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1474,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12359:3:2",
														"subExpression": {
															"id": 1473,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "12359:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1475,
													"nodeType": "ExpressionStatement",
													"src": "12359:3:2"
												},
												"nodeType": "ForStatement",
												"src": "12323:331:2"
											}
										]
									},
									"id": 1526,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_sortBids",
									"nameLocation": "12226:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1453,
												"mutability": "mutable",
												"name": "_assetId",
												"nameLocation": "12244:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1526,
												"src": "12236:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12236:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12235:18:2"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12263:0:2"
									},
									"scope": 1594,
									"src": "12217:443:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1592,
										"nodeType": "Block",
										"src": "12786:385:2",
										"statements": [
											{
												"assignments": [
													1535
												],
												"declarations": [
													{
														"constant": false,
														"id": 1535,
														"mutability": "mutable",
														"name": "bids",
														"nameLocation": "12810:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 1592,
														"src": "12796:18:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
															"typeString": "struct LuxuryAssetOffering.Bid[]"
														},
														"typeName": {
															"baseType": {
																"id": 1533,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 1532,
																	"name": "Bid",
																	"nameLocations": [
																		"12796:3:2"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 424,
																	"src": "12796:3:2"
																},
																"referencedDeclaration": 424,
																"src": "12796:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bid_$424_storage_ptr",
																	"typeString": "struct LuxuryAssetOffering.Bid"
																}
															},
															"id": 1534,
															"nodeType": "ArrayTypeName",
															"src": "12796:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Bid[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1539,
												"initialValue": {
													"baseExpression": {
														"id": 1536,
														"name": "assetBids",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "12817:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_struct$_Bid_$424_storage_$dyn_storage_$",
															"typeString": "mapping(uint256 => struct LuxuryAssetOffering.Bid storage ref[] storage ref)"
														}
													},
													"id": 1538,
													"indexExpression": {
														"id": 1537,
														"name": "_assetId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1528,
														"src": "12827:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12817:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage",
														"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12796:40:2"
											},
											{
												"body": {
													"id": 1590,
													"nodeType": "Block",
													"src": "12887:278:2",
													"statements": [
														{
															"condition": {
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "12904:18:2",
																"subExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1551,
																			"name": "bids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1535,
																			"src": "12905:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																				"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
																			}
																		},
																		"id": 1553,
																		"indexExpression": {
																			"id": 1552,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1541,
																			"src": "12910:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "12905:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Bid_$424_storage",
																			"typeString": "struct LuxuryAssetOffering.Bid storage ref"
																		}
																	},
																	"id": 1554,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12913:9:2",
																	"memberName": "allocated",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 423,
																	"src": "12905:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1589,
															"nodeType": "IfStatement",
															"src": "12901:254:2",
															"trueBody": {
																"id": 1588,
																"nodeType": "Block",
																"src": "12924:231:2",
																"statements": [
																	{
																		"assignments": [
																			1557
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1557,
																				"mutability": "mutable",
																				"name": "refundAmount",
																				"nameLocation": "12950:12:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 1588,
																				"src": "12942:20:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1556,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "12942:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1568,
																		"initialValue": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 1563,
																							"name": "bids",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1535,
																							"src": "12989:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																								"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
																							}
																						},
																						"id": 1565,
																						"indexExpression": {
																							"id": 1564,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1541,
																							"src": "12994:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "12989:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Bid_$424_storage",
																							"typeString": "struct LuxuryAssetOffering.Bid storage ref"
																						}
																					},
																					"id": 1566,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "12997:13:2",
																					"memberName": "pricePerShare",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 421,
																					"src": "12989:21:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"baseExpression": {
																							"id": 1558,
																							"name": "bids",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1535,
																							"src": "12965:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																								"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
																							}
																						},
																						"id": 1560,
																						"indexExpression": {
																							"id": 1559,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1541,
																							"src": "12970:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "12965:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Bid_$424_storage",
																							"typeString": "struct LuxuryAssetOffering.Bid storage ref"
																						}
																					},
																					"id": 1561,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "12973:11:2",
																					"memberName": "shareAmount",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 419,
																					"src": "12965:19:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "12985:3:2",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 270,
																				"src": "12965:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1567,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "12965:46:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "12942:69:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1577,
																					"name": "refundAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1557,
																					"src": "13062:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"baseExpression": {
																									"id": 1571,
																									"name": "bids",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1535,
																									"src": "13037:4:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																										"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
																									}
																								},
																								"id": 1573,
																								"indexExpression": {
																									"id": 1572,
																									"name": "i",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1541,
																									"src": "13042:1:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "13037:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_Bid_$424_storage",
																									"typeString": "struct LuxuryAssetOffering.Bid storage ref"
																								}
																							},
																							"id": 1574,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "13045:6:2",
																							"memberName": "bidder",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 417,
																							"src": "13037:14:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1570,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "13029:8:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_payable_$",
																							"typeString": "type(address payable)"
																						},
																						"typeName": {
																							"id": 1569,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "13029:8:2",
																							"stateMutability": "payable",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1575,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "13029:23:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"id": 1576,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "13053:8:2",
																				"memberName": "transfer",
																				"nodeType": "MemberAccess",
																				"src": "13029:32:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 1578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13029:46:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1579,
																		"nodeType": "ExpressionStatement",
																		"src": "13029:46:2"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"expression": {
																						"baseExpression": {
																							"id": 1581,
																							"name": "bids",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1535,
																							"src": "13111:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																								"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
																							}
																						},
																						"id": 1583,
																						"indexExpression": {
																							"id": 1582,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1541,
																							"src": "13116:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "13111:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Bid_$424_storage",
																							"typeString": "struct LuxuryAssetOffering.Bid storage ref"
																						}
																					},
																					"id": 1584,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "13119:6:2",
																					"memberName": "bidder",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 417,
																					"src": "13111:14:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1585,
																					"name": "refundAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1557,
																					"src": "13127:12:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1580,
																				"name": "RefundIssued",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 475,
																				"src": "13098:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 1586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "13098:42:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1587,
																		"nodeType": "EmitStatement",
																		"src": "13093:47:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1544,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1541,
														"src": "12865:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1545,
															"name": "bids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1535,
															"src": "12869:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Bid_$424_storage_$dyn_storage_ptr",
																"typeString": "struct LuxuryAssetOffering.Bid storage ref[] storage pointer"
															}
														},
														"id": 1546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12874:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12869:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12865:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1591,
												"initializationExpression": {
													"assignments": [
														1541
													],
													"declarations": [
														{
															"constant": false,
															"id": 1541,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "12858:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 1591,
															"src": "12850:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1540,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "12850:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1543,
													"initialValue": {
														"hexValue": "30",
														"id": 1542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12862:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "12850:13:2"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "12882:3:2",
														"subExpression": {
															"id": 1548,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "12882:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1550,
													"nodeType": "ExpressionStatement",
													"src": "12882:3:2"
												},
												"nodeType": "ForStatement",
												"src": "12846:319:2"
											}
										]
									},
									"id": 1593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_refundAllBids",
									"nameLocation": "12744:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "_assetId",
												"nameLocation": "12767:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "12759:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12759:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12758:18:2"
									},
									"returnParameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12786:0:2"
									},
									"scope": 1594,
									"src": "12735:436:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1595,
							"src": "179:12994:2",
							"usedErrors": [],
							"usedEvents": [
								449,
								459,
								469,
								475,
								483,
								491,
								495
							]
						}
					],
					"src": "32:13142:2"
				},
				"id": 2
			}
		}
	}
}