{
	"id": "4d0efa9a94a486168bd6b7d66029bc28",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"NFT-versions/rental.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract RentalDistribution is Ownable {\n    IERC721Enumerable public nftContract;\n    \n    event ProfitDistributed(uint256 totalProfit, uint256 shareCount, uint256 amountPerShare);\n    event AssetProfitDistributed(uint256 indexed assetId, uint256 totalProfit, uint256 shareCount);\n    \n    constructor(address initialOwner, address _nftContractAddress) Ownable(initialOwner) {\n        nftContract = IERC721Enumerable(_nftContractAddress);\n    }\n\n    \n    // Distribute profit equally among all NFT holders\n    function distributeProfit() external payable onlyOwner {\n        uint256 totalNFTs = nftContract.totalSupply();\n        require(totalNFTs > 0, \"No NFTs minted\");\n        require(msg.value > 0, \"No profit to distribute\");\n        \n        uint256 profitPerNFT = msg.value / totalNFTs;\n        \n        // Distribute to each NFT holder\n        for (uint256 i = 1; i <= totalNFTs; i++) {\n            address owner = nftContract.ownerOf(i);\n            payable(owner).transfer(profitPerNFT);\n        }\n        \n        // Return any remaining dust (due to division)\n        uint256 remaining = msg.value - (profitPerNFT * totalNFTs);\n        if (remaining > 0) {\n            payable(owner()).transfer(remaining);\n        }\n        \n        emit ProfitDistributed(msg.value, totalNFTs, profitPerNFT);\n    }\n    \n    // Distribute profit for a specific asset (calling contract must track which tokens belong to which asset)\n    function distributeAssetProfit(uint256[] calldata tokenIds) external payable onlyOwner {\n        require(tokenIds.length > 0, \"No tokens specified\");\n        require(msg.value > 0, \"No profit to distribute\");\n        \n        uint256 profitPerNFT = msg.value / tokenIds.length;\n        \n        // Distribute to each token owner\n        for (uint256 i = 0; i < tokenIds.length; i++) {\n            address owner = nftContract.ownerOf(tokenIds[i]);\n            payable(owner).transfer(profitPerNFT);\n        }\n        \n        // Return any remaining dust\n        uint256 remaining = msg.value - (profitPerNFT * tokenIds.length);\n        if (remaining > 0) {\n            payable(owner()).transfer(remaining);\n        }\n        \n        emit AssetProfitDistributed(0, msg.value, tokenIds.length);\n    }\n    \n    // Function to receive Ether\n    receive() external payable {}\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Enumerable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 100
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "london"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC-721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"NFT-versions/rental.sol": {
				"RentalDistribution": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_nftContractAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "assetId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalProfit",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shareCount",
									"type": "uint256"
								}
							],
							"name": "AssetProfitDistributed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalProfit",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "shareCount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountPerShare",
									"type": "uint256"
								}
							],
							"name": "ProfitDistributed",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "tokenIds",
									"type": "uint256[]"
								}
							],
							"name": "distributeAssetProfit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "distributeProfit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftContract",
							"outputs": [
								{
									"internalType": "contract IERC721Enumerable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"NFT-versions/rental.sol\":191:2497  contract RentalDistribution is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"NFT-versions/rental.sol\":482:636  constructor(address initialOwner, address _nftContractAddress) Ownable(initialOwner) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"NFT-versions/rental.sol\":553:565  initialOwner */\n  dup2\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  shl(0xe0, 0x1e4fbdf7)\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":640:691   */\n  mstore\n    /* \"#utility.yul\":613:631   */\n  0x24\n  add\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  jump\t// in\ntag_10:\n  pop\n    /* \"NFT-versions/rental.sol\":577:588  nftContract */\n  0x01\n    /* \"NFT-versions/rental.sol\":577:629  nftContract = IERC721Enumerable(_nftContractAddress) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  pop\n    /* \"NFT-versions/rental.sol\":191:2497  contract RentalDistribution is Ownable {... */\n  jump(tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  swap1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:191   */\ntag_15:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_18:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:489   */\ntag_3:\n    /* \"#utility.yul\":275:281   */\n  0x00\n    /* \"#utility.yul\":283:289   */\n  dup1\n    /* \"#utility.yul\":336:338   */\n  0x40\n    /* \"#utility.yul\":324:333   */\n  dup4\n    /* \"#utility.yul\":315:322   */\n  dup6\n    /* \"#utility.yul\":311:334   */\n  sub\n    /* \"#utility.yul\":307:339   */\n  slt\n    /* \"#utility.yul\":304:356   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":352:353   */\n  0x00\n    /* \"#utility.yul\":349:350   */\n  dup1\n    /* \"#utility.yul\":342:354   */\n  revert\n    /* \"#utility.yul\":304:356   */\ntag_20:\n    /* \"#utility.yul\":375:415   */\n  tag_21\n    /* \"#utility.yul\":405:414   */\n  dup4\n    /* \"#utility.yul\":375:415   */\n  tag_15\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":365:415   */\n  swap2\n  pop\n    /* \"#utility.yul\":434:483   */\n  tag_22\n    /* \"#utility.yul\":479:481   */\n  0x20\n    /* \"#utility.yul\":468:477   */\n  dup5\n    /* \"#utility.yul\":464:482   */\n  add\n    /* \"#utility.yul\":434:483   */\n  tag_15\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":424:483   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:489   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":494:697   */\ntag_16:\n    /* \"NFT-versions/rental.sol\":191:2497  contract RentalDistribution is Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"NFT-versions/rental.sol\":191:2497  contract RentalDistribution is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8a160b54\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xd56d229d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xe4463b51\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"NFT-versions/rental.sol\":702:1503  function distributeProfit() external payable onlyOwner {... */\n    tag_4:\n      tag_12\n      tag_15\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"NFT-versions/rental.sol\":236:272  IERC721Enumerable public nftContract */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      sload(0x01)\n      tag_17\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"NFT-versions/rental.sol\":1624:2423  function distributeAssetProfit(uint256[] calldata tokenIds) external payable onlyOwner {... */\n    tag_7:\n      tag_12\n      tag_27\n      calldatasize\n      0x04\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_12\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_36:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_39\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_39:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"NFT-versions/rental.sol\":702:1503  function distributeProfit() external payable onlyOwner {... */\n    tag_15:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_42\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_42:\n        /* \"NFT-versions/rental.sol\":787:798  nftContract */\n      sload(0x01)\n        /* \"NFT-versions/rental.sol\":787:812  nftContract.totalSupply() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x18160ddd)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"NFT-versions/rental.sol\":767:784  uint256 totalNFTs */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NFT-versions/rental.sol\":787:798  nftContract */\n      and\n      swap2\n        /* \"NFT-versions/rental.sol\":787:810  nftContract.totalSupply */\n      0x18160ddd\n      swap2\n        /* \"NFT-versions/rental.sol\":787:812  nftContract.totalSupply() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"NFT-versions/rental.sol\":787:798  nftContract */\n      dup7\n        /* \"NFT-versions/rental.sol\":787:812  nftContract.totalSupply() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_45\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_45:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"NFT-versions/rental.sol\":767:812  uint256 totalNFTs = nftContract.totalSupply() */\n      swap1\n      pop\n        /* \"NFT-versions/rental.sol\":842:843  0 */\n      0x00\n        /* \"NFT-versions/rental.sol\":830:839  totalNFTs */\n      dup2\n        /* \"NFT-versions/rental.sol\":830:843  totalNFTs > 0 */\n      gt\n        /* \"NFT-versions/rental.sol\":822:862  require(totalNFTs > 0, \"No NFTs minted\") */\n      tag_48\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1849:1851   */\n      0x20\n        /* \"NFT-versions/rental.sol\":822:862  require(totalNFTs > 0, \"No NFTs minted\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1831:1852   */\n      mstore\n        /* \"#utility.yul\":1888:1890   */\n      0x0e\n        /* \"#utility.yul\":1868:1886   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1861:1891   */\n      mstore\n      shl(0x92, 0x139bc81391951cc81b5a5b9d1959)\n        /* \"#utility.yul\":1907:1925   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1900:1944   */\n      mstore\n        /* \"#utility.yul\":1961:1979   */\n      0x64\n      add\n        /* \"NFT-versions/rental.sol\":822:862  require(totalNFTs > 0, \"No NFTs minted\") */\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_48:\n        /* \"NFT-versions/rental.sol\":892:893  0 */\n      0x00\n        /* \"NFT-versions/rental.sol\":880:889  msg.value */\n      callvalue\n        /* \"NFT-versions/rental.sol\":880:893  msg.value > 0 */\n      gt\n        /* \"NFT-versions/rental.sol\":872:921  require(msg.value > 0, \"No profit to distribute\") */\n      tag_51\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap1\n      tag_53\n      jump\t// in\n    tag_51:\n        /* \"NFT-versions/rental.sol\":940:960  uint256 profitPerNFT */\n      0x00\n        /* \"NFT-versions/rental.sol\":963:984  msg.value / totalNFTs */\n      tag_54\n        /* \"NFT-versions/rental.sol\":975:984  totalNFTs */\n      dup3\n        /* \"NFT-versions/rental.sol\":963:972  msg.value */\n      callvalue\n        /* \"NFT-versions/rental.sol\":963:984  msg.value / totalNFTs */\n      tag_55\n      jump\t// in\n    tag_54:\n        /* \"NFT-versions/rental.sol\":940:984  uint256 profitPerNFT = msg.value / totalNFTs */\n      swap1\n      pop\n        /* \"NFT-versions/rental.sol\":1061:1062  1 */\n      0x01\n        /* \"NFT-versions/rental.sol\":1044:1199  for (uint256 i = 1; i <= totalNFTs; i++) {... */\n    tag_56:\n        /* \"NFT-versions/rental.sol\":1069:1078  totalNFTs */\n      dup3\n        /* \"NFT-versions/rental.sol\":1064:1065  i */\n      dup2\n        /* \"NFT-versions/rental.sol\":1064:1078  i <= totalNFTs */\n      gt\n        /* \"NFT-versions/rental.sol\":1044:1199  for (uint256 i = 1; i <= totalNFTs; i++) {... */\n      tag_57\n      jumpi\n        /* \"NFT-versions/rental.sol\":1115:1126  nftContract */\n      sload(0x01)\n        /* \"NFT-versions/rental.sol\":1115:1137  nftContract.ownerOf(i) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2842:2867   */\n      dup4\n      swap1\n      mstore\n        /* \"NFT-versions/rental.sol\":1099:1112  address owner */\n      0x00\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NFT-versions/rental.sol\":1115:1126  nftContract */\n      and\n      swap1\n        /* \"NFT-versions/rental.sol\":1115:1134  nftContract.ownerOf */\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":2815:2833   */\n      0x24\n      add\n        /* \"NFT-versions/rental.sol\":1115:1137  nftContract.ownerOf(i) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_62\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_62:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"NFT-versions/rental.sol\":1151:1188  payable(owner).transfer(profitPerNFT) */\n      mload(0x40)\n        /* \"NFT-versions/rental.sol\":1099:1137  address owner = nftContract.ownerOf(i) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NFT-versions/rental.sol\":1151:1174  payable(owner).transfer */\n      dup3\n      and\n      swap1\n        /* \"NFT-versions/rental.sol\":1151:1188  payable(owner).transfer(profitPerNFT) */\n      dup5\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"NFT-versions/rental.sol\":1175:1187  profitPerNFT */\n      dup6\n      swap1\n        /* \"NFT-versions/rental.sol\":1151:1188  payable(owner).transfer(profitPerNFT) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"NFT-versions/rental.sol\":1175:1187  profitPerNFT */\n      dup6\n        /* \"NFT-versions/rental.sol\":1151:1174  payable(owner).transfer */\n      dup9\n        /* \"NFT-versions/rental.sol\":1151:1188  payable(owner).transfer(profitPerNFT) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_66\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_66:\n      pop\n        /* \"NFT-versions/rental.sol\":1085:1199  {... */\n      pop\n        /* \"NFT-versions/rental.sol\":1080:1083  i++ */\n      dup1\n      dup1\n      tag_67\n      swap1\n      tag_68\n      jump\t// in\n    tag_67:\n      swap2\n      pop\n      pop\n        /* \"NFT-versions/rental.sol\":1044:1199  for (uint256 i = 1; i <= totalNFTs; i++) {... */\n      jump(tag_56)\n    tag_57:\n      pop\n        /* \"NFT-versions/rental.sol\":1272:1289  uint256 remaining */\n      0x00\n        /* \"NFT-versions/rental.sol\":1305:1329  profitPerNFT * totalNFTs */\n      tag_69\n        /* \"NFT-versions/rental.sol\":1320:1329  totalNFTs */\n      dup4\n        /* \"NFT-versions/rental.sol\":1305:1317  profitPerNFT */\n      dup4\n        /* \"NFT-versions/rental.sol\":1305:1329  profitPerNFT * totalNFTs */\n      tag_70\n      jump\t// in\n    tag_69:\n        /* \"NFT-versions/rental.sol\":1292:1330  msg.value - (profitPerNFT * totalNFTs) */\n      tag_71\n      swap1\n        /* \"NFT-versions/rental.sol\":1292:1301  msg.value */\n      callvalue\n        /* \"NFT-versions/rental.sol\":1292:1330  msg.value - (profitPerNFT * totalNFTs) */\n      tag_72\n      jump\t// in\n    tag_71:\n        /* \"NFT-versions/rental.sol\":1272:1330  uint256 remaining = msg.value - (profitPerNFT * totalNFTs) */\n      swap1\n      pop\n        /* \"NFT-versions/rental.sol\":1344:1357  remaining > 0 */\n      dup1\n      iszero\n        /* \"NFT-versions/rental.sol\":1340:1420  if (remaining > 0) {... */\n      tag_73\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      sload\n        /* \"NFT-versions/rental.sol\":1373:1409  payable(owner()).transfer(remaining) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"NFT-versions/rental.sol\":1373:1409  payable(owner()).transfer(remaining) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"NFT-versions/rental.sol\":1399:1408  remaining */\n      dup5\n      swap2\n        /* \"NFT-versions/rental.sol\":1373:1409  payable(owner()).transfer(remaining) */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      dup2\n        /* \"NFT-versions/rental.sol\":1373:1409  payable(owner()).transfer(remaining) */\n      dup2\n        /* \"NFT-versions/rental.sol\":1399:1408  remaining */\n      dup6\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup9\n        /* \"NFT-versions/rental.sol\":1373:1409  payable(owner()).transfer(remaining) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_76\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_76:\n      pop\n        /* \"NFT-versions/rental.sol\":1340:1420  if (remaining > 0) {... */\n    tag_73:\n        /* \"NFT-versions/rental.sol\":1443:1496  ProfitDistributed(msg.value, totalNFTs, profitPerNFT) */\n      0x40\n      dup1\n      mload\n        /* \"NFT-versions/rental.sol\":1461:1470  msg.value */\n      callvalue\n        /* \"#utility.yul\":3782:3807   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3838:3840   */\n      0x20\n        /* \"#utility.yul\":3823:3841   */\n      dup2\n      add\n        /* \"#utility.yul\":3816:3850   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":3866:3884   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":3859:3893   */\n      dup4\n      swap1\n      mstore\n        /* \"NFT-versions/rental.sol\":1443:1496  ProfitDistributed(msg.value, totalNFTs, profitPerNFT) */\n      0x35a0431ae8ac3e583720a9e25576a99b5b4bb2cb375a867047eef1e6ea81b26f\n      swap1\n        /* \"#utility.yul\":3770:3772   */\n      0x60\n        /* \"#utility.yul\":3755:3773   */\n      add\n        /* \"NFT-versions/rental.sol\":1443:1496  ProfitDistributed(msg.value, totalNFTs, profitPerNFT) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"NFT-versions/rental.sol\":757:1503  {... */\n      pop\n      pop\n      pop\n        /* \"NFT-versions/rental.sol\":702:1503  function distributeProfit() external payable onlyOwner {... */\n      jump\t// out\n        /* \"NFT-versions/rental.sol\":1624:2423  function distributeAssetProfit(uint256[] calldata tokenIds) external payable onlyOwner {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_81\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_81:\n        /* \"NFT-versions/rental.sol\":1729:1748  tokenIds.length > 0 */\n      dup1\n        /* \"NFT-versions/rental.sol\":1721:1772  require(tokenIds.length > 0, \"No tokens specified\") */\n      tag_83\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4106:4108   */\n      0x20\n        /* \"NFT-versions/rental.sol\":1721:1772  require(tokenIds.length > 0, \"No tokens specified\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4088:4109   */\n      mstore\n        /* \"#utility.yul\":4145:4147   */\n      0x13\n        /* \"#utility.yul\":4125:4143   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4118:4148   */\n      mstore\n      shl(0x6a, 0x139bc81d1bdad95b9cc81cdc1958da599a5959)\n        /* \"#utility.yul\":4164:4182   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4157:4206   */\n      mstore\n        /* \"#utility.yul\":4223:4241   */\n      0x64\n      add\n        /* \"NFT-versions/rental.sol\":1721:1772  require(tokenIds.length > 0, \"No tokens specified\") */\n      tag_49\n        /* \"#utility.yul\":3904:4247   */\n      jump\n        /* \"NFT-versions/rental.sol\":1721:1772  require(tokenIds.length > 0, \"No tokens specified\") */\n    tag_83:\n        /* \"NFT-versions/rental.sol\":1802:1803  0 */\n      0x00\n        /* \"NFT-versions/rental.sol\":1790:1799  msg.value */\n      callvalue\n        /* \"NFT-versions/rental.sol\":1790:1803  msg.value > 0 */\n      gt\n        /* \"NFT-versions/rental.sol\":1782:1831  require(msg.value > 0, \"No profit to distribute\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap1\n      tag_53\n      jump\t// in\n    tag_86:\n        /* \"NFT-versions/rental.sol\":1850:1870  uint256 profitPerNFT */\n      0x00\n        /* \"NFT-versions/rental.sol\":1873:1900  msg.value / tokenIds.length */\n      tag_88\n        /* \"NFT-versions/rental.sol\":1885:1893  tokenIds */\n      dup3\n        /* \"NFT-versions/rental.sol\":1873:1882  msg.value */\n      callvalue\n        /* \"NFT-versions/rental.sol\":1873:1900  msg.value / tokenIds.length */\n      tag_55\n      jump\t// in\n    tag_88:\n        /* \"NFT-versions/rental.sol\":1850:1900  uint256 profitPerNFT = msg.value / tokenIds.length */\n      swap1\n      pop\n        /* \"NFT-versions/rental.sol\":1966:1975  uint256 i */\n      0x00\n        /* \"NFT-versions/rental.sol\":1961:2131  for (uint256 i = 0; i < tokenIds.length; i++) {... */\n    tag_89:\n        /* \"NFT-versions/rental.sol\":1981:2000  i < tokenIds.length */\n      dup3\n      dup2\n      lt\n        /* \"NFT-versions/rental.sol\":1961:2131  for (uint256 i = 0; i < tokenIds.length; i++) {... */\n      iszero\n      tag_90\n      jumpi\n        /* \"NFT-versions/rental.sol\":2037:2048  nftContract */\n      sload(0x01)\n        /* \"NFT-versions/rental.sol\":2021:2034  address owner */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NFT-versions/rental.sol\":2037:2048  nftContract */\n      and\n        /* \"NFT-versions/rental.sol\":2037:2056  nftContract.ownerOf */\n      0x6352211e\n        /* \"NFT-versions/rental.sol\":2057:2065  tokenIds */\n      dup7\n      dup7\n        /* \"NFT-versions/rental.sol\":2066:2067  i */\n      dup6\n        /* \"NFT-versions/rental.sol\":2057:2068  tokenIds[i] */\n      dup2\n      dup2\n      lt\n      tag_93\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      swap1\n      pop\n      0x20\n      mul\n      add\n      calldataload\n        /* \"NFT-versions/rental.sol\":2037:2069  nftContract.ownerOf(tokenIds[i]) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_95\n      swap2\n        /* \"#utility.yul\":2842:2867   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2830:2832   */\n      0x20\n        /* \"#utility.yul\":2815:2833   */\n      add\n      swap1\n        /* \"#utility.yul\":2696:2873   */\n      jump\n        /* \"NFT-versions/rental.sol\":2037:2069  nftContract.ownerOf(tokenIds[i]) */\n    tag_95:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_98:\n        /* \"NFT-versions/rental.sol\":2083:2120  payable(owner).transfer(profitPerNFT) */\n      mload(0x40)\n        /* \"NFT-versions/rental.sol\":2021:2069  address owner = nftContract.ownerOf(tokenIds[i]) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"NFT-versions/rental.sol\":2083:2106  payable(owner).transfer */\n      dup3\n      and\n      swap1\n        /* \"NFT-versions/rental.sol\":2083:2120  payable(owner).transfer(profitPerNFT) */\n      dup5\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"NFT-versions/rental.sol\":2107:2119  profitPerNFT */\n      dup6\n      swap1\n        /* \"NFT-versions/rental.sol\":2083:2120  payable(owner).transfer(profitPerNFT) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"NFT-versions/rental.sol\":2107:2119  profitPerNFT */\n      dup6\n        /* \"NFT-versions/rental.sol\":2083:2106  payable(owner).transfer */\n      dup9\n        /* \"NFT-versions/rental.sol\":2083:2120  payable(owner).transfer(profitPerNFT) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_100:\n      pop\n      pop\n        /* \"NFT-versions/rental.sol\":2002:2005  i++ */\n      0x01\n      add\n        /* \"NFT-versions/rental.sol\":1961:2131  for (uint256 i = 0; i < tokenIds.length; i++) {... */\n      jump(tag_89)\n    tag_90:\n      pop\n        /* \"NFT-versions/rental.sol\":2186:2203  uint256 remaining */\n      0x00\n        /* \"NFT-versions/rental.sol\":2219:2249  profitPerNFT * tokenIds.length */\n      tag_101\n        /* \"NFT-versions/rental.sol\":2234:2242  tokenIds */\n      dup4\n        /* \"NFT-versions/rental.sol\":2219:2231  profitPerNFT */\n      dup4\n        /* \"NFT-versions/rental.sol\":2219:2249  profitPerNFT * tokenIds.length */\n      tag_70\n      jump\t// in\n    tag_101:\n        /* \"NFT-versions/rental.sol\":2206:2250  msg.value - (profitPerNFT * tokenIds.length) */\n      tag_102\n      swap1\n        /* \"NFT-versions/rental.sol\":2206:2215  msg.value */\n      callvalue\n        /* \"NFT-versions/rental.sol\":2206:2250  msg.value - (profitPerNFT * tokenIds.length) */\n      tag_72\n      jump\t// in\n    tag_102:\n        /* \"NFT-versions/rental.sol\":2186:2250  uint256 remaining = msg.value - (profitPerNFT * tokenIds.length) */\n      swap1\n      pop\n        /* \"NFT-versions/rental.sol\":2264:2277  remaining > 0 */\n      dup1\n      iszero\n        /* \"NFT-versions/rental.sol\":2260:2340  if (remaining > 0) {... */\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      sload\n        /* \"NFT-versions/rental.sol\":2293:2329  payable(owner()).transfer(remaining) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      swap1\n      swap2\n      and\n      swap2\n        /* \"NFT-versions/rental.sol\":2293:2329  payable(owner()).transfer(remaining) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap2\n        /* \"NFT-versions/rental.sol\":2319:2328  remaining */\n      dup5\n      swap2\n        /* \"NFT-versions/rental.sol\":2293:2329  payable(owner()).transfer(remaining) */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      dup2\n        /* \"NFT-versions/rental.sol\":2293:2329  payable(owner()).transfer(remaining) */\n      dup2\n        /* \"NFT-versions/rental.sol\":2319:2328  remaining */\n      dup6\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup9\n        /* \"NFT-versions/rental.sol\":2293:2329  payable(owner()).transfer(remaining) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_106\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_106:\n      pop\n        /* \"NFT-versions/rental.sol\":2260:2340  if (remaining > 0) {... */\n    tag_103:\n        /* \"NFT-versions/rental.sol\":2363:2416  AssetProfitDistributed(0, msg.value, tokenIds.length) */\n      0x40\n      dup1\n      mload\n        /* \"NFT-versions/rental.sol\":2389:2398  msg.value */\n      callvalue\n        /* \"#utility.yul\":4558:4583   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4614:4616   */\n      0x20\n        /* \"#utility.yul\":4599:4617   */\n      dup2\n      add\n        /* \"#utility.yul\":4592:4626   */\n      dup6\n      swap1\n      mstore\n        /* \"NFT-versions/rental.sol\":2386:2387  0 */\n      0x00\n      swap2\n        /* \"NFT-versions/rental.sol\":2363:2416  AssetProfitDistributed(0, msg.value, tokenIds.length) */\n      0x81a67a0f9c17e8dc23a9b3f3f9f336df13207de6b0972356a4a4bbbd48b04437\n      swap2\n        /* \"#utility.yul\":4531:4549   */\n      add\n        /* \"NFT-versions/rental.sol\":2363:2416  AssetProfitDistributed(0, msg.value, tokenIds.length) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"NFT-versions/rental.sol\":1711:2423  {... */\n      pop\n      pop\n        /* \"NFT-versions/rental.sol\":1624:2423  function distributeAssetProfit(uint256[] calldata tokenIds) external payable onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_110\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_110:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_112\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      shl(0xe0, 0x1e4fbdf7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_112:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_40\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_39\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      shl(0xe0, 0x118cdaa7)\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      swap1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:217   */\n    tag_20:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n      swap1\n        /* \"#utility.yul\":14:217   */\n      jump\t// out\n        /* \"#utility.yul\":455:1065   */\n    tag_28:\n        /* \"#utility.yul\":541:547   */\n      0x00\n        /* \"#utility.yul\":549:555   */\n      dup1\n        /* \"#utility.yul\":602:604   */\n      0x20\n        /* \"#utility.yul\":590:599   */\n      dup4\n        /* \"#utility.yul\":581:588   */\n      dup6\n        /* \"#utility.yul\":577:600   */\n      sub\n        /* \"#utility.yul\":573:605   */\n      slt\n        /* \"#utility.yul\":570:622   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":618:619   */\n      0x00\n        /* \"#utility.yul\":615:616   */\n      dup1\n        /* \"#utility.yul\":608:620   */\n      revert\n        /* \"#utility.yul\":570:622   */\n    tag_130:\n        /* \"#utility.yul\":658:667   */\n      dup3\n        /* \"#utility.yul\":645:668   */\n      calldataload\n        /* \"#utility.yul\":691:709   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":683:689   */\n      dup2\n        /* \"#utility.yul\":680:710   */\n      gt\n        /* \"#utility.yul\":677:727   */\n      iszero\n      tag_131\n      jumpi\n        /* \"#utility.yul\":723:724   */\n      0x00\n        /* \"#utility.yul\":720:721   */\n      dup1\n        /* \"#utility.yul\":713:725   */\n      revert\n        /* \"#utility.yul\":677:727   */\n    tag_131:\n        /* \"#utility.yul\":746:768   */\n      dup4\n      add\n        /* \"#utility.yul\":799:803   */\n      0x1f\n        /* \"#utility.yul\":791:804   */\n      dup2\n      add\n        /* \"#utility.yul\":787:814   */\n      dup6\n      sgt\n        /* \"#utility.yul\":777:832   */\n      tag_132\n      jumpi\n        /* \"#utility.yul\":828:829   */\n      0x00\n        /* \"#utility.yul\":825:826   */\n      dup1\n        /* \"#utility.yul\":818:830   */\n      revert\n        /* \"#utility.yul\":777:832   */\n    tag_132:\n        /* \"#utility.yul\":868:870   */\n      dup1\n        /* \"#utility.yul\":855:871   */\n      calldataload\n        /* \"#utility.yul\":894:912   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":886:892   */\n      dup2\n        /* \"#utility.yul\":883:913   */\n      gt\n        /* \"#utility.yul\":880:930   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":926:927   */\n      0x00\n        /* \"#utility.yul\":923:924   */\n      dup1\n        /* \"#utility.yul\":916:928   */\n      revert\n        /* \"#utility.yul\":880:930   */\n    tag_133:\n        /* \"#utility.yul\":979:986   */\n      dup6\n        /* \"#utility.yul\":974:976   */\n      0x20\n        /* \"#utility.yul\":964:970   */\n      dup3\n        /* \"#utility.yul\":961:962   */\n      0x05\n        /* \"#utility.yul\":957:971   */\n      shl\n        /* \"#utility.yul\":953:955   */\n      dup5\n        /* \"#utility.yul\":949:972   */\n      add\n        /* \"#utility.yul\":945:977   */\n      add\n        /* \"#utility.yul\":942:987   */\n      gt\n        /* \"#utility.yul\":939:1004   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":1000:1001   */\n      0x00\n        /* \"#utility.yul\":997:998   */\n      dup1\n        /* \"#utility.yul\":990:1002   */\n      revert\n        /* \"#utility.yul\":939:1004   */\n    tag_134:\n        /* \"#utility.yul\":1031:1033   */\n      0x20\n        /* \"#utility.yul\":1023:1034   */\n      swap2\n      swap1\n      swap2\n      add\n      swap6\n        /* \"#utility.yul\":1053:1059   */\n      swap1\n      swap5\n      pop\n        /* \"#utility.yul\":455:1065   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1070:1201   */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1145:1176   */\n      dup2\n      and\n        /* \"#utility.yul\":1135:1177   */\n      dup2\n      eq\n        /* \"#utility.yul\":1125:1195   */\n      tag_114\n      jumpi\n        /* \"#utility.yul\":1191:1192   */\n      0x00\n        /* \"#utility.yul\":1188:1189   */\n      dup1\n        /* \"#utility.yul\":1181:1193   */\n      revert\n        /* \"#utility.yul\":1206:1453   */\n    tag_33:\n        /* \"#utility.yul\":1265:1271   */\n      0x00\n        /* \"#utility.yul\":1318:1320   */\n      0x20\n        /* \"#utility.yul\":1306:1315   */\n      dup3\n        /* \"#utility.yul\":1297:1304   */\n      dup5\n        /* \"#utility.yul\":1293:1316   */\n      sub\n        /* \"#utility.yul\":1289:1321   */\n      slt\n        /* \"#utility.yul\":1286:1338   */\n      iszero\n      tag_138\n      jumpi\n        /* \"#utility.yul\":1334:1335   */\n      0x00\n        /* \"#utility.yul\":1331:1332   */\n      dup1\n        /* \"#utility.yul\":1324:1336   */\n      revert\n        /* \"#utility.yul\":1286:1338   */\n    tag_138:\n        /* \"#utility.yul\":1373:1382   */\n      dup2\n        /* \"#utility.yul\":1360:1383   */\n      calldataload\n        /* \"#utility.yul\":1392:1423   */\n      tag_139\n        /* \"#utility.yul\":1417:1422   */\n      dup2\n        /* \"#utility.yul\":1392:1423   */\n      tag_124\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":1442:1447   */\n      swap4\n        /* \"#utility.yul\":1206:1453   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1458:1642   */\n    tag_47:\n        /* \"#utility.yul\":1528:1534   */\n      0x00\n        /* \"#utility.yul\":1581:1583   */\n      0x20\n        /* \"#utility.yul\":1569:1578   */\n      dup3\n        /* \"#utility.yul\":1560:1567   */\n      dup5\n        /* \"#utility.yul\":1556:1579   */\n      sub\n        /* \"#utility.yul\":1552:1584   */\n      slt\n        /* \"#utility.yul\":1549:1601   */\n      iszero\n      tag_141\n      jumpi\n        /* \"#utility.yul\":1597:1598   */\n      0x00\n        /* \"#utility.yul\":1594:1595   */\n      dup1\n        /* \"#utility.yul\":1587:1599   */\n      revert\n        /* \"#utility.yul\":1549:1601   */\n    tag_141:\n      pop\n        /* \"#utility.yul\":1620:1636   */\n      mload\n      swap2\n        /* \"#utility.yul\":1458:1642   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1990:2337   */\n    tag_53:\n        /* \"#utility.yul\":2192:2194   */\n      0x20\n        /* \"#utility.yul\":2174:2195   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2231:2233   */\n      0x17\n        /* \"#utility.yul\":2211:2229   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2204:2234   */\n      mstore\n      shl(0x48, 0x4e6f2070726f66697420746f2064697374726962757465)\n        /* \"#utility.yul\":2265:2267   */\n      0x40\n        /* \"#utility.yul\":2250:2268   */\n      dup3\n      add\n        /* \"#utility.yul\":2243:2296   */\n      mstore\n        /* \"#utility.yul\":2328:2330   */\n      0x60\n        /* \"#utility.yul\":2313:2331   */\n      add\n      swap1\n        /* \"#utility.yul\":1990:2337   */\n      jump\t// out\n        /* \"#utility.yul\":2342:2469   */\n    tag_125:\n        /* \"#utility.yul\":2403:2413   */\n      0x4e487b71\n        /* \"#utility.yul\":2398:2401   */\n      0xe0\n        /* \"#utility.yul\":2394:2414   */\n      shl\n        /* \"#utility.yul\":2391:2392   */\n      0x00\n        /* \"#utility.yul\":2384:2415   */\n      mstore\n        /* \"#utility.yul\":2434:2438   */\n      0x11\n        /* \"#utility.yul\":2431:2432   */\n      0x04\n        /* \"#utility.yul\":2424:2439   */\n      mstore\n        /* \"#utility.yul\":2458:2462   */\n      0x24\n        /* \"#utility.yul\":2455:2456   */\n      0x00\n        /* \"#utility.yul\":2448:2463   */\n      revert\n        /* \"#utility.yul\":2474:2691   */\n    tag_55:\n        /* \"#utility.yul\":2514:2515   */\n      0x00\n        /* \"#utility.yul\":2540:2541   */\n      dup3\n        /* \"#utility.yul\":2530:2662   */\n      tag_146\n      jumpi\n        /* \"#utility.yul\":2584:2594   */\n      0x4e487b71\n        /* \"#utility.yul\":2579:2582   */\n      0xe0\n        /* \"#utility.yul\":2575:2595   */\n      shl\n        /* \"#utility.yul\":2572:2573   */\n      0x00\n        /* \"#utility.yul\":2565:2596   */\n      mstore\n        /* \"#utility.yul\":2619:2623   */\n      0x12\n        /* \"#utility.yul\":2616:2617   */\n      0x04\n        /* \"#utility.yul\":2609:2624   */\n      mstore\n        /* \"#utility.yul\":2647:2651   */\n      0x24\n        /* \"#utility.yul\":2644:2645   */\n      0x00\n        /* \"#utility.yul\":2637:2652   */\n      revert\n        /* \"#utility.yul\":2530:2662   */\n    tag_146:\n      pop\n        /* \"#utility.yul\":2676:2685   */\n      div\n      swap1\n        /* \"#utility.yul\":2474:2691   */\n      jump\t// out\n        /* \"#utility.yul\":2878:3129   */\n    tag_64:\n        /* \"#utility.yul\":2948:2954   */\n      0x00\n        /* \"#utility.yul\":3001:3003   */\n      0x20\n        /* \"#utility.yul\":2989:2998   */\n      dup3\n        /* \"#utility.yul\":2980:2987   */\n      dup5\n        /* \"#utility.yul\":2976:2999   */\n      sub\n        /* \"#utility.yul\":2972:3004   */\n      slt\n        /* \"#utility.yul\":2969:3021   */\n      iszero\n      tag_149\n      jumpi\n        /* \"#utility.yul\":3017:3018   */\n      0x00\n        /* \"#utility.yul\":3014:3015   */\n      dup1\n        /* \"#utility.yul\":3007:3019   */\n      revert\n        /* \"#utility.yul\":2969:3021   */\n    tag_149:\n        /* \"#utility.yul\":3049:3058   */\n      dup2\n        /* \"#utility.yul\":3043:3059   */\n      mload\n        /* \"#utility.yul\":3068:3099   */\n      tag_139\n        /* \"#utility.yul\":3093:3098   */\n      dup2\n        /* \"#utility.yul\":3068:3099   */\n      tag_124\n      jump\t// in\n        /* \"#utility.yul\":3134:3269   */\n    tag_68:\n        /* \"#utility.yul\":3173:3176   */\n      0x00\n        /* \"#utility.yul\":3194:3211   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":3191:3234   */\n      tag_153\n      jumpi\n        /* \"#utility.yul\":3214:3232   */\n      tag_153\n      tag_125\n      jump\t// in\n    tag_153:\n      pop\n        /* \"#utility.yul\":3261:3262   */\n      0x01\n        /* \"#utility.yul\":3250:3263   */\n      add\n      swap1\n        /* \"#utility.yul\":3134:3269   */\n      jump\t// out\n        /* \"#utility.yul\":3274:3442   */\n    tag_70:\n        /* \"#utility.yul\":3347:3356   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":3378:3387   */\n      dup2\n      iszero\n        /* \"#utility.yul\":3395:3410   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":3389:3411   */\n      dup5\n      eq\n        /* \"#utility.yul\":3375:3412   */\n      or\n        /* \"#utility.yul\":3365:3436   */\n      tag_156\n      jumpi\n        /* \"#utility.yul\":3416:3434   */\n      tag_156\n      tag_125\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":3274:3442   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3447:3575   */\n    tag_72:\n        /* \"#utility.yul\":3514:3523   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":3535:3546   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":3532:3569   */\n      iszero\n      tag_156\n      jumpi\n        /* \"#utility.yul\":3549:3567   */\n      tag_156\n      tag_125\n      jump\t// in\n        /* \"#utility.yul\":4252:4379   */\n    tag_94:\n        /* \"#utility.yul\":4313:4323   */\n      0x4e487b71\n        /* \"#utility.yul\":4308:4311   */\n      0xe0\n        /* \"#utility.yul\":4304:4324   */\n      shl\n        /* \"#utility.yul\":4301:4302   */\n      0x00\n        /* \"#utility.yul\":4294:4325   */\n      mstore\n        /* \"#utility.yul\":4344:4348   */\n      0x32\n        /* \"#utility.yul\":4341:4342   */\n      0x04\n        /* \"#utility.yul\":4334:4349   */\n      mstore\n        /* \"#utility.yul\":4368:4372   */\n      0x24\n        /* \"#utility.yul\":4365:4366   */\n      0x00\n        /* \"#utility.yul\":4358:4373   */\n      revert\n\n    auxdata: 0xa264697066735822122072467a6c11c7e57eaf3806b4c199f8f903852ee2a11aaab0c2d5ea8991d248ce64736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_380": {
									"entryPoint": null,
									"id": 380,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 142,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 222,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 250,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:699:6",
										"nodeType": "YulBlock",
										"src": "0:699:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:6",
													"nodeType": "YulBlock",
													"src": "74:117:6",
													"statements": [
														{
															"nativeSrc": "84:22:6",
															"nodeType": "YulAssignment",
															"src": "84:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:6"
																},
																"nativeSrc": "93:13:6",
																"nodeType": "YulFunctionCall",
																"src": "93:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:6",
																"nodeType": "YulBlock",
																"src": "169:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:6",
																					"nodeType": "YulLiteral",
																					"src": "178:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:6",
																					"nodeType": "YulLiteral",
																					"src": "181:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:6"
																			},
																			"nativeSrc": "171:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:6"
																		},
																		"nativeSrc": "171:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:6",
																										"nodeType": "YulLiteral",
																										"src": "154:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:6",
																										"nodeType": "YulLiteral",
																										"src": "159:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:6"
																								},
																								"nativeSrc": "150:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:6",
																								"nodeType": "YulLiteral",
																								"src": "163:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:6"
																						},
																						"nativeSrc": "146:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:6"
																				},
																				"nativeSrc": "135:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:6"
																		},
																		"nativeSrc": "125:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:6"
																},
																"nativeSrc": "118:50:6",
																"nodeType": "YulFunctionCall",
																"src": "118:50:6"
															},
															"nativeSrc": "115:70:6",
															"nodeType": "YulIf",
															"src": "115:70:6"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:6",
														"nodeType": "YulTypedName",
														"src": "53:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:6",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "14:177:6"
											},
											{
												"body": {
													"nativeSrc": "294:195:6",
													"nodeType": "YulBlock",
													"src": "294:195:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "340:16:6",
																"nodeType": "YulBlock",
																"src": "340:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "349:1:6",
																					"nodeType": "YulLiteral",
																					"src": "349:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "352:1:6",
																					"nodeType": "YulLiteral",
																					"src": "352:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "342:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "342:6:6"
																			},
																			"nativeSrc": "342:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "342:12:6"
																		},
																		"nativeSrc": "342:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "342:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "315:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "315:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "324:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "324:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "311:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "311:3:6"
																		},
																		"nativeSrc": "311:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "311:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "336:2:6",
																		"nodeType": "YulLiteral",
																		"src": "336:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "307:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "307:3:6"
																},
																"nativeSrc": "307:32:6",
																"nodeType": "YulFunctionCall",
																"src": "307:32:6"
															},
															"nativeSrc": "304:52:6",
															"nodeType": "YulIf",
															"src": "304:52:6"
														},
														{
															"nativeSrc": "365:50:6",
															"nodeType": "YulAssignment",
															"src": "365:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "405:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "405:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "375:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "375:29:6"
																},
																"nativeSrc": "375:40:6",
																"nodeType": "YulFunctionCall",
																"src": "375:40:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "365:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "365:6:6"
																}
															]
														},
														{
															"nativeSrc": "424:59:6",
															"nodeType": "YulAssignment",
															"src": "424:59:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "468:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "468:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "479:2:6",
																				"nodeType": "YulLiteral",
																				"src": "479:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "464:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "464:3:6"
																		},
																		"nativeSrc": "464:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "464:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "434:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "434:29:6"
																},
																"nativeSrc": "434:49:6",
																"nodeType": "YulFunctionCall",
																"src": "434:49:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "424:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "424:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "196:293:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "252:9:6",
														"nodeType": "YulTypedName",
														"src": "252:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "263:7:6",
														"nodeType": "YulTypedName",
														"src": "263:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "275:6:6",
														"nodeType": "YulTypedName",
														"src": "275:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "283:6:6",
														"nodeType": "YulTypedName",
														"src": "283:6:6",
														"type": ""
													}
												],
												"src": "196:293:6"
											},
											{
												"body": {
													"nativeSrc": "595:102:6",
													"nodeType": "YulBlock",
													"src": "595:102:6",
													"statements": [
														{
															"nativeSrc": "605:26:6",
															"nodeType": "YulAssignment",
															"src": "605:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "617:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "617:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "628:2:6",
																		"nodeType": "YulLiteral",
																		"src": "628:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "613:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "613:3:6"
																},
																"nativeSrc": "613:18:6",
																"nodeType": "YulFunctionCall",
																"src": "613:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "605:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "605:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "647:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "647:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "662:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "662:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "678:3:6",
																								"nodeType": "YulLiteral",
																								"src": "678:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "683:1:6",
																								"nodeType": "YulLiteral",
																								"src": "683:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "674:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "674:3:6"
																						},
																						"nativeSrc": "674:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "674:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "687:1:6",
																						"nodeType": "YulLiteral",
																						"src": "687:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "670:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "670:3:6"
																				},
																				"nativeSrc": "670:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "670:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "658:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "658:3:6"
																		},
																		"nativeSrc": "658:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "658:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "640:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "640:6:6"
																},
																"nativeSrc": "640:51:6",
																"nodeType": "YulFunctionCall",
																"src": "640:51:6"
															},
															"nativeSrc": "640:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "640:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "494:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "564:9:6",
														"nodeType": "YulTypedName",
														"src": "564:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "575:6:6",
														"nodeType": "YulTypedName",
														"src": "575:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "586:4:6",
														"nodeType": "YulTypedName",
														"src": "586:4:6",
														"type": ""
													}
												],
												"src": "494:203:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161094b38038061094b83398101604081905261002f916100fa565b816001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161008e565b50600180546001600160a01b0319166001600160a01b03929092169190911790555061012d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100f557600080fd5b919050565b6000806040838503121561010d57600080fd5b610116836100de565b9150610124602084016100de565b90509250929050565b61080f8061013c6000396000f3fe6080604052600436106100595760003560e01c8063715018a6146100655780638a160b541461007c5780638da5cb5b14610084578063d56d229d146100b4578063e4463b51146100d4578063f2fde38b146100e757600080fd5b3661006057005b600080fd5b34801561007157600080fd5b5061007a610107565b005b61007a61011b565b34801561009057600080fd5b506000546001600160a01b03165b6040516100ab9190610617565b60405180910390f35b3480156100c057600080fd5b5060015461009e906001600160a01b031681565b61007a6100e236600461062b565b61036d565b3480156100f357600080fd5b5061007a6101023660046106b7565b61055c565b61010f61059a565b61011960006105c7565b565b61012361059a565b600154604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801561016d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019191906106db565b9050600081116101d95760405162461bcd60e51b815260206004820152600e60248201526d139bc81391951cc81b5a5b9d195960921b60448201526064015b60405180910390fd5b600034116101f95760405162461bcd60e51b81526004016101d0906106f4565b6000610205823461073b565b905060015b8281116102cd576001546040516331a9108f60e11b8152600481018390526000916001600160a01b031690636352211e90602401602060405180830381865afa15801561025b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027f919061075d565b6040519091506001600160a01b0382169084156108fc029085906000818181858888f193505050501580156102b8573d6000803e3d6000fd5b505080806102c59061077a565b91505061020a565b5060006102da8383610793565b6102e490346107b0565b9050801561032757600080546040516001600160a01b039091169183156108fc02918491818181858888f19350505050158015610325573d6000803e3d6000fd5b505b60408051348152602081018590529081018390527f35a0431ae8ac3e583720a9e25576a99b5b4bb2cb375a867047eef1e6ea81b26f9060600160405180910390a1505050565b61037561059a565b806103b85760405162461bcd60e51b8152602060048201526013602482015272139bc81d1bdad95b9cc81cdc1958da599a5959606a1b60448201526064016101d0565b600034116103d85760405162461bcd60e51b81526004016101d0906106f4565b60006103e4823461073b565b905060005b828110156104c0576001546000906001600160a01b0316636352211e868685818110610417576104176107c3565b905060200201356040518263ffffffff1660e01b815260040161043c91815260200190565b602060405180830381865afa158015610459573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047d919061075d565b6040519091506001600160a01b0382169084156108fc029085906000818181858888f193505050501580156104b6573d6000803e3d6000fd5b50506001016103e9565b5060006104cd8383610793565b6104d790346107b0565b9050801561051a57600080546040516001600160a01b039091169183156108fc02918491818181858888f19350505050158015610518573d6000803e3d6000fd5b505b60408051348152602081018590526000917f81a67a0f9c17e8dc23a9b3f3f9f336df13207de6b0972356a4a4bbbd48b04437910160405180910390a250505050565b61056461059a565b6001600160a01b03811661058e576000604051631e4fbdf760e01b81526004016101d09190610617565b610597816105c7565b50565b6000546001600160a01b03163314610119573360405163118cdaa760e01b81526004016101d09190610617565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0391909116815260200190565b6000806020838503121561063e57600080fd5b823567ffffffffffffffff81111561065557600080fd5b8301601f8101851361066657600080fd5b803567ffffffffffffffff81111561067d57600080fd5b8560208260051b840101111561069257600080fd5b6020919091019590945092505050565b6001600160a01b038116811461059757600080fd5b6000602082840312156106c957600080fd5b81356106d4816106a2565b9392505050565b6000602082840312156106ed57600080fd5b5051919050565b6020808252601790820152764e6f2070726f66697420746f206469737472696275746560481b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008261075857634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561076f57600080fd5b81516106d4816106a2565b60006001820161078c5761078c610725565b5060010190565b80820281158282048414176107aa576107aa610725565b92915050565b818103818111156107aa576107aa610725565b634e487b7160e01b600052603260045260246000fdfea264697066735822122072467a6c11c7e57eaf3806b4c199f8f903852ee2a11aaab0c2d5ea8991d248ce64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x94B CODESIZE SUB DUP1 PUSH2 0x94B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0xFA JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x5E JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x67 DUP2 PUSH2 0x8E JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP PUSH2 0x12D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x116 DUP4 PUSH2 0xDE JUMP JUMPDEST SWAP2 POP PUSH2 0x124 PUSH1 0x20 DUP5 ADD PUSH2 0xDE JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x80F DUP1 PUSH2 0x13C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x59 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0x8A160B54 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xD56D229D EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xE4463B51 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x60 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A PUSH2 0x107 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7A PUSH2 0x11B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x9E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x62B JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST PUSH2 0x10F PUSH2 0x59A JUMP JUMPDEST PUSH2 0x119 PUSH1 0x0 PUSH2 0x5C7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x123 PUSH2 0x59A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x6DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BC81391951CC81B5A5B9D1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x1F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D0 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205 DUP3 CALLVALUE PUSH2 0x73B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 JUMPDEST DUP3 DUP2 GT PUSH2 0x2CD JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2C5 SWAP1 PUSH2 0x77A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x20A JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2DA DUP4 DUP4 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x2E4 SWAP1 CALLVALUE PUSH2 0x7B0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x325 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLVALUE DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x35A0431AE8AC3E583720A9E25576A99B5B4BB2CB375A867047EEF1E6EA81B26F SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x375 PUSH2 0x59A JUMP JUMPDEST DUP1 PUSH2 0x3B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x139BC81D1BDAD95B9CC81CDC1958DA599A5959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x3D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D0 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E4 DUP3 CALLVALUE PUSH2 0x73B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6352211E DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x417 JUMPI PUSH2 0x417 PUSH2 0x7C3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x459 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x3E9 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x4CD DUP4 DUP4 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x4D7 SWAP1 CALLVALUE PUSH2 0x7B0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x518 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLVALUE DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH32 0x81A67A0F9C17E8DC23A9B3F3F9F336DF13207DE6B0972356A4A4BBBD48B04437 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x564 PUSH2 0x59A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x58E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x617 JUMP JUMPDEST PUSH2 0x597 DUP2 PUSH2 0x5C7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x119 JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x63E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x666 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x67D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6D4 DUP2 PUSH2 0x6A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH23 0x4E6F2070726F66697420746F2064697374726962757465 PUSH1 0x48 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x758 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x76F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6D4 DUP2 PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x78C JUMPI PUSH2 0x78C PUSH2 0x725 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x7AA JUMPI PUSH2 0x7AA PUSH2 0x725 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7AA JUMPI PUSH2 0x7AA PUSH2 0x725 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x467A6C11C7E57EAF3806B4C199F8F903852EE2 LOG1 BYTE 0xAA 0xB0 0xC2 0xD5 0xEA DUP10 SWAP2 0xD2 BASEFEE 0xCE PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "191:2306:5:-:0;;;482:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;553:12;-1:-1:-1;;;;;1273:26:0;;1269:95;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;640:51:6;613:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;577:11:5::1;:52:::0;;-1:-1:-1;;;;;;577:52:5::1;-1:-1:-1::0;;;;;577:52:5;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;191:2306:5;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:177:6:-;93:13;;-1:-1:-1;;;;;135:31:6;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:203::-;191:2306:5;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_572": {
									"entryPoint": null,
									"id": 572,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 1434,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 1479,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@distributeAssetProfit_568": {
									"entryPoint": 877,
									"id": 568,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@distributeProfit_472": {
									"entryPoint": 283,
									"id": 472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nftContract_347": {
									"entryPoint": null,
									"id": 347,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": null,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 263,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 1372,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1719,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr": {
									"entryPoint": 1579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721Enumerable_$296__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_30518725a48d5c49b7d45dba393c4ac05a7db5cc238fc8c0a150357d1b12376f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8e0e1ed6cf62a03d813104220f1caef78eacd9c59e4332e709b0784b49970fba__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d88608cfefd3a8e8263a1dec1a0758975c25a5566bff550c64603b30adf2eec5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1939,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1829,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 1987,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 1698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4634:6",
										"nodeType": "YulBlock",
										"src": "0:4634:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "115:102:6",
													"nodeType": "YulBlock",
													"src": "115:102:6",
													"statements": [
														{
															"nativeSrc": "125:26:6",
															"nodeType": "YulAssignment",
															"src": "125:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "137:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "148:2:6",
																		"nodeType": "YulLiteral",
																		"src": "148:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "133:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:6"
																},
																"nativeSrc": "133:18:6",
																"nodeType": "YulFunctionCall",
																"src": "133:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "125:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "167:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "182:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "198:3:6",
																								"nodeType": "YulLiteral",
																								"src": "198:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "203:1:6",
																								"nodeType": "YulLiteral",
																								"src": "203:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "194:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:6"
																						},
																						"nativeSrc": "194:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "207:1:6",
																						"nodeType": "YulLiteral",
																						"src": "207:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "190:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:6"
																				},
																				"nativeSrc": "190:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "178:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:6"
																		},
																		"nativeSrc": "178:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "160:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:6"
																},
																"nativeSrc": "160:51:6",
																"nodeType": "YulFunctionCall",
																"src": "160:51:6"
															},
															"nativeSrc": "160:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "160:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "84:9:6",
														"nodeType": "YulTypedName",
														"src": "84:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "95:6:6",
														"nodeType": "YulTypedName",
														"src": "95:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "106:4:6",
														"nodeType": "YulTypedName",
														"src": "106:4:6",
														"type": ""
													}
												],
												"src": "14:203:6"
											},
											{
												"body": {
													"nativeSrc": "348:102:6",
													"nodeType": "YulBlock",
													"src": "348:102:6",
													"statements": [
														{
															"nativeSrc": "358:26:6",
															"nodeType": "YulAssignment",
															"src": "358:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "370:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "370:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "381:2:6",
																		"nodeType": "YulLiteral",
																		"src": "381:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "366:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "366:3:6"
																},
																"nativeSrc": "366:18:6",
																"nodeType": "YulFunctionCall",
																"src": "366:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "358:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "358:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "400:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "400:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "415:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "415:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "431:3:6",
																								"nodeType": "YulLiteral",
																								"src": "431:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "436:1:6",
																								"nodeType": "YulLiteral",
																								"src": "436:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "427:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "427:3:6"
																						},
																						"nativeSrc": "427:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "427:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "440:1:6",
																						"nodeType": "YulLiteral",
																						"src": "440:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "423:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "423:3:6"
																				},
																				"nativeSrc": "423:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "423:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "411:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:6"
																		},
																		"nativeSrc": "411:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "411:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "393:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "393:6:6"
																},
																"nativeSrc": "393:51:6",
																"nodeType": "YulFunctionCall",
																"src": "393:51:6"
															},
															"nativeSrc": "393:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "393:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721Enumerable_$296__to_t_address__fromStack_reversed",
												"nativeSrc": "222:228:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "317:9:6",
														"nodeType": "YulTypedName",
														"src": "317:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "328:6:6",
														"nodeType": "YulTypedName",
														"src": "328:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "339:4:6",
														"nodeType": "YulTypedName",
														"src": "339:4:6",
														"type": ""
													}
												],
												"src": "222:228:6"
											},
											{
												"body": {
													"nativeSrc": "560:505:6",
													"nodeType": "YulBlock",
													"src": "560:505:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "606:16:6",
																"nodeType": "YulBlock",
																"src": "606:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "615:1:6",
																					"nodeType": "YulLiteral",
																					"src": "615:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "618:1:6",
																					"nodeType": "YulLiteral",
																					"src": "618:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "608:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "608:6:6"
																			},
																			"nativeSrc": "608:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "608:12:6"
																		},
																		"nativeSrc": "608:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "608:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "581:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "581:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "590:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "590:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "577:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "577:3:6"
																		},
																		"nativeSrc": "577:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "577:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "602:2:6",
																		"nodeType": "YulLiteral",
																		"src": "602:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "573:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "573:3:6"
																},
																"nativeSrc": "573:32:6",
																"nodeType": "YulFunctionCall",
																"src": "573:32:6"
															},
															"nativeSrc": "570:52:6",
															"nodeType": "YulIf",
															"src": "570:52:6"
														},
														{
															"nativeSrc": "631:37:6",
															"nodeType": "YulVariableDeclaration",
															"src": "631:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "658:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "658:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "645:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "645:12:6"
																},
																"nativeSrc": "645:23:6",
																"nodeType": "YulFunctionCall",
																"src": "645:23:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "635:6:6",
																	"nodeType": "YulTypedName",
																	"src": "635:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "711:16:6",
																"nodeType": "YulBlock",
																"src": "711:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "720:1:6",
																					"nodeType": "YulLiteral",
																					"src": "720:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "723:1:6",
																					"nodeType": "YulLiteral",
																					"src": "723:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "713:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "713:6:6"
																			},
																			"nativeSrc": "713:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "713:12:6"
																		},
																		"nativeSrc": "713:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "713:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "683:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "683:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "691:18:6",
																		"nodeType": "YulLiteral",
																		"src": "691:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "680:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "680:2:6"
																},
																"nativeSrc": "680:30:6",
																"nodeType": "YulFunctionCall",
																"src": "680:30:6"
															},
															"nativeSrc": "677:50:6",
															"nodeType": "YulIf",
															"src": "677:50:6"
														},
														{
															"nativeSrc": "736:32:6",
															"nodeType": "YulVariableDeclaration",
															"src": "736:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "750:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "750:9:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "761:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "761:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "746:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "746:3:6"
																},
																"nativeSrc": "746:22:6",
																"nodeType": "YulFunctionCall",
																"src": "746:22:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "740:2:6",
																	"nodeType": "YulTypedName",
																	"src": "740:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "816:16:6",
																"nodeType": "YulBlock",
																"src": "816:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "825:1:6",
																					"nodeType": "YulLiteral",
																					"src": "825:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "828:1:6",
																					"nodeType": "YulLiteral",
																					"src": "828:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "818:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "818:6:6"
																			},
																			"nativeSrc": "818:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "818:12:6"
																		},
																		"nativeSrc": "818:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "818:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "795:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "795:2:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "799:4:6",
																						"nodeType": "YulLiteral",
																						"src": "799:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "791:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "791:3:6"
																				},
																				"nativeSrc": "791:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "791:13:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "806:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "806:7:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "787:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "787:3:6"
																		},
																		"nativeSrc": "787:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "787:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "780:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "780:6:6"
																},
																"nativeSrc": "780:35:6",
																"nodeType": "YulFunctionCall",
																"src": "780:35:6"
															},
															"nativeSrc": "777:55:6",
															"nodeType": "YulIf",
															"src": "777:55:6"
														},
														{
															"nativeSrc": "841:30:6",
															"nodeType": "YulVariableDeclaration",
															"src": "841:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "868:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "868:2:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "855:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "855:12:6"
																},
																"nativeSrc": "855:16:6",
																"nodeType": "YulFunctionCall",
																"src": "855:16:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "845:6:6",
																	"nodeType": "YulTypedName",
																	"src": "845:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "914:16:6",
																"nodeType": "YulBlock",
																"src": "914:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "923:1:6",
																					"nodeType": "YulLiteral",
																					"src": "923:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "926:1:6",
																					"nodeType": "YulLiteral",
																					"src": "926:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "916:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "916:6:6"
																			},
																			"nativeSrc": "916:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "916:12:6"
																		},
																		"nativeSrc": "916:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "916:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "886:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "886:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "894:18:6",
																		"nodeType": "YulLiteral",
																		"src": "894:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "883:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "883:2:6"
																},
																"nativeSrc": "883:30:6",
																"nodeType": "YulFunctionCall",
																"src": "883:30:6"
															},
															"nativeSrc": "880:50:6",
															"nodeType": "YulIf",
															"src": "880:50:6"
														},
														{
															"body": {
																"nativeSrc": "988:16:6",
																"nodeType": "YulBlock",
																"src": "988:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "997:1:6",
																					"nodeType": "YulLiteral",
																					"src": "997:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1000:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1000:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "990:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "990:6:6"
																			},
																			"nativeSrc": "990:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "990:12:6"
																		},
																		"nativeSrc": "990:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "990:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "953:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "953:2:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "961:1:6",
																								"nodeType": "YulLiteral",
																								"src": "961:1:6",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nativeSrc": "964:6:6",
																								"nodeType": "YulIdentifier",
																								"src": "964:6:6"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "957:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "957:3:6"
																						},
																						"nativeSrc": "957:14:6",
																						"nodeType": "YulFunctionCall",
																						"src": "957:14:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "949:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "949:3:6"
																				},
																				"nativeSrc": "949:23:6",
																				"nodeType": "YulFunctionCall",
																				"src": "949:23:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "974:2:6",
																				"nodeType": "YulLiteral",
																				"src": "974:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "945:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "945:3:6"
																		},
																		"nativeSrc": "945:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "945:32:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "979:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "979:7:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "942:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "942:2:6"
																},
																"nativeSrc": "942:45:6",
																"nodeType": "YulFunctionCall",
																"src": "942:45:6"
															},
															"nativeSrc": "939:65:6",
															"nodeType": "YulIf",
															"src": "939:65:6"
														},
														{
															"nativeSrc": "1013:21:6",
															"nodeType": "YulAssignment",
															"src": "1013:21:6",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1027:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1027:2:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1031:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1031:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1023:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1023:3:6"
																},
																"nativeSrc": "1023:11:6",
																"nodeType": "YulFunctionCall",
																"src": "1023:11:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1013:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1013:6:6"
																}
															]
														},
														{
															"nativeSrc": "1043:16:6",
															"nodeType": "YulAssignment",
															"src": "1043:16:6",
															"value": {
																"name": "length",
																"nativeSrc": "1053:6:6",
																"nodeType": "YulIdentifier",
																"src": "1053:6:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1043:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1043:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr",
												"nativeSrc": "455:610:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "518:9:6",
														"nodeType": "YulTypedName",
														"src": "518:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "529:7:6",
														"nodeType": "YulTypedName",
														"src": "529:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "541:6:6",
														"nodeType": "YulTypedName",
														"src": "541:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "549:6:6",
														"nodeType": "YulTypedName",
														"src": "549:6:6",
														"type": ""
													}
												],
												"src": "455:610:6"
											},
											{
												"body": {
													"nativeSrc": "1115:86:6",
													"nodeType": "YulBlock",
													"src": "1115:86:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1179:16:6",
																"nodeType": "YulBlock",
																"src": "1179:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1188:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1188:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1191:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1191:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1181:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1181:6:6"
																			},
																			"nativeSrc": "1181:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1181:12:6"
																		},
																		"nativeSrc": "1181:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1181:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1138:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1138:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1149:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1149:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "1164:3:6",
																										"nodeType": "YulLiteral",
																										"src": "1164:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "1169:1:6",
																										"nodeType": "YulLiteral",
																										"src": "1169:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "1160:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "1160:3:6"
																								},
																								"nativeSrc": "1160:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "1160:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1173:1:6",
																								"nodeType": "YulLiteral",
																								"src": "1173:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "1156:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "1156:3:6"
																						},
																						"nativeSrc": "1156:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "1156:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1145:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1145:3:6"
																				},
																				"nativeSrc": "1145:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1145:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1135:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1135:2:6"
																		},
																		"nativeSrc": "1135:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1135:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1128:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1128:6:6"
																},
																"nativeSrc": "1128:50:6",
																"nodeType": "YulFunctionCall",
																"src": "1128:50:6"
															},
															"nativeSrc": "1125:70:6",
															"nodeType": "YulIf",
															"src": "1125:70:6"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "1070:131:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1104:5:6",
														"nodeType": "YulTypedName",
														"src": "1104:5:6",
														"type": ""
													}
												],
												"src": "1070:131:6"
											},
											{
												"body": {
													"nativeSrc": "1276:177:6",
													"nodeType": "YulBlock",
													"src": "1276:177:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1322:16:6",
																"nodeType": "YulBlock",
																"src": "1322:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1331:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1331:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1334:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1334:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1324:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1324:6:6"
																			},
																			"nativeSrc": "1324:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1324:12:6"
																		},
																		"nativeSrc": "1324:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1324:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1297:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1297:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1306:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1306:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1293:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1293:3:6"
																		},
																		"nativeSrc": "1293:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1293:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1318:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1318:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1289:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1289:3:6"
																},
																"nativeSrc": "1289:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1289:32:6"
															},
															"nativeSrc": "1286:52:6",
															"nodeType": "YulIf",
															"src": "1286:52:6"
														},
														{
															"nativeSrc": "1347:36:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1347:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1373:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1373:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1360:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1360:12:6"
																},
																"nativeSrc": "1360:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1360:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1351:5:6",
																	"nodeType": "YulTypedName",
																	"src": "1351:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1417:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1417:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1392:24:6",
																	"nodeType": "YulIdentifier",
																	"src": "1392:24:6"
																},
																"nativeSrc": "1392:31:6",
																"nodeType": "YulFunctionCall",
																"src": "1392:31:6"
															},
															"nativeSrc": "1392:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "1392:31:6"
														},
														{
															"nativeSrc": "1432:15:6",
															"nodeType": "YulAssignment",
															"src": "1432:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "1442:5:6",
																"nodeType": "YulIdentifier",
																"src": "1442:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1432:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1432:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1206:247:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1242:9:6",
														"nodeType": "YulTypedName",
														"src": "1242:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1253:7:6",
														"nodeType": "YulTypedName",
														"src": "1253:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1265:6:6",
														"nodeType": "YulTypedName",
														"src": "1265:6:6",
														"type": ""
													}
												],
												"src": "1206:247:6"
											},
											{
												"body": {
													"nativeSrc": "1539:103:6",
													"nodeType": "YulBlock",
													"src": "1539:103:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1585:16:6",
																"nodeType": "YulBlock",
																"src": "1585:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1594:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1594:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1597:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1597:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1587:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1587:6:6"
																			},
																			"nativeSrc": "1587:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1587:12:6"
																		},
																		"nativeSrc": "1587:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1587:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1560:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1560:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1569:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1569:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1556:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1556:3:6"
																		},
																		"nativeSrc": "1556:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1556:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1581:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1581:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1552:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1552:3:6"
																},
																"nativeSrc": "1552:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1552:32:6"
															},
															"nativeSrc": "1549:52:6",
															"nodeType": "YulIf",
															"src": "1549:52:6"
														},
														{
															"nativeSrc": "1610:26:6",
															"nodeType": "YulAssignment",
															"src": "1610:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1626:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1626:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1620:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1620:5:6"
																},
																"nativeSrc": "1620:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1620:16:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1610:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1610:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "1458:184:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1505:9:6",
														"nodeType": "YulTypedName",
														"src": "1505:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1516:7:6",
														"nodeType": "YulTypedName",
														"src": "1516:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1528:6:6",
														"nodeType": "YulTypedName",
														"src": "1528:6:6",
														"type": ""
													}
												],
												"src": "1458:184:6"
											},
											{
												"body": {
													"nativeSrc": "1821:164:6",
													"nodeType": "YulBlock",
													"src": "1821:164:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1838:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1838:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1849:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1849:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1831:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1831:6:6"
																},
																"nativeSrc": "1831:21:6",
																"nodeType": "YulFunctionCall",
																"src": "1831:21:6"
															},
															"nativeSrc": "1831:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "1831:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1872:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1872:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1883:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1883:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1868:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1868:3:6"
																		},
																		"nativeSrc": "1868:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1868:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1888:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1888:2:6",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1861:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1861:6:6"
																},
																"nativeSrc": "1861:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1861:30:6"
															},
															"nativeSrc": "1861:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "1861:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1911:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1911:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1922:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1922:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1907:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1907:3:6"
																		},
																		"nativeSrc": "1907:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1907:18:6"
																	},
																	{
																		"hexValue": "4e6f204e465473206d696e746564",
																		"kind": "string",
																		"nativeSrc": "1927:16:6",
																		"nodeType": "YulLiteral",
																		"src": "1927:16:6",
																		"type": "",
																		"value": "No NFTs minted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1900:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1900:6:6"
																},
																"nativeSrc": "1900:44:6",
																"nodeType": "YulFunctionCall",
																"src": "1900:44:6"
															},
															"nativeSrc": "1900:44:6",
															"nodeType": "YulExpressionStatement",
															"src": "1900:44:6"
														},
														{
															"nativeSrc": "1953:26:6",
															"nodeType": "YulAssignment",
															"src": "1953:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1965:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1965:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1976:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1976:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1961:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1961:3:6"
																},
																"nativeSrc": "1961:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1961:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1953:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1953:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e0e1ed6cf62a03d813104220f1caef78eacd9c59e4332e709b0784b49970fba__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1647:338:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1798:9:6",
														"nodeType": "YulTypedName",
														"src": "1798:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1812:4:6",
														"nodeType": "YulTypedName",
														"src": "1812:4:6",
														"type": ""
													}
												],
												"src": "1647:338:6"
											},
											{
												"body": {
													"nativeSrc": "2164:173:6",
													"nodeType": "YulBlock",
													"src": "2164:173:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2181:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2181:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2192:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2192:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2174:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2174:6:6"
																},
																"nativeSrc": "2174:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2174:21:6"
															},
															"nativeSrc": "2174:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "2174:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2215:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2215:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2226:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2226:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2211:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2211:3:6"
																		},
																		"nativeSrc": "2211:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2211:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2231:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2231:2:6",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2204:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2204:6:6"
																},
																"nativeSrc": "2204:30:6",
																"nodeType": "YulFunctionCall",
																"src": "2204:30:6"
															},
															"nativeSrc": "2204:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "2204:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2254:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2254:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2265:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2265:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2250:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2250:3:6"
																		},
																		"nativeSrc": "2250:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2250:18:6"
																	},
																	{
																		"hexValue": "4e6f2070726f66697420746f2064697374726962757465",
																		"kind": "string",
																		"nativeSrc": "2270:25:6",
																		"nodeType": "YulLiteral",
																		"src": "2270:25:6",
																		"type": "",
																		"value": "No profit to distribute"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2243:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2243:6:6"
																},
																"nativeSrc": "2243:53:6",
																"nodeType": "YulFunctionCall",
																"src": "2243:53:6"
															},
															"nativeSrc": "2243:53:6",
															"nodeType": "YulExpressionStatement",
															"src": "2243:53:6"
														},
														{
															"nativeSrc": "2305:26:6",
															"nodeType": "YulAssignment",
															"src": "2305:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2317:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2317:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2328:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2328:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2313:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2313:3:6"
																},
																"nativeSrc": "2313:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2313:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2305:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2305:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d88608cfefd3a8e8263a1dec1a0758975c25a5566bff550c64603b30adf2eec5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1990:347:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2141:9:6",
														"nodeType": "YulTypedName",
														"src": "2141:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2155:4:6",
														"nodeType": "YulTypedName",
														"src": "2155:4:6",
														"type": ""
													}
												],
												"src": "1990:347:6"
											},
											{
												"body": {
													"nativeSrc": "2374:95:6",
													"nodeType": "YulBlock",
													"src": "2374:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2391:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2391:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2398:3:6",
																				"nodeType": "YulLiteral",
																				"src": "2398:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2403:10:6",
																				"nodeType": "YulLiteral",
																				"src": "2403:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2394:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2394:3:6"
																		},
																		"nativeSrc": "2394:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2394:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2384:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2384:6:6"
																},
																"nativeSrc": "2384:31:6",
																"nodeType": "YulFunctionCall",
																"src": "2384:31:6"
															},
															"nativeSrc": "2384:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "2384:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2431:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2431:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2434:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2434:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2424:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2424:6:6"
																},
																"nativeSrc": "2424:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2424:15:6"
															},
															"nativeSrc": "2424:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2424:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2455:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2455:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2458:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2458:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2448:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2448:6:6"
																},
																"nativeSrc": "2448:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2448:15:6"
															},
															"nativeSrc": "2448:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2448:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2342:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2342:127:6"
											},
											{
												"body": {
													"nativeSrc": "2520:171:6",
													"nodeType": "YulBlock",
													"src": "2520:171:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2551:111:6",
																"nodeType": "YulBlock",
																"src": "2551:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2572:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2572:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2579:3:6",
																							"nodeType": "YulLiteral",
																							"src": "2579:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2584:10:6",
																							"nodeType": "YulLiteral",
																							"src": "2584:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2575:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "2575:3:6"
																					},
																					"nativeSrc": "2575:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "2575:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2565:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2565:6:6"
																			},
																			"nativeSrc": "2565:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2565:31:6"
																		},
																		"nativeSrc": "2565:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2565:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2616:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2616:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2619:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2619:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2609:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2609:6:6"
																			},
																			"nativeSrc": "2609:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2609:15:6"
																		},
																		"nativeSrc": "2609:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2609:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2644:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2644:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2647:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2647:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2637:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2637:6:6"
																			},
																			"nativeSrc": "2637:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2637:15:6"
																		},
																		"nativeSrc": "2637:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2637:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "2540:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2540:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2533:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2533:6:6"
																},
																"nativeSrc": "2533:9:6",
																"nodeType": "YulFunctionCall",
																"src": "2533:9:6"
															},
															"nativeSrc": "2530:132:6",
															"nodeType": "YulIf",
															"src": "2530:132:6"
														},
														{
															"nativeSrc": "2671:14:6",
															"nodeType": "YulAssignment",
															"src": "2671:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2680:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2680:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2683:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2683:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2676:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2676:3:6"
																},
																"nativeSrc": "2676:9:6",
																"nodeType": "YulFunctionCall",
																"src": "2676:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "2671:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "2671:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "2474:217:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2505:1:6",
														"nodeType": "YulTypedName",
														"src": "2505:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2508:1:6",
														"nodeType": "YulTypedName",
														"src": "2508:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "2514:1:6",
														"nodeType": "YulTypedName",
														"src": "2514:1:6",
														"type": ""
													}
												],
												"src": "2474:217:6"
											},
											{
												"body": {
													"nativeSrc": "2797:76:6",
													"nodeType": "YulBlock",
													"src": "2797:76:6",
													"statements": [
														{
															"nativeSrc": "2807:26:6",
															"nodeType": "YulAssignment",
															"src": "2807:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2819:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2819:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2830:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2830:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2815:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2815:3:6"
																},
																"nativeSrc": "2815:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2815:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2807:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2807:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2849:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2849:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2860:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2860:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2842:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2842:6:6"
																},
																"nativeSrc": "2842:25:6",
																"nodeType": "YulFunctionCall",
																"src": "2842:25:6"
															},
															"nativeSrc": "2842:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "2842:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2696:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2766:9:6",
														"nodeType": "YulTypedName",
														"src": "2766:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2777:6:6",
														"nodeType": "YulTypedName",
														"src": "2777:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2788:4:6",
														"nodeType": "YulTypedName",
														"src": "2788:4:6",
														"type": ""
													}
												],
												"src": "2696:177:6"
											},
											{
												"body": {
													"nativeSrc": "2959:170:6",
													"nodeType": "YulBlock",
													"src": "2959:170:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3005:16:6",
																"nodeType": "YulBlock",
																"src": "3005:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3014:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3014:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3017:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3017:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3007:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3007:6:6"
																			},
																			"nativeSrc": "3007:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3007:12:6"
																		},
																		"nativeSrc": "3007:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3007:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2980:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2980:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2989:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2989:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2976:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2976:3:6"
																		},
																		"nativeSrc": "2976:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2976:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3001:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3001:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2972:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2972:3:6"
																},
																"nativeSrc": "2972:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2972:32:6"
															},
															"nativeSrc": "2969:52:6",
															"nodeType": "YulIf",
															"src": "2969:52:6"
														},
														{
															"nativeSrc": "3030:29:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3030:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3049:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3049:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3043:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3043:5:6"
																},
																"nativeSrc": "3043:16:6",
																"nodeType": "YulFunctionCall",
																"src": "3043:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3034:5:6",
																	"nodeType": "YulTypedName",
																	"src": "3034:5:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3093:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3093:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3068:24:6",
																	"nodeType": "YulIdentifier",
																	"src": "3068:24:6"
																},
																"nativeSrc": "3068:31:6",
																"nodeType": "YulFunctionCall",
																"src": "3068:31:6"
															},
															"nativeSrc": "3068:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "3068:31:6"
														},
														{
															"nativeSrc": "3108:15:6",
															"nodeType": "YulAssignment",
															"src": "3108:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "3118:5:6",
																"nodeType": "YulIdentifier",
																"src": "3118:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3108:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3108:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "2878:251:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2925:9:6",
														"nodeType": "YulTypedName",
														"src": "2925:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2936:7:6",
														"nodeType": "YulTypedName",
														"src": "2936:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2948:6:6",
														"nodeType": "YulTypedName",
														"src": "2948:6:6",
														"type": ""
													}
												],
												"src": "2878:251:6"
											},
											{
												"body": {
													"nativeSrc": "3181:88:6",
													"nodeType": "YulBlock",
													"src": "3181:88:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3212:22:6",
																"nodeType": "YulBlock",
																"src": "3212:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3214:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3214:16:6"
																			},
																			"nativeSrc": "3214:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3214:18:6"
																		},
																		"nativeSrc": "3214:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3214:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3197:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3197:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3208:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3208:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3204:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3204:3:6"
																		},
																		"nativeSrc": "3204:6:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3204:6:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3194:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3194:2:6"
																},
																"nativeSrc": "3194:17:6",
																"nodeType": "YulFunctionCall",
																"src": "3194:17:6"
															},
															"nativeSrc": "3191:43:6",
															"nodeType": "YulIf",
															"src": "3191:43:6"
														},
														{
															"nativeSrc": "3243:20:6",
															"nodeType": "YulAssignment",
															"src": "3243:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3254:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3254:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3261:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3261:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3250:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3250:3:6"
																},
																"nativeSrc": "3250:13:6",
																"nodeType": "YulFunctionCall",
																"src": "3250:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3243:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3243:3:6"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "3134:135:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3163:5:6",
														"nodeType": "YulTypedName",
														"src": "3163:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3173:3:6",
														"nodeType": "YulTypedName",
														"src": "3173:3:6",
														"type": ""
													}
												],
												"src": "3134:135:6"
											},
											{
												"body": {
													"nativeSrc": "3326:116:6",
													"nodeType": "YulBlock",
													"src": "3326:116:6",
													"statements": [
														{
															"nativeSrc": "3336:20:6",
															"nodeType": "YulAssignment",
															"src": "3336:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3351:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3351:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3354:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3354:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "3347:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3347:3:6"
																},
																"nativeSrc": "3347:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3347:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "3336:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3336:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3414:22:6",
																"nodeType": "YulBlock",
																"src": "3414:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3416:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3416:16:6"
																			},
																			"nativeSrc": "3416:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3416:18:6"
																		},
																		"nativeSrc": "3416:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3416:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "3385:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "3385:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3378:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "3378:6:6"
																				},
																				"nativeSrc": "3378:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3378:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "3392:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "3392:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "3399:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "3399:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "3408:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "3408:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "3395:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "3395:3:6"
																						},
																						"nativeSrc": "3395:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "3395:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "3389:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "3389:2:6"
																				},
																				"nativeSrc": "3389:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "3375:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3375:2:6"
																		},
																		"nativeSrc": "3375:37:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3375:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3368:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3368:6:6"
																},
																"nativeSrc": "3368:45:6",
																"nodeType": "YulFunctionCall",
																"src": "3368:45:6"
															},
															"nativeSrc": "3365:71:6",
															"nodeType": "YulIf",
															"src": "3365:71:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "3274:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3305:1:6",
														"nodeType": "YulTypedName",
														"src": "3305:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3308:1:6",
														"nodeType": "YulTypedName",
														"src": "3308:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "3314:7:6",
														"nodeType": "YulTypedName",
														"src": "3314:7:6",
														"type": ""
													}
												],
												"src": "3274:168:6"
											},
											{
												"body": {
													"nativeSrc": "3496:79:6",
													"nodeType": "YulBlock",
													"src": "3496:79:6",
													"statements": [
														{
															"nativeSrc": "3506:17:6",
															"nodeType": "YulAssignment",
															"src": "3506:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3518:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3518:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3521:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3521:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "3514:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3514:3:6"
																},
																"nativeSrc": "3514:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3514:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "3506:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3506:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3547:22:6",
																"nodeType": "YulBlock",
																"src": "3547:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3549:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3549:16:6"
																			},
																			"nativeSrc": "3549:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3549:18:6"
																		},
																		"nativeSrc": "3549:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3549:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "3538:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3538:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "3544:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3544:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3535:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3535:2:6"
																},
																"nativeSrc": "3535:11:6",
																"nodeType": "YulFunctionCall",
																"src": "3535:11:6"
															},
															"nativeSrc": "3532:37:6",
															"nodeType": "YulIf",
															"src": "3532:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "3447:128:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3478:1:6",
														"nodeType": "YulTypedName",
														"src": "3478:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3481:1:6",
														"nodeType": "YulTypedName",
														"src": "3481:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "3487:4:6",
														"nodeType": "YulTypedName",
														"src": "3487:4:6",
														"type": ""
													}
												],
												"src": "3447:128:6"
											},
											{
												"body": {
													"nativeSrc": "3737:162:6",
													"nodeType": "YulBlock",
													"src": "3737:162:6",
													"statements": [
														{
															"nativeSrc": "3747:26:6",
															"nodeType": "YulAssignment",
															"src": "3747:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3759:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3759:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3770:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3770:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3755:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3755:3:6"
																},
																"nativeSrc": "3755:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3755:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3747:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3789:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3789:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3800:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3800:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3782:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3782:6:6"
																},
																"nativeSrc": "3782:25:6",
																"nodeType": "YulFunctionCall",
																"src": "3782:25:6"
															},
															"nativeSrc": "3782:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "3782:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3827:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3827:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3838:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3838:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3823:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3823:3:6"
																		},
																		"nativeSrc": "3823:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3823:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "3843:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3843:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3816:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3816:6:6"
																},
																"nativeSrc": "3816:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3816:34:6"
															},
															"nativeSrc": "3816:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3816:34:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3870:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3870:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3881:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3881:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3866:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3866:3:6"
																		},
																		"nativeSrc": "3866:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3866:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "3886:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3886:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3859:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3859:6:6"
																},
																"nativeSrc": "3859:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3859:34:6"
															},
															"nativeSrc": "3859:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3859:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3580:319:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3690:9:6",
														"nodeType": "YulTypedName",
														"src": "3690:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3701:6:6",
														"nodeType": "YulTypedName",
														"src": "3701:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3709:6:6",
														"nodeType": "YulTypedName",
														"src": "3709:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3717:6:6",
														"nodeType": "YulTypedName",
														"src": "3717:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3728:4:6",
														"nodeType": "YulTypedName",
														"src": "3728:4:6",
														"type": ""
													}
												],
												"src": "3580:319:6"
											},
											{
												"body": {
													"nativeSrc": "4078:169:6",
													"nodeType": "YulBlock",
													"src": "4078:169:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4095:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4095:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4106:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4106:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4088:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4088:6:6"
																},
																"nativeSrc": "4088:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4088:21:6"
															},
															"nativeSrc": "4088:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4088:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4129:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4129:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4140:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4140:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4125:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4125:3:6"
																		},
																		"nativeSrc": "4125:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4125:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4145:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4145:2:6",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4118:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4118:6:6"
																},
																"nativeSrc": "4118:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4118:30:6"
															},
															"nativeSrc": "4118:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4118:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4168:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4168:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4179:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4179:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4164:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4164:3:6"
																		},
																		"nativeSrc": "4164:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4164:18:6"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e7320737065636966696564",
																		"kind": "string",
																		"nativeSrc": "4184:21:6",
																		"nodeType": "YulLiteral",
																		"src": "4184:21:6",
																		"type": "",
																		"value": "No tokens specified"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4157:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4157:6:6"
																},
																"nativeSrc": "4157:49:6",
																"nodeType": "YulFunctionCall",
																"src": "4157:49:6"
															},
															"nativeSrc": "4157:49:6",
															"nodeType": "YulExpressionStatement",
															"src": "4157:49:6"
														},
														{
															"nativeSrc": "4215:26:6",
															"nodeType": "YulAssignment",
															"src": "4215:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4227:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4227:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4238:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4238:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4223:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4223:3:6"
																},
																"nativeSrc": "4223:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4223:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4215:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4215:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_30518725a48d5c49b7d45dba393c4ac05a7db5cc238fc8c0a150357d1b12376f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3904:343:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4055:9:6",
														"nodeType": "YulTypedName",
														"src": "4055:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4069:4:6",
														"nodeType": "YulTypedName",
														"src": "4069:4:6",
														"type": ""
													}
												],
												"src": "3904:343:6"
											},
											{
												"body": {
													"nativeSrc": "4284:95:6",
													"nodeType": "YulBlock",
													"src": "4284:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4301:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4301:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4308:3:6",
																				"nodeType": "YulLiteral",
																				"src": "4308:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4313:10:6",
																				"nodeType": "YulLiteral",
																				"src": "4313:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "4304:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4304:3:6"
																		},
																		"nativeSrc": "4304:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4304:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4294:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4294:6:6"
																},
																"nativeSrc": "4294:31:6",
																"nodeType": "YulFunctionCall",
																"src": "4294:31:6"
															},
															"nativeSrc": "4294:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "4294:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4341:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4341:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4344:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4344:4:6",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4334:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4334:6:6"
																},
																"nativeSrc": "4334:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4334:15:6"
															},
															"nativeSrc": "4334:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4334:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4365:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4365:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4368:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4368:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4358:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4358:6:6"
																},
																"nativeSrc": "4358:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4358:15:6"
															},
															"nativeSrc": "4358:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "4358:15:6"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "4252:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "4252:127:6"
											},
											{
												"body": {
													"nativeSrc": "4513:119:6",
													"nodeType": "YulBlock",
													"src": "4513:119:6",
													"statements": [
														{
															"nativeSrc": "4523:26:6",
															"nodeType": "YulAssignment",
															"src": "4523:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4535:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4535:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4546:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4546:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4531:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4531:3:6"
																},
																"nativeSrc": "4531:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4531:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4523:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4523:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4565:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4565:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4576:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4576:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4558:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4558:6:6"
																},
																"nativeSrc": "4558:25:6",
																"nodeType": "YulFunctionCall",
																"src": "4558:25:6"
															},
															"nativeSrc": "4558:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "4558:25:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4603:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4603:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4614:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4614:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4599:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4599:3:6"
																		},
																		"nativeSrc": "4599:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4599:18:6"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4619:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4619:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4592:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4592:6:6"
																},
																"nativeSrc": "4592:34:6",
																"nodeType": "YulFunctionCall",
																"src": "4592:34:6"
															},
															"nativeSrc": "4592:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "4592:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4384:248:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4474:9:6",
														"nodeType": "YulTypedName",
														"src": "4474:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4485:6:6",
														"nodeType": "YulTypedName",
														"src": "4485:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4493:6:6",
														"nodeType": "YulTypedName",
														"src": "4493:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4504:4:6",
														"nodeType": "YulTypedName",
														"src": "4504:4:6",
														"type": ""
													}
												],
												"src": "4384:248:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC721Enumerable_$296__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_1, 32)\n        value1 := length\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8e0e1ed6cf62a03d813104220f1caef78eacd9c59e4332e709b0784b49970fba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"No NFTs minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d88608cfefd3a8e8263a1dec1a0758975c25a5566bff550c64603b30adf2eec5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"No profit to distribute\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_30518725a48d5c49b7d45dba393c4ac05a7db5cc238fc8c0a150357d1b12376f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"No tokens specified\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100595760003560e01c8063715018a6146100655780638a160b541461007c5780638da5cb5b14610084578063d56d229d146100b4578063e4463b51146100d4578063f2fde38b146100e757600080fd5b3661006057005b600080fd5b34801561007157600080fd5b5061007a610107565b005b61007a61011b565b34801561009057600080fd5b506000546001600160a01b03165b6040516100ab9190610617565b60405180910390f35b3480156100c057600080fd5b5060015461009e906001600160a01b031681565b61007a6100e236600461062b565b61036d565b3480156100f357600080fd5b5061007a6101023660046106b7565b61055c565b61010f61059a565b61011960006105c7565b565b61012361059a565b600154604080516318160ddd60e01b815290516000926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801561016d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019191906106db565b9050600081116101d95760405162461bcd60e51b815260206004820152600e60248201526d139bc81391951cc81b5a5b9d195960921b60448201526064015b60405180910390fd5b600034116101f95760405162461bcd60e51b81526004016101d0906106f4565b6000610205823461073b565b905060015b8281116102cd576001546040516331a9108f60e11b8152600481018390526000916001600160a01b031690636352211e90602401602060405180830381865afa15801561025b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027f919061075d565b6040519091506001600160a01b0382169084156108fc029085906000818181858888f193505050501580156102b8573d6000803e3d6000fd5b505080806102c59061077a565b91505061020a565b5060006102da8383610793565b6102e490346107b0565b9050801561032757600080546040516001600160a01b039091169183156108fc02918491818181858888f19350505050158015610325573d6000803e3d6000fd5b505b60408051348152602081018590529081018390527f35a0431ae8ac3e583720a9e25576a99b5b4bb2cb375a867047eef1e6ea81b26f9060600160405180910390a1505050565b61037561059a565b806103b85760405162461bcd60e51b8152602060048201526013602482015272139bc81d1bdad95b9cc81cdc1958da599a5959606a1b60448201526064016101d0565b600034116103d85760405162461bcd60e51b81526004016101d0906106f4565b60006103e4823461073b565b905060005b828110156104c0576001546000906001600160a01b0316636352211e868685818110610417576104176107c3565b905060200201356040518263ffffffff1660e01b815260040161043c91815260200190565b602060405180830381865afa158015610459573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047d919061075d565b6040519091506001600160a01b0382169084156108fc029085906000818181858888f193505050501580156104b6573d6000803e3d6000fd5b50506001016103e9565b5060006104cd8383610793565b6104d790346107b0565b9050801561051a57600080546040516001600160a01b039091169183156108fc02918491818181858888f19350505050158015610518573d6000803e3d6000fd5b505b60408051348152602081018590526000917f81a67a0f9c17e8dc23a9b3f3f9f336df13207de6b0972356a4a4bbbd48b04437910160405180910390a250505050565b61056461059a565b6001600160a01b03811661058e576000604051631e4fbdf760e01b81526004016101d09190610617565b610597816105c7565b50565b6000546001600160a01b03163314610119573360405163118cdaa760e01b81526004016101d09190610617565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0391909116815260200190565b6000806020838503121561063e57600080fd5b823567ffffffffffffffff81111561065557600080fd5b8301601f8101851361066657600080fd5b803567ffffffffffffffff81111561067d57600080fd5b8560208260051b840101111561069257600080fd5b6020919091019590945092505050565b6001600160a01b038116811461059757600080fd5b6000602082840312156106c957600080fd5b81356106d4816106a2565b9392505050565b6000602082840312156106ed57600080fd5b5051919050565b6020808252601790820152764e6f2070726f66697420746f206469737472696275746560481b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008261075857634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561076f57600080fd5b81516106d4816106a2565b60006001820161078c5761078c610725565b5060010190565b80820281158282048414176107aa576107aa610725565b92915050565b818103818111156107aa576107aa610725565b634e487b7160e01b600052603260045260246000fdfea264697066735822122072467a6c11c7e57eaf3806b4c199f8f903852ee2a11aaab0c2d5ea8991d248ce64736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x59 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x65 JUMPI DUP1 PUSH4 0x8A160B54 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xD56D229D EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xE4463B51 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x60 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A PUSH2 0x107 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7A PUSH2 0x11B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x9E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x7A PUSH2 0xE2 CALLDATASIZE PUSH1 0x4 PUSH2 0x62B JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A PUSH2 0x102 CALLDATASIZE PUSH1 0x4 PUSH2 0x6B7 JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST PUSH2 0x10F PUSH2 0x59A JUMP JUMPDEST PUSH2 0x119 PUSH1 0x0 PUSH2 0x5C7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x123 PUSH2 0x59A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x18160DDD PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x18160DDD SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x16D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x191 SWAP2 SWAP1 PUSH2 0x6DB JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x1D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BC81391951CC81B5A5B9D1959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x1F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D0 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205 DUP3 CALLVALUE PUSH2 0x73B JUMP JUMPDEST SWAP1 POP PUSH1 0x1 JUMPDEST DUP3 DUP2 GT PUSH2 0x2CD JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x2B8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP DUP1 DUP1 PUSH2 0x2C5 SWAP1 PUSH2 0x77A JUMP JUMPDEST SWAP2 POP POP PUSH2 0x20A JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x2DA DUP4 DUP4 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x2E4 SWAP1 CALLVALUE PUSH2 0x7B0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x327 JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x325 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLVALUE DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x35A0431AE8AC3E583720A9E25576A99B5B4BB2CB375A867047EEF1E6EA81B26F SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x375 PUSH2 0x59A JUMP JUMPDEST DUP1 PUSH2 0x3B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x139BC81D1BDAD95B9CC81CDC1958DA599A5959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x3D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D0 SWAP1 PUSH2 0x6F4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3E4 DUP3 CALLVALUE PUSH2 0x73B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4C0 JUMPI PUSH1 0x1 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6352211E DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x417 JUMPI PUSH2 0x417 PUSH2 0x7C3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x459 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x47D SWAP2 SWAP1 PUSH2 0x75D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 DUP5 ISZERO PUSH2 0x8FC MUL SWAP1 DUP6 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x4B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 ADD PUSH2 0x3E9 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x4CD DUP4 DUP4 PUSH2 0x793 JUMP JUMPDEST PUSH2 0x4D7 SWAP1 CALLVALUE PUSH2 0x7B0 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x51A JUMPI PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x518 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLVALUE DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP2 PUSH32 0x81A67A0F9C17E8DC23A9B3F3F9F336DF13207DE6B0972356A4A4BBBD48B04437 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x564 PUSH2 0x59A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x58E JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x617 JUMP JUMPDEST PUSH2 0x597 DUP2 PUSH2 0x5C7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x119 JUMPI CALLER PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x63E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x666 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x67D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP5 ADD ADD GT ISZERO PUSH2 0x692 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP2 SWAP1 SWAP2 ADD SWAP6 SWAP1 SWAP5 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x597 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x6D4 DUP2 PUSH2 0x6A2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH23 0x4E6F2070726F66697420746F2064697374726962757465 PUSH1 0x48 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x758 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x76F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x6D4 DUP2 PUSH2 0x6A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x78C JUMPI PUSH2 0x78C PUSH2 0x725 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x7AA JUMPI PUSH2 0x7AA PUSH2 0x725 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x7AA JUMPI PUSH2 0x7AA PUSH2 0x725 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH19 0x467A6C11C7E57EAF3806B4C199F8F903852EE2 LOG1 BYTE 0xAA 0xB0 0xC2 0xD5 0xEA DUP10 SWAP2 0xD2 BASEFEE 0xCE PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "191:2306:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;702:801:5;;;:::i;1638:85:0:-;;;;;;;;;;-1:-1:-1;1684:7:0;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;;;;;;:::i;:::-;;;;;;;;236:36:5;;;;;;;;;;-1:-1:-1;236:36:5;;;;-1:-1:-1;;;;;236:36:5;;;1624:799;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;;;;;-1:-1:-1;2543:215:0;;;;;:::i;:::-;;:::i;2293:101::-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;702:801:5:-;1531:13:0;:11;:13::i;:::-;787:11:5::1;::::0;:25:::1;::::0;;-1:-1:-1;;;787:25:5;;;;767:17:::1;::::0;-1:-1:-1;;;;;787:11:5::1;::::0;:23:::1;::::0;:25:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;:11;:25:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;767:45;;842:1;830:9;:13;822:40;;;::::0;-1:-1:-1;;;822:40:5;;1849:2:6;822:40:5::1;::::0;::::1;1831:21:6::0;1888:2;1868:18;;;1861:30;-1:-1:-1;;;1907:18:6;;;1900:44;1961:18;;822:40:5::1;;;;;;;;;892:1;880:9;:13;872:49;;;;-1:-1:-1::0;;;872:49:5::1;;;;;;;:::i;:::-;940:20;963:21;975:9:::0;963::::1;:21;:::i;:::-;940:44:::0;-1:-1:-1;1061:1:5::1;1044:155;1069:9;1064:1;:14;1044:155;;1115:11;::::0;:22:::1;::::0;-1:-1:-1;;;1115:22:5;;::::1;::::0;::::1;2842:25:6::0;;;1099:13:5::1;::::0;-1:-1:-1;;;;;1115:11:5::1;::::0;:19:::1;::::0;2815:18:6;;1115:22:5::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1151:37;::::0;1099:38;;-1:-1:-1;;;;;;1151:23:5;::::1;::::0;:37;::::1;;;::::0;1175:12;;1151:37:::1;::::0;;;1175:12;1151:23;:37;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;1085:114;1080:3;;;;;:::i;:::-;;;;1044:155;;;-1:-1:-1::0;1272:17:5::1;1305:24;1320:9:::0;1305:12;:24:::1;:::i;:::-;1292:38;::::0;:9:::1;:38;:::i;:::-;1272:58:::0;-1:-1:-1;1344:13:5;;1340:80:::1;;1684:7:0::0;1710:6;;1373:36:5::1;::::0;-1:-1:-1;;;;;1710:6:0;;;;1373:36:5;::::1;;;::::0;1399:9;;1373:36;1684:7:0;1373:36:5;1399:9;1710:6:0;1373:36:5;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;1340:80;1443:53;::::0;;1461:9:::1;3782:25:6::0;;3838:2;3823:18;;3816:34;;;3866:18;;;3859:34;;;1443:53:5::1;::::0;3770:2:6;3755:18;1443:53:5::1;;;;;;;757:746;;;702:801::o:0;1624:799::-;1531:13:0;:11;:13::i;:::-;1729:19:5;1721:51:::1;;;::::0;-1:-1:-1;;;1721:51:5;;4106:2:6;1721:51:5::1;::::0;::::1;4088:21:6::0;4145:2;4125:18;;;4118:30;-1:-1:-1;;;4164:18:6;;;4157:49;4223:18;;1721:51:5::1;3904:343:6::0;1721:51:5::1;1802:1;1790:9;:13;1782:49;;;;-1:-1:-1::0;;;1782:49:5::1;;;;;;;:::i;:::-;1850:20;1873:27;1885:8:::0;1873:9:::1;:27;:::i;:::-;1850:50;;1966:9;1961:170;1981:19:::0;;::::1;1961:170;;;2037:11;::::0;2021:13:::1;::::0;-1:-1:-1;;;;;2037:11:5::1;:19;2057:8:::0;;2066:1;2057:11;;::::1;;;;;:::i;:::-;;;;;;;2037:32;;;;;;;;;;;;;2842:25:6::0;;2830:2;2815:18;;2696:177;2037:32:5::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2083:37;::::0;2021:48;;-1:-1:-1;;;;;;2083:23:5;::::1;::::0;:37;::::1;;;::::0;2107:12;;2083:37:::1;::::0;;;2107:12;2083:23;:37;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2002:3:5::1;;1961:170;;;-1:-1:-1::0;2186:17:5::1;2219:30;2234:8:::0;2219:12;:30:::1;:::i;:::-;2206:44;::::0;:9:::1;:44;:::i;:::-;2186:64:::0;-1:-1:-1;2264:13:5;;2260:80:::1;;1684:7:0::0;1710:6;;2293:36:5::1;::::0;-1:-1:-1;;;;;1710:6:0;;;;2293:36:5;::::1;;;::::0;2319:9;;2293:36;1684:7:0;2293:36:5;2319:9;1710:6:0;2293:36:5;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;2260:80;2363:53;::::0;;2389:9:::1;4558:25:6::0;;4614:2;4599:18;;4592:34;;;2386:1:5::1;::::0;2363:53:::1;::::0;4531:18:6;2363:53:5::1;;;;;;;1711:712;;1624:799:::0;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2700:1;2672:31;;-1:-1:-1::0;;;2672:31:0::1;;;;;;;;:::i;2623:91::-;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:3;1855:23:0;1851:101;;735:10:3;1901:40:0;;-1:-1:-1;;;1901:40:0;;;;;;;;:::i;2912:187::-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:203:6:-;-1:-1:-1;;;;;178:32:6;;;;160:51;;148:2;133:18;;14:203::o;455:610::-;541:6;549;602:2;590:9;581:7;577:23;573:32;570:52;;;618:1;615;608:12;570:52;658:9;645:23;691:18;683:6;680:30;677:50;;;723:1;720;713:12;677:50;746:22;;799:4;791:13;;787:27;-1:-1:-1;777:55:6;;828:1;825;818:12;777:55;868:2;855:16;894:18;886:6;883:30;880:50;;;926:1;923;916:12;880:50;979:7;974:2;964:6;961:1;957:14;953:2;949:23;945:32;942:45;939:65;;;1000:1;997;990:12;939:65;1031:2;1023:11;;;;;1053:6;;-1:-1:-1;455:610:6;-1:-1:-1;;;455:610:6:o;1070:131::-;-1:-1:-1;;;;;1145:31:6;;1135:42;;1125:70;;1191:1;1188;1181:12;1206:247;1265:6;1318:2;1306:9;1297:7;1293:23;1289:32;1286:52;;;1334:1;1331;1324:12;1286:52;1373:9;1360:23;1392:31;1417:5;1392:31;:::i;:::-;1442:5;1206:247;-1:-1:-1;;;1206:247:6:o;1458:184::-;1528:6;1581:2;1569:9;1560:7;1556:23;1552:32;1549:52;;;1597:1;1594;1587:12;1549:52;-1:-1:-1;1620:16:6;;1458:184;-1:-1:-1;1458:184:6:o;1990:347::-;2192:2;2174:21;;;2231:2;2211:18;;;2204:30;-1:-1:-1;;;2265:2:6;2250:18;;2243:53;2328:2;2313:18;;1990:347::o;2342:127::-;2403:10;2398:3;2394:20;2391:1;2384:31;2434:4;2431:1;2424:15;2458:4;2455:1;2448:15;2474:217;2514:1;2540;2530:132;;2584:10;2579:3;2575:20;2572:1;2565:31;2619:4;2616:1;2609:15;2647:4;2644:1;2637:15;2530:132;-1:-1:-1;2676:9:6;;2474:217::o;2878:251::-;2948:6;3001:2;2989:9;2980:7;2976:23;2972:32;2969:52;;;3017:1;3014;3007:12;2969:52;3049:9;3043:16;3068:31;3093:5;3068:31;:::i;3134:135::-;3173:3;3194:17;;;3191:43;;3214:18;;:::i;:::-;-1:-1:-1;3261:1:6;3250:13;;3134:135::o;3274:168::-;3347:9;;;3378;;3395:15;;;3389:22;;3375:37;3365:71;;3416:18;;:::i;:::-;3274:168;;;;:::o;3447:128::-;3514:9;;;3535:11;;;3532:37;;;3549:18;;:::i;4252:127::-;4313:10;4308:3;4304:20;4301:1;4294:31;4344:4;4341:1;4334:15;4368:4;4365:1;4358:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "412600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"distributeAssetProfit(uint256[])": "infinite",
								"distributeProfit()": "infinite",
								"nftContract()": "2405",
								"owner()": "2366",
								"renounceOwnership()": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 191,
									"end": 2497,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 191,
									"end": 2497,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 191,
									"end": 2497,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 636,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 636,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 636,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 482,
									"end": 636,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "CODESIZE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "PUSHSIZE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 482,
									"end": 636,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 482,
									"end": 636,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 482,
									"end": 636,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 482,
									"end": 636,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 482,
									"end": 636,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 553,
									"end": 565,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1E4FBDF7"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 640,
									"end": 691,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 613,
									"end": 631,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 613,
									"end": 631,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 577,
									"end": 588,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 577,
									"end": 629,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 577,
									"end": 629,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 577,
									"end": 629,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 577,
									"end": 629,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 577,
									"end": 629,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 577,
									"end": 629,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 577,
									"end": 629,
									"modifierDepth": 1,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 577,
									"end": 629,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 577,
									"end": 629,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 577,
									"end": 629,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 577,
									"end": 629,
									"modifierDepth": 1,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 577,
									"end": 629,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 577,
									"end": 629,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 191,
									"end": 2497,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 191,
									"end": 2497,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 275,
									"end": 281,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 289,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 336,
									"end": 338,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 333,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 315,
									"end": 322,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 311,
									"end": 334,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 307,
									"end": 339,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 304,
									"end": 356,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 304,
									"end": 356,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 352,
									"end": 353,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 349,
									"end": 350,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 342,
									"end": 354,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 304,
									"end": 356,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 304,
									"end": 356,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 405,
									"end": 414,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 375,
									"end": 415,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 375,
									"end": 415,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 375,
									"end": 415,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 375,
									"end": 415,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 365,
									"end": 415,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 365,
									"end": 415,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 479,
									"end": 481,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 468,
									"end": 477,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 464,
									"end": 482,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 434,
									"end": 483,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 434,
									"end": 483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 434,
									"end": 483,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 434,
									"end": 483,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 424,
									"end": 483,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 424,
									"end": 483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 494,
									"end": 697,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 494,
									"end": 697,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 191,
									"end": 2497,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 191,
									"end": 2497,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 191,
									"end": 2497,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 191,
									"end": 2497,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 191,
									"end": 2497,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 191,
									"end": 2497,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 191,
									"end": 2497,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122072467a6c11c7e57eaf3806b4c199f8f903852ee2a11aaab0c2d5ea8991d248ce64736f6c634300081d0033",
									".code": [
										{
											"begin": 191,
											"end": 2497,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "PUSH",
											"source": 5,
											"value": "715018A6"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "PUSH",
											"source": 5,
											"value": "8A160B54"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "PUSH",
											"source": 5,
											"value": "8DA5CB5B"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "PUSH",
											"source": 5,
											"value": "D56D229D"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "PUSH",
											"source": 5,
											"value": "E4463B51"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "PUSH",
											"source": 5,
											"value": "F2FDE38B"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "STOP",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 191,
											"end": 2497,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 1503,
											"name": "tag",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 702,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 702,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 702,
											"end": 1503,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 702,
											"end": 1503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 236,
											"end": 272,
											"name": "tag",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 236,
											"end": 272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 236,
											"end": 272,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 236,
											"end": 272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 236,
											"end": 272,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 236,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 236,
											"end": 272,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 236,
											"end": 272,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 272,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 236,
											"end": 272,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 236,
											"end": 272,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 236,
											"end": 272,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 236,
											"end": 272,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 236,
											"end": 272,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 236,
											"end": 272,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 236,
											"end": 272,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 236,
											"end": 272,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 236,
											"end": 272,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 236,
											"end": 272,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 2423,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1624,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 1624,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1624,
											"end": 2423,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 2423,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1624,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 1624,
											"end": 2423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 2423,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 1624,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 2423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1624,
											"end": 2423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 1503,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 702,
											"end": 1503,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 787,
											"end": 798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 787,
											"end": 798,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 812,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "18160DDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 787,
											"end": 812,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 767,
											"end": 784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 784,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 787,
											"end": 798,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 787,
											"end": 798,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 787,
											"end": 810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "18160DDD"
										},
										{
											"begin": 787,
											"end": 810,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 787,
											"end": 812,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 787,
											"end": 812,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 787,
											"end": 798,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 812,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 787,
											"end": 812,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 787,
											"end": 812,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 767,
											"end": 812,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 767,
											"end": 812,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 842,
											"end": 843,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 830,
											"end": 839,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 830,
											"end": 843,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 822,
											"end": 862,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 822,
											"end": 862,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 822,
											"end": 862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 862,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 822,
											"end": 862,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 822,
											"end": 862,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1849,
											"end": 1851,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 822,
											"end": 862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 822,
											"end": 862,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 822,
											"end": 862,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1831,
											"end": 1852,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1888,
											"end": 1890,
											"name": "PUSH",
											"source": 6,
											"value": "E"
										},
										{
											"begin": 1868,
											"end": 1886,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1868,
											"end": 1886,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1868,
											"end": 1886,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1891,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81391951CC81B5A5B9D1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1907,
											"end": 1925,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1900,
											"end": 1944,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 1961,
											"end": 1979,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 822,
											"end": 862,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 822,
											"end": 862,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 822,
											"end": 862,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 822,
											"end": 862,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 822,
											"end": 862,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 822,
											"end": 862,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 822,
											"end": 862,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 822,
											"end": 862,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 822,
											"end": 862,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 822,
											"end": 862,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 822,
											"end": 862,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 892,
											"end": 893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 889,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 880,
											"end": 893,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 872,
											"end": 921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 872,
											"end": 921,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 872,
											"end": 921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 872,
											"end": 921,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 872,
											"end": 921,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 872,
											"end": 921,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 872,
											"end": 921,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 872,
											"end": 921,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 872,
											"end": 921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 872,
											"end": 921,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 872,
											"end": 921,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 872,
											"end": 921,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 872,
											"end": 921,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 872,
											"end": 921,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 940,
											"end": 960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 963,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 975,
											"end": 984,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 963,
											"end": 972,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 963,
											"end": 984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 963,
											"end": 984,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 963,
											"end": 984,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 963,
											"end": 984,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 940,
											"end": 984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1061,
											"end": 1062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1044,
											"end": 1199,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1044,
											"end": 1199,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1069,
											"end": 1078,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1065,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1064,
											"end": 1078,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1199,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1044,
											"end": 1199,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1115,
											"end": 1126,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2842,
											"end": 2867,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2867,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2867,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1099,
											"end": 1112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1112,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1115,
											"end": 1126,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1126,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "6352211E"
										},
										{
											"begin": 1115,
											"end": 1134,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2815,
											"end": 2833,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2815,
											"end": 2833,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1115,
											"end": 1137,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1115,
											"end": 1137,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1115,
											"end": 1137,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1151,
											"end": 1188,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1137,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1099,
											"end": 1137,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1151,
											"end": 1174,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1174,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1175,
											"end": 1187,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1175,
											"end": 1187,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1188,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1175,
											"end": 1187,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1174,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1188,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1151,
											"end": 1188,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1199,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1083,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1083,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1080,
											"end": 1083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1080,
											"end": 1083,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1083,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1080,
											"end": 1083,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1083,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1083,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1080,
											"end": 1083,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1199,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 1044,
											"end": 1199,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1044,
											"end": 1199,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 1044,
											"end": 1199,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1272,
											"end": 1289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1320,
											"end": 1329,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1305,
											"end": 1317,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1305,
											"end": 1329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1305,
											"end": 1329,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1305,
											"end": 1329,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1305,
											"end": 1329,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1292,
											"end": 1330,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1292,
											"end": 1330,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1292,
											"end": 1301,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1292,
											"end": 1330,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1292,
											"end": 1330,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1292,
											"end": 1330,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1292,
											"end": 1330,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1272,
											"end": 1330,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1344,
											"end": 1357,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1344,
											"end": 1357,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1420,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1340,
											"end": 1420,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1373,
											"end": 1409,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1409,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1409,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1408,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1408,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1409,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1409,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1399,
											"end": 1408,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 1373,
											"end": 1409,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1409,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1373,
											"end": 1409,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1340,
											"end": 1420,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1340,
											"end": 1420,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1443,
											"end": 1496,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1496,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1461,
											"end": 1470,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 3782,
											"end": 3807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3782,
											"end": 3807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3838,
											"end": 3840,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3823,
											"end": 3841,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3841,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3850,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3850,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3816,
											"end": 3850,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3866,
											"end": 3884,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3859,
											"end": 3893,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3859,
											"end": 3893,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3859,
											"end": 3893,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1443,
											"end": 1496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "35A0431AE8AC3E583720A9E25576A99B5B4BB2CB375A867047EEF1E6EA81B26F"
										},
										{
											"begin": 1443,
											"end": 1496,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3770,
											"end": 3772,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3755,
											"end": 3773,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1443,
											"end": 1496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1443,
											"end": 1496,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1496,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1496,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1496,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1496,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1496,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 757,
											"end": 1503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 757,
											"end": 1503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 757,
											"end": 1503,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 702,
											"end": 1503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 2423,
											"name": "tag",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 1624,
											"end": 2423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1721,
											"end": 1772,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1721,
											"end": 1772,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1721,
											"end": 1772,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1772,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4106,
											"end": 4108,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1721,
											"end": 1772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1721,
											"end": 1772,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1721,
											"end": 1772,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4088,
											"end": 4109,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4145,
											"end": 4147,
											"name": "PUSH",
											"source": 6,
											"value": "13"
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4125,
											"end": 4143,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4118,
											"end": 4148,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81D1BDAD95B9CC81CDC1958DA599A5959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4164,
											"end": 4182,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4164,
											"end": 4182,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4164,
											"end": 4182,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4157,
											"end": 4206,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4223,
											"end": 4241,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4223,
											"end": 4241,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1721,
											"end": 1772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 3904,
											"end": 4247,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1721,
											"end": 1772,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1721,
											"end": 1772,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1802,
											"end": 1803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1799,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1790,
											"end": 1803,
											"modifierDepth": 1,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1782,
											"end": 1831,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1782,
											"end": 1831,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1782,
											"end": 1831,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1831,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1831,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1782,
											"end": 1831,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 1782,
											"end": 1831,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1831,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1782,
											"end": 1831,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1782,
											"end": 1831,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1782,
											"end": 1831,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1870,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1885,
											"end": 1893,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1873,
											"end": 1882,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 1873,
											"end": 1900,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 1873,
											"end": 1900,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1873,
											"end": 1900,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1873,
											"end": 1900,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1900,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1850,
											"end": 1900,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1966,
											"end": 1975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1961,
											"end": 2131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1961,
											"end": 2131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2000,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2000,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1981,
											"end": 2000,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1961,
											"end": 2131,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1961,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1961,
											"end": 2131,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2048,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2037,
											"end": 2048,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2021,
											"end": 2034,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2037,
											"end": 2048,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2056,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "6352211E"
										},
										{
											"begin": 2057,
											"end": 2065,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2065,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2066,
											"end": 2067,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2068,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2068,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2068,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2057,
											"end": 2068,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2057,
											"end": 2068,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2057,
											"end": 2068,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2068,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2057,
											"end": 2068,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2068,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2068,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2057,
											"end": 2068,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2068,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2057,
											"end": 2068,
											"modifierDepth": 1,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2842,
											"end": 2867,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2842,
											"end": 2867,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2830,
											"end": 2832,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2815,
											"end": 2833,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2815,
											"end": 2833,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2696,
											"end": 2873,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2037,
											"end": 2069,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2037,
											"end": 2069,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2037,
											"end": 2069,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2083,
											"end": 2120,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2069,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2021,
											"end": 2069,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2083,
											"end": 2106,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2106,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2106,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2107,
											"end": 2119,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2107,
											"end": 2119,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2107,
											"end": 2119,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2106,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2120,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2083,
											"end": 2120,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2002,
											"end": 2005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2002,
											"end": 2005,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1961,
											"end": 2131,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1961,
											"end": 2131,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1961,
											"end": 2131,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 1961,
											"end": 2131,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2186,
											"end": 2203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2219,
											"end": 2249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2234,
											"end": 2242,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2231,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2219,
											"end": 2249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2219,
											"end": 2249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2219,
											"end": 2249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2206,
											"end": 2250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2215,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 2206,
											"end": 2250,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2250,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2206,
											"end": 2250,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2250,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2264,
											"end": 2277,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2264,
											"end": 2277,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2260,
											"end": 2340,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "8FC"
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2328,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2328,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2319,
											"end": 2328,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2329,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2293,
											"end": 2329,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2260,
											"end": 2340,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2260,
											"end": 2340,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2389,
											"end": 2398,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 4558,
											"end": 4583,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4558,
											"end": 4583,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4614,
											"end": 4616,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4599,
											"end": 4617,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4626,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4592,
											"end": 4626,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2386,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2386,
											"end": 2387,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "81A67A0F9C17E8DC23A9B3F3F9F336DF13207DE6B0972356A4A4BBBD48B04437"
										},
										{
											"begin": 2363,
											"end": 2416,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4531,
											"end": 4549,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2363,
											"end": 2416,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2363,
											"end": 2416,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2416,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2416,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2416,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2416,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2363,
											"end": 2416,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 5
										},
										{
											"begin": 1711,
											"end": 2423,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1711,
											"end": 2423,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 2423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 2423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1624,
											"end": 2423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E4FBDF7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "118CDAA7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 217,
											"name": "tag",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14,
											"end": 217,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 133,
											"end": 151,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14,
											"end": 217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 455,
											"end": 1065,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 455,
											"end": 1065,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 541,
											"end": 547,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 555,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 602,
											"end": 604,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 590,
											"end": 599,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 581,
											"end": 588,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 577,
											"end": 600,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 573,
											"end": 605,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 570,
											"end": 622,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 570,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 570,
											"end": 622,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 618,
											"end": 619,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 615,
											"end": 616,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 608,
											"end": 620,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 570,
											"end": 622,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 570,
											"end": 622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 658,
											"end": 667,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 645,
											"end": 668,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 691,
											"end": 709,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 683,
											"end": 689,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 680,
											"end": 710,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 677,
											"end": 727,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 677,
											"end": 727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 677,
											"end": 727,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 723,
											"end": 724,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 721,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 713,
											"end": 725,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 677,
											"end": 727,
											"name": "tag",
											"source": 6,
											"value": "131"
										},
										{
											"begin": 677,
											"end": 727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 746,
											"end": 768,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 746,
											"end": 768,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 799,
											"end": 803,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 791,
											"end": 804,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 791,
											"end": 804,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 787,
											"end": 814,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 777,
											"end": 832,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 777,
											"end": 832,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 828,
											"end": 829,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 825,
											"end": 826,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 818,
											"end": 830,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 777,
											"end": 832,
											"name": "tag",
											"source": 6,
											"value": "132"
										},
										{
											"begin": 777,
											"end": 832,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 868,
											"end": 870,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 855,
											"end": 871,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 894,
											"end": 912,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 886,
											"end": 892,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 883,
											"end": 913,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 880,
											"end": 930,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 880,
											"end": 930,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 880,
											"end": 930,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 926,
											"end": 927,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 923,
											"end": 924,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 916,
											"end": 928,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 880,
											"end": 930,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 880,
											"end": 930,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 979,
											"end": 986,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 974,
											"end": 976,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 964,
											"end": 970,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 961,
											"end": 962,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 957,
											"end": 971,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 953,
											"end": 955,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 949,
											"end": 972,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 945,
											"end": 977,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 942,
											"end": 987,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 939,
											"end": 1004,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 939,
											"end": 1004,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 939,
											"end": 1004,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1000,
											"end": 1001,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 998,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 990,
											"end": 1002,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 939,
											"end": 1004,
											"name": "tag",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 939,
											"end": 1004,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1031,
											"end": 1033,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1023,
											"end": 1034,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1023,
											"end": 1034,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1023,
											"end": 1034,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1023,
											"end": 1034,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1023,
											"end": 1034,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 1053,
											"end": 1059,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1053,
											"end": 1059,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 455,
											"end": 1065,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 455,
											"end": 1065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1070,
											"end": 1201,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1070,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1145,
											"end": 1176,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1145,
											"end": 1176,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1177,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1135,
											"end": 1177,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1125,
											"end": 1195,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 1125,
											"end": 1195,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1191,
											"end": 1192,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1189,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1181,
											"end": 1193,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1206,
											"end": 1453,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 1206,
											"end": 1453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1265,
											"end": 1271,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1320,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1306,
											"end": 1315,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1297,
											"end": 1304,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1293,
											"end": 1316,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1289,
											"end": 1321,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1338,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1286,
											"end": 1338,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1334,
											"end": 1335,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1331,
											"end": 1332,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1324,
											"end": 1336,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1338,
											"name": "tag",
											"source": 6,
											"value": "138"
										},
										{
											"begin": 1286,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1373,
											"end": 1382,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1360,
											"end": 1383,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 1417,
											"end": 1422,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 1392,
											"end": 1423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 1392,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1442,
											"end": 1447,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1206,
											"end": 1453,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1206,
											"end": 1453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 1642,
											"name": "tag",
											"source": 6,
											"value": "47"
										},
										{
											"begin": 1458,
											"end": 1642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1528,
											"end": 1534,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1583,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1569,
											"end": 1578,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1560,
											"end": 1567,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1556,
											"end": 1579,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1552,
											"end": 1584,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 1601,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 1601,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1549,
											"end": 1601,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1597,
											"end": 1598,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1595,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1587,
											"end": 1599,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 1601,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 1549,
											"end": 1601,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1620,
											"end": 1636,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1620,
											"end": 1636,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1458,
											"end": 1642,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1458,
											"end": 1642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2337,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 1990,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2192,
											"end": 2194,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2174,
											"end": 2195,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2231,
											"end": 2233,
											"name": "PUSH",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 2211,
											"end": 2229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2229,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2211,
											"end": 2229,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2204,
											"end": 2234,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F2070726F66697420746F2064697374726962757465"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "48"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2265,
											"end": 2267,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2250,
											"end": 2268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2250,
											"end": 2268,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2243,
											"end": 2296,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2328,
											"end": 2330,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 2313,
											"end": 2331,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2313,
											"end": 2331,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1990,
											"end": 2337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2342,
											"end": 2469,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 2342,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2403,
											"end": 2413,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 2398,
											"end": 2401,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2394,
											"end": 2414,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2391,
											"end": 2392,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2384,
											"end": 2415,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2434,
											"end": 2438,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2431,
											"end": 2432,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2424,
											"end": 2439,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2458,
											"end": 2462,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2455,
											"end": 2456,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2463,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2691,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 2474,
											"end": 2691,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2514,
											"end": 2515,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2540,
											"end": 2541,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2530,
											"end": 2662,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2584,
											"end": 2594,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 2579,
											"end": 2582,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2575,
											"end": 2595,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2572,
											"end": 2573,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2596,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2619,
											"end": 2623,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 2616,
											"end": 2617,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2609,
											"end": 2624,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2647,
											"end": 2651,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2644,
											"end": 2645,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2637,
											"end": 2652,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2530,
											"end": 2662,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 2530,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2676,
											"end": 2685,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2676,
											"end": 2685,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2474,
											"end": 2691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2878,
											"end": 3129,
											"name": "tag",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 2878,
											"end": 3129,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 2954,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3001,
											"end": 3003,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2989,
											"end": 2998,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2980,
											"end": 2987,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2976,
											"end": 2999,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2972,
											"end": 3004,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3021,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3021,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2969,
											"end": 3021,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3017,
											"end": 3018,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3015,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2969,
											"end": 3021,
											"name": "tag",
											"source": 6,
											"value": "149"
										},
										{
											"begin": 2969,
											"end": 3021,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3049,
											"end": 3058,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3043,
											"end": 3059,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3093,
											"end": 3098,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3068,
											"end": 3099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 3068,
											"end": 3099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3269,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3134,
											"end": 3269,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3173,
											"end": 3176,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3194,
											"end": 3211,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3194,
											"end": 3211,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3194,
											"end": 3211,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3191,
											"end": 3234,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3191,
											"end": 3234,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3214,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3214,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3214,
											"end": 3232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3214,
											"end": 3232,
											"name": "tag",
											"source": 6,
											"value": "153"
										},
										{
											"begin": 3214,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3261,
											"end": 3262,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3250,
											"end": 3263,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3250,
											"end": 3263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3134,
											"end": 3269,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3274,
											"end": 3442,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 3274,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3347,
											"end": 3356,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 3378,
											"end": 3387,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3378,
											"end": 3387,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3395,
											"end": 3410,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3375,
											"end": 3412,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3365,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3365,
											"end": 3436,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3416,
											"end": 3434,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3416,
											"end": 3434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3434,
											"name": "tag",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3416,
											"end": 3434,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3274,
											"end": 3442,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3274,
											"end": 3442,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3274,
											"end": 3442,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3274,
											"end": 3442,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3274,
											"end": 3442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3447,
											"end": 3575,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 3447,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3514,
											"end": 3523,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3514,
											"end": 3523,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3514,
											"end": 3523,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3546,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3569,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3532,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3532,
											"end": 3569,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "156"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 3549,
											"end": 3567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4252,
											"end": 4379,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 4252,
											"end": 4379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4313,
											"end": 4323,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 4308,
											"end": 4311,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 4304,
											"end": 4324,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 4301,
											"end": 4302,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4294,
											"end": 4325,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4348,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 4341,
											"end": 4342,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4334,
											"end": 4349,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4368,
											"end": 4372,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4365,
											"end": 4366,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4358,
											"end": 4373,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"NFT-versions/rental.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"distributeAssetProfit(uint256[])": "e4463b51",
							"distributeProfit()": "8a160b54",
							"nftContract()": "d56d229d",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nftContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"assetId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalProfit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shareCount\",\"type\":\"uint256\"}],\"name\":\"AssetProfitDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalProfit\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shareCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountPerShare\",\"type\":\"uint256\"}],\"name\":\"ProfitDistributed\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"distributeAssetProfit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"distributeProfit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftContract\",\"outputs\":[{\"internalType\":\"contract IERC721Enumerable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"NFT-versions/rental.sol\":\"RentalDistribution\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0x3d6954a93ac198a2ffa384fa58ccf18e7e235263e051a394328002eff4e073de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f58c799bd939d3951c94893e83ef86acd56989d1d7db7f9d180c515e29e28ff\",\"dweb:/ipfs/QmTgAxHAAys4kq9ZfU9YB24MWYoHLGAKSxnYUigPFrNW7g\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"NFT-versions/rental.sol\":{\"keccak256\":\"0x8e578b05d73c6cc8bf67fb6f3be60eaad4d73f106c6ff69866d1fe3dbd6e7e92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a988ab3d19fd93a47d9c91ba6ef22f464c7e9d8b438484dadc705d161313411\",\"dweb:/ipfs/QmcMsKoYLnY76ceVL57gzmA1DS6VgaetahLcL6am2J7NjL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "NFT-versions/rental.sol:RentalDistribution",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 347,
								"contract": "NFT-versions/rental.sol:RentalDistribution",
								"label": "nftContract",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC721Enumerable)296"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721Enumerable)296": {
								"encoding": "inplace",
								"label": "contract IERC721Enumerable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							326
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 327,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 326,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 326,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								326
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 308,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							338
						],
						"IERC721": [
							264
						]
					},
					"id": 265,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 265,
							"sourceUnit": 339,
							"src": "134:62:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 338,
										"src": "142:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 153,
										"name": "IERC165",
										"nameLocations": [
											"288:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 338,
										"src": "288:7:1"
									},
									"id": 154,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:1"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 152,
								"nodeType": "StructuredDocumentation",
								"src": "198:68:1",
								"text": " @dev Required interface of an ERC-721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 264,
							"linearizedBaseContracts": [
								264,
								338
							],
							"name": "IERC721",
							"nameLocation": "277:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 155,
										"nodeType": "StructuredDocumentation",
										"src": "302:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 163,
									"name": "Transfer",
									"nameLocation": "401:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "426:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "410:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "410:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 159,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "448:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "432:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "432:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 161,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "468:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 163,
												"src": "452:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "409:67:1"
									},
									"src": "395:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 164,
										"nodeType": "StructuredDocumentation",
										"src": "483:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 172,
									"name": "Approval",
									"nameLocation": "588:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "613:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "597:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 168,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "636:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "620:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "620:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 170,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "662:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "646:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "596:74:1"
									},
									"src": "582:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "677:117:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 181,
									"name": "ApprovalForAll",
									"nameLocation": "805:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "836:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "820:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "859:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "843:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "843:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "874:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "869:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 178,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "869:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:64:1"
									},
									"src": "799:85:1"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "890:76:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 189,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "980:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "998:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "990:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:1"
									},
									"returnParameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1036:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 189,
												"src": "1028:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:17:1"
									},
									"scope": 264,
									"src": "971:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "1051:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1196:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1212:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1204:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1204:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1203:17:1"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1252:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 197,
												"src": "1244:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1244:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:15:1"
									},
									"scope": 264,
									"src": "1187:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "1265:565:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 209,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1844:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1869:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1861:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1883:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1875:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1875:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1895:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1887:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1919:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "1904:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 205,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1904:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:64:1"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:1"
									},
									"scope": 264,
									"src": "1835:99:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "1940:706:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2660:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2699:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2691:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2711:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "2703:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 215,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2703:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2676:43:1"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2728:0:1"
									},
									"scope": 264,
									"src": "2651:78:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "2735:733:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 229,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3482:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3503:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3495:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3517:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3509:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 223,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3529:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "3521:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3521:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3494:43:1"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3546:0:1"
									},
									"scope": 264,
									"src": "3473:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "3553:452:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4019:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4035:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "4027:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4027:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4047:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "4039:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4039:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4026:29:1"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4064:0:1"
									},
									"scope": 264,
									"src": "4010:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "4071:315:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 245,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4400:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4426:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "4418:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4418:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4441:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 245,
												"src": "4436:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 241,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4436:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4417:33:1"
									},
									"returnParameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4459:0:1"
									},
									"scope": 264,
									"src": "4391:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 246,
										"nodeType": "StructuredDocumentation",
										"src": "4466:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 253,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4619:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4639:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "4631:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:17:1"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4679:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "4671:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4671:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4670:18:1"
									},
									"scope": 264,
									"src": "4610:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "4695:138:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 263,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4847:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4872:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4864:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4864:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4887:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4879:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4879:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4863:33:1"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4920:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 260,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4920:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4919:6:1"
									},
									"scope": 264,
									"src": "4838:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 265,
							"src": "267:4661:1",
							"usedErrors": [],
							"usedEvents": [
								163,
								172,
								181
							]
						}
					],
					"src": "108:4821:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
					"exportedSymbols": {
						"IERC721": [
							264
						],
						"IERC721Enumerable": [
							296
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "129:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 268,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 265,
							"src": "155:39:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 267,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 264,
										"src": "163:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 270,
										"name": "IERC721",
										"nameLocations": [
											"364:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 264,
										"src": "364:7:2"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "364:7:2"
								}
							],
							"canonicalName": "IERC721Enumerable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 269,
								"nodeType": "StructuredDocumentation",
								"src": "196:136:2",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 296,
							"linearizedBaseContracts": [
								296,
								264,
								338
							],
							"name": "IERC721Enumerable",
							"nameLocation": "343:17:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "378:82:2",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 277,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "474:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "485:2:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 277,
												"src": "511:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "511:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "510:9:2"
									},
									"scope": 296,
									"src": "465:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 278,
										"nodeType": "StructuredDocumentation",
										"src": "526:171:2",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 287,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "711:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "739:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "731:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "731:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "754:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "746:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "746:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "730:30:2"
									},
									"returnParameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "784:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "783:9:2"
									},
									"scope": 296,
									"src": "702:91:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 288,
										"nodeType": "StructuredDocumentation",
										"src": "799:164:2",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 295,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nameLocation": "977:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "998:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "990:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "990:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "989:15:2"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "1028:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:9:2"
									},
									"scope": 296,
									"src": "968:69:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 297,
							"src": "333:706:2",
							"usedErrors": [],
							"usedEvents": [
								163,
								172,
								181
							]
						}
					],
					"src": "129:911:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							326
						]
					},
					"id": 327,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 326,
							"linearizedBaseContracts": [
								326
							],
							"name": "Context",
							"nameLocation": "642:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "718:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 304,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 303,
												"id": 306,
												"nodeType": "Return",
												"src": "728:17:3"
											}
										]
									},
									"id": 308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:3"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "709:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:3"
									},
									"scope": 326,
									"src": "656:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "825:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 313,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 312,
												"id": 315,
												"nodeType": "Return",
												"src": "835:15:3"
											}
										]
									},
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:3"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "809:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 310,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:3"
									},
									"scope": 326,
									"src": "758:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "935:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 321,
												"id": 323,
												"nodeType": "Return",
												"src": "945:8:3"
											}
										]
									},
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:3"
									},
									"returnParameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "926:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:3"
									},
									"scope": 326,
									"src": "863:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 327,
							"src": "624:338:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							338
						]
					},
					"id": 339,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 328,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 329,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:4",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 338,
							"linearizedBaseContracts": [
								338
							],
							"name": "IERC165",
							"nameLocation": "432:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "818:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 331,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:4"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "861:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 334,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:4"
									},
									"scope": 338,
									"src": "791:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 339,
							"src": "422:447:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:4"
				},
				"id": 4
			},
			"NFT-versions/rental.sol": {
				"ast": {
					"absolutePath": "NFT-versions/rental.sol",
					"exportedSymbols": {
						"Context": [
							326
						],
						"IERC721": [
							264
						],
						"IERC721Enumerable": [
							296
						],
						"Ownable": [
							147
						],
						"RentalDistribution": [
							573
						]
					},
					"id": 574,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 340,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
							"id": 341,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 574,
							"sourceUnit": 297,
							"src": "57:79:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 342,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 574,
							"sourceUnit": 148,
							"src": "137:52:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 343,
										"name": "Ownable",
										"nameLocations": [
											"222:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "222:7:5"
									},
									"id": 344,
									"nodeType": "InheritanceSpecifier",
									"src": "222:7:5"
								}
							],
							"canonicalName": "RentalDistribution",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 573,
							"linearizedBaseContracts": [
								573,
								147,
								326
							],
							"name": "RentalDistribution",
							"nameLocation": "200:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "d56d229d",
									"id": 347,
									"mutability": "mutable",
									"name": "nftContract",
									"nameLocation": "261:11:5",
									"nodeType": "VariableDeclaration",
									"scope": 573,
									"src": "236:36:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721Enumerable_$296",
										"typeString": "contract IERC721Enumerable"
									},
									"typeName": {
										"id": 346,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 345,
											"name": "IERC721Enumerable",
											"nameLocations": [
												"236:17:5"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 296,
											"src": "236:17:5"
										},
										"referencedDeclaration": 296,
										"src": "236:17:5",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721Enumerable_$296",
											"typeString": "contract IERC721Enumerable"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "35a0431ae8ac3e583720a9e25576a99b5b4bb2cb375a867047eef1e6ea81b26f",
									"id": 355,
									"name": "ProfitDistributed",
									"nameLocation": "289:17:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalProfit",
												"nameLocation": "315:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "307:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"indexed": false,
												"mutability": "mutable",
												"name": "shareCount",
												"nameLocation": "336:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "328:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "328:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 353,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountPerShare",
												"nameLocation": "356:14:5",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "348:22:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 352,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "348:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "306:65:5"
									},
									"src": "283:89:5"
								},
								{
									"anonymous": false,
									"eventSelector": "81a67a0f9c17e8dc23a9b3f3f9f336df13207de6b0972356a4a4bbbd48b04437",
									"id": 363,
									"name": "AssetProfitDistributed",
									"nameLocation": "383:22:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"indexed": true,
												"mutability": "mutable",
												"name": "assetId",
												"nameLocation": "422:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "406:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalProfit",
												"nameLocation": "439:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "431:19:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"indexed": false,
												"mutability": "mutable",
												"name": "shareCount",
												"nameLocation": "460:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "452:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "452:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:66:5"
									},
									"src": "377:95:5"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "567:69:5",
										"statements": [
											{
												"expression": {
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "577:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721Enumerable_$296",
															"typeString": "contract IERC721Enumerable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 375,
																"name": "_nftContractAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 367,
																"src": "609:19:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 374,
															"name": "IERC721Enumerable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 296,
															"src": "591:17:5",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721Enumerable_$296_$",
																"typeString": "type(contract IERC721Enumerable)"
															}
														},
														"id": 376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "591:38:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721Enumerable_$296",
															"typeString": "contract IERC721Enumerable"
														}
													},
													"src": "577:52:5",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721Enumerable_$296",
														"typeString": "contract IERC721Enumerable"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "577:52:5"
											}
										]
									},
									"id": 380,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 370,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 365,
													"src": "553:12:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 371,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 369,
												"name": "Ownable",
												"nameLocations": [
													"545:7:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "545:7:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "545:21:5"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "502:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "494:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "494:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "_nftContractAddress",
												"nameLocation": "524:19:5",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "516:27:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "516:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "493:51:5"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "567:0:5"
									},
									"scope": 573,
									"src": "482:154:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 471,
										"nodeType": "Block",
										"src": "757:746:5",
										"statements": [
											{
												"assignments": [
													386
												],
												"declarations": [
													{
														"constant": false,
														"id": 386,
														"mutability": "mutable",
														"name": "totalNFTs",
														"nameLocation": "775:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 471,
														"src": "767:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 385,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "767:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 390,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 387,
															"name": "nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "787:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Enumerable_$296",
																"typeString": "contract IERC721Enumerable"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "799:11:5",
														"memberName": "totalSupply",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 277,
														"src": "787:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "787:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "767:45:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 392,
																"name": "totalNFTs",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "830:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 393,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "842:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "830:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f204e465473206d696e746564",
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "845:16:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e0e1ed6cf62a03d813104220f1caef78eacd9c59e4332e709b0784b49970fba",
																"typeString": "literal_string \"No NFTs minted\""
															},
															"value": "No NFTs minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e0e1ed6cf62a03d813104220f1caef78eacd9c59e4332e709b0784b49970fba",
																"typeString": "literal_string \"No NFTs minted\""
															}
														],
														"id": 391,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "822:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "822:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "822:40:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 399,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "880:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 400,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "884:5:5",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "880:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 401,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "892:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "880:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2070726f66697420746f2064697374726962757465",
															"id": 403,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "895:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d88608cfefd3a8e8263a1dec1a0758975c25a5566bff550c64603b30adf2eec5",
																"typeString": "literal_string \"No profit to distribute\""
															},
															"value": "No profit to distribute"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d88608cfefd3a8e8263a1dec1a0758975c25a5566bff550c64603b30adf2eec5",
																"typeString": "literal_string \"No profit to distribute\""
															}
														],
														"id": 398,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "872:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "872:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 405,
												"nodeType": "ExpressionStatement",
												"src": "872:49:5"
											},
											{
												"assignments": [
													407
												],
												"declarations": [
													{
														"constant": false,
														"id": 407,
														"mutability": "mutable",
														"name": "profitPerNFT",
														"nameLocation": "948:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 471,
														"src": "940:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 406,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "940:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 408,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "963:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 409,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "967:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "963:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 410,
														"name": "totalNFTs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "975:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "963:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "940:44:5"
											},
											{
												"body": {
													"id": 438,
													"nodeType": "Block",
													"src": "1085:114:5",
													"statements": [
														{
															"assignments": [
																424
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 424,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "1107:5:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 438,
																	"src": "1099:13:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 423,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1099:7:5",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 429,
															"initialValue": {
																"arguments": [
																	{
																		"id": 427,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 414,
																		"src": "1135:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 425,
																		"name": "nftContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "1115:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Enumerable_$296",
																			"typeString": "contract IERC721Enumerable"
																		}
																	},
																	"id": 426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1127:7:5",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 197,
																	"src": "1115:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1115:22:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1099:38:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 435,
																		"name": "profitPerNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "1175:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 432,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 424,
																				"src": "1159:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 431,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1151:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 430,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1151:8:5",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1151:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1166:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1151:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1151:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "ExpressionStatement",
															"src": "1151:37:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 417,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "1064:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 418,
														"name": "totalNFTs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "1069:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1064:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"initializationExpression": {
													"assignments": [
														414
													],
													"declarations": [
														{
															"constant": false,
															"id": 414,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1057:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 439,
															"src": "1049:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 413,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1049:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 416,
													"initialValue": {
														"hexValue": "31",
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1061:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1049:13:5"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1080:3:5",
														"subExpression": {
															"id": 420,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "1080:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 422,
													"nodeType": "ExpressionStatement",
													"src": "1080:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1044:155:5"
											},
											{
												"assignments": [
													441
												],
												"declarations": [
													{
														"constant": false,
														"id": 441,
														"mutability": "mutable",
														"name": "remaining",
														"nameLocation": "1280:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 471,
														"src": "1272:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 440,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1272:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 449,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 442,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1292:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1296:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1292:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 444,
																	"name": "profitPerNFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "1305:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 445,
																	"name": "totalNFTs",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 386,
																	"src": "1320:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1305:24:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 447,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1304:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1292:38:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1272:58:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 450,
														"name": "remaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "1344:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 451,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1356:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1344:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 463,
												"nodeType": "IfStatement",
												"src": "1340:80:5",
												"trueBody": {
													"id": 462,
													"nodeType": "Block",
													"src": "1359:61:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 459,
																		"name": "remaining",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "1399:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 455,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 67,
																					"src": "1381:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 456,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1381:7:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1373:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 453,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1373:8:5",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1373:16:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1390:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "1373:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1373:36:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 461,
															"nodeType": "ExpressionStatement",
															"src": "1373:36:5"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 465,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1461:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1465:5:5",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "1461:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 467,
															"name": "totalNFTs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 386,
															"src": "1472:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 468,
															"name": "profitPerNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "1483:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "ProfitDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 355,
														"src": "1443:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1443:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "EmitStatement",
												"src": "1438:58:5"
											}
										]
									},
									"functionSelector": "8a160b54",
									"id": 472,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 383,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 382,
												"name": "onlyOwner",
												"nameLocations": [
													"747:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "747:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "747:9:5"
										}
									],
									"name": "distributeProfit",
									"nameLocation": "711:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "727:2:5"
									},
									"returnParameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "757:0:5"
									},
									"scope": 573,
									"src": "702:801:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "1711:712:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 481,
																	"name": "tokenIds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 475,
																	"src": "1729:8:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																		"typeString": "uint256[] calldata"
																	}
																},
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1738:6:5",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "1729:15:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1747:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1729:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e7320737065636966696564",
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1750:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30518725a48d5c49b7d45dba393c4ac05a7db5cc238fc8c0a150357d1b12376f",
																"typeString": "literal_string \"No tokens specified\""
															},
															"value": "No tokens specified"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30518725a48d5c49b7d45dba393c4ac05a7db5cc238fc8c0a150357d1b12376f",
																"typeString": "literal_string \"No tokens specified\""
															}
														],
														"id": 480,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1721:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 487,
												"nodeType": "ExpressionStatement",
												"src": "1721:51:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 489,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1790:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1794:5:5",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "1790:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1802:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1790:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f2070726f66697420746f2064697374726962757465",
															"id": 493,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1805:25:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d88608cfefd3a8e8263a1dec1a0758975c25a5566bff550c64603b30adf2eec5",
																"typeString": "literal_string \"No profit to distribute\""
															},
															"value": "No profit to distribute"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d88608cfefd3a8e8263a1dec1a0758975c25a5566bff550c64603b30adf2eec5",
																"typeString": "literal_string \"No profit to distribute\""
															}
														],
														"id": 488,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1782:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1782:49:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "1782:49:5"
											},
											{
												"assignments": [
													497
												],
												"declarations": [
													{
														"constant": false,
														"id": 497,
														"mutability": "mutable",
														"name": "profitPerNFT",
														"nameLocation": "1858:12:5",
														"nodeType": "VariableDeclaration",
														"scope": 567,
														"src": "1850:20:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 496,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1850:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 503,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 498,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1873:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1877:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "1873:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"expression": {
															"id": 500,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "1885:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1894:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1885:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1873:27:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1850:50:5"
											},
											{
												"body": {
													"id": 532,
													"nodeType": "Block",
													"src": "2007:124:5",
													"statements": [
														{
															"assignments": [
																516
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 516,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "2029:5:5",
																	"nodeType": "VariableDeclaration",
																	"scope": 532,
																	"src": "2021:13:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 515,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2021:7:5",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 523,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 519,
																			"name": "tokenIds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 475,
																			"src": "2057:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																				"typeString": "uint256[] calldata"
																			}
																		},
																		"id": 521,
																		"indexExpression": {
																			"id": 520,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 505,
																			"src": "2066:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2057:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 517,
																		"name": "nftContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 347,
																		"src": "2037:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Enumerable_$296",
																			"typeString": "contract IERC721Enumerable"
																		}
																	},
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2049:7:5",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 197,
																	"src": "2037:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2037:32:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2021:48:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 529,
																		"name": "profitPerNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 497,
																		"src": "2107:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 526,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 516,
																				"src": "2091:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2083:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 524,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2083:8:5",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2083:14:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2098:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "2083:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2083:37:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 531,
															"nodeType": "ExpressionStatement",
															"src": "2083:37:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 508,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 505,
														"src": "1981:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 509,
															"name": "tokenIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "1985:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																"typeString": "uint256[] calldata"
															}
														},
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1994:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1985:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1981:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 533,
												"initializationExpression": {
													"assignments": [
														505
													],
													"declarations": [
														{
															"constant": false,
															"id": 505,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1974:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 533,
															"src": "1966:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 504,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1966:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 507,
													"initialValue": {
														"hexValue": "30",
														"id": 506,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1978:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1966:13:5"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2002:3:5",
														"subExpression": {
															"id": 512,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 505,
															"src": "2002:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 514,
													"nodeType": "ExpressionStatement",
													"src": "2002:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1961:170:5"
											},
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"mutability": "mutable",
														"name": "remaining",
														"nameLocation": "2194:9:5",
														"nodeType": "VariableDeclaration",
														"scope": 567,
														"src": "2186:17:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 534,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2186:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 544,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 536,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2206:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2210:5:5",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "2206:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 538,
																	"name": "profitPerNFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 497,
																	"src": "2219:12:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"expression": {
																		"id": 539,
																		"name": "tokenIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 475,
																		"src": "2234:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																			"typeString": "uint256[] calldata"
																		}
																	},
																	"id": 540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2243:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "2234:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2219:30:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 542,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2218:32:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2206:44:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2186:64:5"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 545,
														"name": "remaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "2264:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2276:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2264:13:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 558,
												"nodeType": "IfStatement",
												"src": "2260:80:5",
												"trueBody": {
													"id": 557,
													"nodeType": "Block",
													"src": "2279:61:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 554,
																		"name": "remaining",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 535,
																		"src": "2319:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 550,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 67,
																					"src": "2301:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 551,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "2301:7:5",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2293:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_payable_$",
																				"typeString": "type(address payable)"
																			},
																			"typeName": {
																				"id": 548,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2293:8:5",
																				"stateMutability": "payable",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2293:16:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2310:8:5",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"src": "2293:25:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2293:36:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 556,
															"nodeType": "ExpressionStatement",
															"src": "2293:36:5"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2386:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"expression": {
																"id": 561,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2389:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2393:5:5",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "2389:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 563,
																"name": "tokenIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 475,
																"src": "2400:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
																	"typeString": "uint256[] calldata"
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2409:6:5",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2400:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 559,
														"name": "AssetProfitDistributed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "2363:22:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2363:53:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "EmitStatement",
												"src": "2358:58:5"
											}
										]
									},
									"functionSelector": "e4463b51",
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 478,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 477,
												"name": "onlyOwner",
												"nameLocations": [
													"1701:9:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1701:9:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1701:9:5"
										}
									],
									"name": "distributeAssetProfit",
									"nameLocation": "1633:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "tokenIds",
												"nameLocation": "1674:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1655:27:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 473,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1655:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 474,
													"nodeType": "ArrayTypeName",
													"src": "1655:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1654:29:5"
									},
									"returnParameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1711:0:5"
									},
									"scope": 573,
									"src": "1624:799:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "2493:2:5",
										"statements": []
									},
									"id": 572,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2473:2:5"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2493:0:5"
									},
									"scope": 573,
									"src": "2466:29:5",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 574,
							"src": "191:2306:5",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								355,
								363
							]
						}
					],
					"src": "32:2466:5"
				},
				"id": 5
			}
		}
	}
}